(()=>{var e={282:(e,n,t)=>{"use strict";t.d(n,{A:()=>a});var o=t(354),i=t.n(o),r=t(314),s=t.n(r)()(i());s.push([e.id,'/** CSS reset */\n\n.button-reset {\n    border: none;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    overflow: visible;\n    background: transparent;\n    color: inherit;\n    font: inherit;\n    line-height: normal;\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n    -webkit-appearance: none;\n}\n\n\n\n/** add block */\n.add-block {\n    margin: 0;\n    padding: 0;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #000;\n    background-color: white;\n    transition: all 0.3s ease;\n    box-sizing: border-box;\n    margin-left: 1.3rem;\n}\n\n.add-block-wrapper {\n    width: 100%;\n    height: 3.125rem;\n}\n\n.add-block-wrapper:hover .add-block {\n    display: flex;\n}\n\n/** and add block */\n\n\n\n/** List  **/\nol.johannes-content-element,\nul.johannes-content-element {\n    padding-left: 1rem !important;\n}\n\n\n\n.johannes-content-element li>button {\n    /* display: none; */\n    display: none;\n    position: absolute;\n    margin-left: 10px;\n    top: 0;\n\n    flex-direction: row;\n    align-items: start;\n    justify-content: start;\n\n}\n\n.johannes-content-element li {\n    position: relative;\n}\n\n.johannes-content-element li::before {\n    margin-left: 4px;\n}\n\n.johannes-content-element li:hover>button {\n    /* display: inline-block; */\n    display: inline-flex;\n\n}\n\np.johannes-content-element {\n    display: inline-block;\n    line-height: 1;\n    margin: 0;\n    padding: 0;\n}\n\n.johannes-content-element .checkbox-list {\n    list-style-type: none;\n    padding-left: 0 !important;\n}\n\n\n.johannes-content-element .checkbox-list li {\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n}\n\n\n.johannes-content-element ul.checkbox-list input[type="checkbox"]:checked+span {\n    text-decoration: line-through;\n}\n\nul.johannes-content-element:not(.checkbox-list),\nol.johannes-content-element:not(.checkbox-list) {\n    padding-left: 1.5rem !important;\n}\n\n/** and list **/\n\n\n\n.block>.drag-handler {\n    color: #84888d;\n    visibility: hidden;\n    cursor: grab;\n    align-self: start;\n\n    /* background-color: pink; */\n    padding-top: 0.33rem;\n    position: absolute;    \n}\n\n.drag-handler svg {\n    /* background-color: red; */\n}\n\n.drag-handler svg use {\n    /* background-color: blue; */\n}\n\n.drag-handler:active {\n    cursor: grabbing;\n}\n\n.block {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 1rem;\n    /* margin-left: 20px; */\n    position: relative;\n}\n\n.block > *:not(.drag-handler) {\n    /* Propriedade desejada */\n    padding-left: 20px;\n}\n\n.block:hover .drag-handler {\n    visibility: visible;\n    vertical-align: top;\n    justify-content: start;\n}\n\n.drop-line {\n    height: 1rem;\n    background-color: #84888d;\n    width: 100%;\n}\n\n\n.title h1 {\n    margin-left: 1.3rem;\n}\n\nh1[data-placeholder]:empty:before {\n    content: attr(data-placeholder);\n    color: #84888d !important;\n    display: block;\n}\n\nh1[data-placeholder]:focus:before {}\n\n\n*[contenteditable="true"]:not(h1):empty:before {\n    content: attr(data-placeholder);\n    color: #84888acd;\n    display: none;\n}\n\n*[contenteditable="true"]:not(h1):empty:hover:before {\n    display: block;\n}\n\ncite[contenteditable="true"]:empty:before {\n    display: block;\n}\n\n*[contenteditable="true"]:not(h1)[data-placeholder]:empty:focus:before {\n    content: attr(data-placeholder);\n    color: #84888acd !important;\n    display: block;\n}\n\n\n\nh1 {\n    font-size: 2.5rem;\n    font-weight: bolder !important;\n}\n\n.johannes-editor {\n    width: 100%;\n\n}\n\n.content {\n    width: 100%;\n    box-sizing: border-box;\n\n\n}\n\npre {\n    width: 100%;\n}\n\n[contenteditable] {\n    outline: none;\n}\n\nbody {\n    height: 2000px;\n    background-color: #f0f0f1 !important;\n\n    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n}\n\n\n.editor {\n    display: flex;\n    margin-top: 80px;\n}\n\np {\n    color: #242424;\n}\n\n\n.block,\n.block * {\n    user-select: text;\n}\n\n\n.johannes-content-element {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    /* background-color: green; */\n}\n\n\n#johannesEditor {\n    width: 60%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.johannes-editor hr {\n    width: 100%;\n    height: 2px;\n    visibility: visible;\n    border: none;\n    border-bottom: 1px solid rgba(55, 53, 47, 0.16);\n}\n\n\n\n.johannes-editor blockquote {\n    margin: 0.5rem 0;\n    padding-left: 20px;\n    border-left: 4px solid rgb(55, 53, 47);\n    font-style: italic\n}\n\n.johannes-editor cite {\n    padding-top: 1rem !important;\n    display: inline-block;\n}\n\n\n.johannes-editor cite::before {\n    content: \'â€” \';\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#linkBox {\n    border-radius: 2px;\n    padding: 20px;\n    background-color: #f9f9f9;\n\n\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(0, 0, 0, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n\n    border: 1px solid #d0d0d0;\n    width: fit-content;\n    z-index: 999999;\n    color: rgb(120, 119, 116);\n    border-radius: none;\n}\n\n\n#linkBox input {\n    width: 316px;\n    padding: 8px 40px 8px 16px;\n    /* border-color: #d0d0d0; */\n\n    border: 1px solid #949494;\n    /* border-radius: 4px; */\n    height: 24px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n\n#linkBox input::selection,\n#linkBox input:focus {\n    border-radius: none;\n}\n\n\n\n\n\n\n\n\n/** Text formatting Bar **/\n\n\n\n#floatingToolbar {\n    justify-content: space-between;\n    padding: 8px 16px;\n    background-color: #f9f9f9;\n    width: fit-content;\n    z-index: 999999;\n    position: absolute;\n    user-select: none;\n}\n\n/* TODO: remove this*/\nspan {\n    font-family: Arial, sans-serif;\n}\n\n\n#floatingToolbar .item {\n    color: rgb(120, 119, 116);\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#floatingToolbar .item>button {\n\n    display: inline-flex;\n    align-items: center;\n}\n\n\n#floatingToolbar select {\n    color: rgb(120, 119, 116);\n    border: none;\n    font-size: 0.85rem;\n    background-color: inherit;\n}\n\n.select-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.select-wrapper ul {\n    position: absolute;\n    background: #f9f9f9;\n    flex-direction: column;\n    width: 180px;\n    padding-bottom: 0.5rem;\n    padding-left: 5px;\n    padding-right: 5px;\n    top: 2.2rem;\n    color: rgb(55, 53, 47);\n}\n\n.select-wrapper ul li {\n    /* display: flex;\n    flex-direction: row !important;\n    background-color: yellow; */\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    padding: 3px 5px;\n    border-radius: 3px;\n    user-select: none !important;\n\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.select-wrapper ul li .option-image {\n    width: 22px;\n    height: 22px;\n    color: #242424;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.select-wrapper ul li .option-image svg {\n    color: #4f4f4f;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.text-formatting-select-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n#turnIntoButton span {\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n\n}\n\n#turnIntoButton svg use {\n    margin: auto;\n}\n\n.select-wrapper {\n    position: relative;\n    color: rgb(120, 119, 116);\n}\n\n\n\n\n\n\n\n\n\n\ncode {\n    background-color: #d0d0d0;\n}\n\n\n\n\na:not([href]) {\n    background-color: #d3e3fd;\n}\n\n.text-formatting-button-active {\n    color: #2382e2;\n}\n\n.text-formatting-circle-active {\n    border-color: #2382e2 !important;\n}\n\n\n\n#moreTextOptionSelect {\n    position: absolute;\n}\n\n.moreTextOptionWrapper {\n    position: relative;\n}\n\n\n\n\n.select-wrapper ul>h3 {\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n\n.bgc-red {\n    background-color: #FDDEDE;\n}\n\n.bgc-green {\n    background-color: #D7F7DC;\n}\n\n.bgc-blue {\n    background-color: #D9EDF6;\n}\n\n.bgc-yellow {\n    background-color: #FAF4D1;\n}\n\n.bgc-grey {\n    background-color: #E1E0E0;\n}\n\np,\nmark {\n    line-height: 1;\n}\n\n#turnIntoSelect .option-image {\n    /* display: none !important; */\n}\n\n.border-less-image {\n    width: 24px;\n    height: 24px;\n}\n\n\n\n\n/** Block Options **/\n.soft-box-shadow {\n    margin: 0;\n    padding: 0;\n    border-radius: 2px;\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(216, 196, 196, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n    border: 1px solid #d0d0d0;\n}\n\n.block-options-wrapper {\n    z-index: 999999;\n    position: absolute;\n    display: none;\n}\n\n.block-options {\n    width: 19rem;\n    max-height: 19rem;\n    overflow-y: auto;\n}\n\n.block-options {\n    padding: 0 10px;\n    background: #f9f9f9;\n}\n\n.block-options section h2 {\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    padding-left: 5px;\n}\n\n.block-options .option {\n    padding: 0.3125rem 0.625rem;\n    margin: 0.3125rem 0;\n    cursor: pointer;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: left;\n    gap: 0.6rem;\n    border-radius: 3px;\n}\n\n.block-options .option:focus {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n.option-focused {\n    outline: none;\n    background-color: #e9e9e9;\n    border: none;\n}\n\n\n\n\n.block-options .option:focus-visible {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n/* .option-hover:hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n} */\n\n/* .select-wrapper>button, */\n\n/* #turnIntoButton,\n#colorTextButton {\n    padding-left: 4px;\n} */\n\n#turnIntoButton:not([disabled]):hover,\n#colorTextButton:not([disabled]):hover,\n#moreTextOptionButton:not([disabled]):hover,\n#floatingToolbar .item>button:not([disabled]):hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n}\n\nul .option-hover:not([disabled]):hover {\n    background-color: #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n}\n\n\n.option[focused="true"] {\n    background-color: #bde4ff;\n}\n\n\n\n\n\n.option-image {\n    width: 2.875rem;\n    height: 2.875rem;\n    border-radius: 3px;\n    border: 1px solid #ccc;\n    color: #4f4f4f;\n\n    /* color: #84888d; */\n    /* color: #242424; */\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    vertical-align: middle;\n    align-items: center;\n    background-color: #ffff;\n    box-sizing: border-box;\n}\n\n.option-image img {\n    max-width: 2.875rem;\n    max-height: 2.875rem;\n}\n\n.option-image svg {\n    margin: 0;\n    padding: 0;\n    padding: 0.625rem;\n    box-sizing: border-box;\n\n}\n\n.option-text * {\n    margin: 0;\n    padding: 0;\n\n}\n\n.option-text .block-title {\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.option-text .block-description {\n    font-size: small !important;\n}\n\n/** End Block Options **/\n\n\n\n#deleteBlockButton:hover svg,\n#deleteBlockButton:hover {\n    color: rgb(235, 87, 87) !important;\n}\n\n\n\n\n\n\n\n.johannes-editor *::selection {\n    background-color: rgba(211, 227, 253, 0.5) !important;\n}\n\n.johannes-editor mark,\n.johannes-editor * {\n    line-height: 1.5 !important;\n}\n\n.option {\n    justify-content: space-between;\n}\n\n.text-option {\n    display: flex;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n    gap: 10px;\n}\n\n\n\n\n:root {\n    font-size: 16px;\n    /* Tamanho padrÃ£o */\n}\n\n/* Para telas com densidade mÃ©dia */\n@media only screen and (-webkit-min-device-pixel-ratio: 2),\nonly screen and (min--moz-device-pixel-ratio: 2),\nonly screen and (min-resolution: 192dpi),\nonly screen and (min-resolution: 2dppx) {\n    :root {\n        font-size: 18px;\n        /* Aumenta o tamanho da fonte para telas de alta densidade */\n    }\n}\n\n/* Para telas com altÃ­ssima densidade */\n@media only screen and (-webkit-min-device-pixel-ratio: 3),\nonly screen and (min--moz-device-pixel-ratio: 3),\nonly screen and (min-resolution: 288dpi),\nonly screen and (min-resolution: 3dppx) {\n    :root {\n        font-size: 20px;\n        /* Ainda maior para telas de densidade muito alta */\n    }\n}',"",{version:3,sources:["webpack://./src/assets/css/main.css"],names:[],mappings:"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",sourcesContent:['/** CSS reset */\n\n.button-reset {\n    border: none;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    overflow: visible;\n    background: transparent;\n    color: inherit;\n    font: inherit;\n    line-height: normal;\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n    -webkit-appearance: none;\n}\n\n\n\n/** add block */\n.add-block {\n    margin: 0;\n    padding: 0;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #000;\n    background-color: white;\n    transition: all 0.3s ease;\n    box-sizing: border-box;\n    margin-left: 1.3rem;\n}\n\n.add-block-wrapper {\n    width: 100%;\n    height: 3.125rem;\n}\n\n.add-block-wrapper:hover .add-block {\n    display: flex;\n}\n\n/** and add block */\n\n\n\n/** List  **/\nol.johannes-content-element,\nul.johannes-content-element {\n    padding-left: 1rem !important;\n}\n\n\n\n.johannes-content-element li>button {\n    /* display: none; */\n    display: none;\n    position: absolute;\n    margin-left: 10px;\n    top: 0;\n\n    flex-direction: row;\n    align-items: start;\n    justify-content: start;\n\n}\n\n.johannes-content-element li {\n    position: relative;\n}\n\n.johannes-content-element li::before {\n    margin-left: 4px;\n}\n\n.johannes-content-element li:hover>button {\n    /* display: inline-block; */\n    display: inline-flex;\n\n}\n\np.johannes-content-element {\n    display: inline-block;\n    line-height: 1;\n    margin: 0;\n    padding: 0;\n}\n\n.johannes-content-element .checkbox-list {\n    list-style-type: none;\n    padding-left: 0 !important;\n}\n\n\n.johannes-content-element .checkbox-list li {\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n}\n\n\n.johannes-content-element ul.checkbox-list input[type="checkbox"]:checked+span {\n    text-decoration: line-through;\n}\n\nul.johannes-content-element:not(.checkbox-list),\nol.johannes-content-element:not(.checkbox-list) {\n    padding-left: 1.5rem !important;\n}\n\n/** and list **/\n\n\n\n.block>.drag-handler {\n    color: #84888d;\n    visibility: hidden;\n    cursor: grab;\n    align-self: start;\n\n    /* background-color: pink; */\n    padding-top: 0.33rem;\n    position: absolute;    \n}\n\n.drag-handler svg {\n    /* background-color: red; */\n}\n\n.drag-handler svg use {\n    /* background-color: blue; */\n}\n\n.drag-handler:active {\n    cursor: grabbing;\n}\n\n.block {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 1rem;\n    /* margin-left: 20px; */\n    position: relative;\n}\n\n.block > *:not(.drag-handler) {\n    /* Propriedade desejada */\n    padding-left: 20px;\n}\n\n.block:hover .drag-handler {\n    visibility: visible;\n    vertical-align: top;\n    justify-content: start;\n}\n\n.drop-line {\n    height: 1rem;\n    background-color: #84888d;\n    width: 100%;\n}\n\n\n.title h1 {\n    margin-left: 1.3rem;\n}\n\nh1[data-placeholder]:empty:before {\n    content: attr(data-placeholder);\n    color: #84888d !important;\n    display: block;\n}\n\nh1[data-placeholder]:focus:before {}\n\n\n*[contenteditable="true"]:not(h1):empty:before {\n    content: attr(data-placeholder);\n    color: #84888acd;\n    display: none;\n}\n\n*[contenteditable="true"]:not(h1):empty:hover:before {\n    display: block;\n}\n\ncite[contenteditable="true"]:empty:before {\n    display: block;\n}\n\n*[contenteditable="true"]:not(h1)[data-placeholder]:empty:focus:before {\n    content: attr(data-placeholder);\n    color: #84888acd !important;\n    display: block;\n}\n\n\n\nh1 {\n    font-size: 2.5rem;\n    font-weight: bolder !important;\n}\n\n.johannes-editor {\n    width: 100%;\n\n}\n\n.content {\n    width: 100%;\n    box-sizing: border-box;\n\n\n}\n\npre {\n    width: 100%;\n}\n\n[contenteditable] {\n    outline: none;\n}\n\nbody {\n    height: 2000px;\n    background-color: #f0f0f1 !important;\n\n    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n}\n\n\n.editor {\n    display: flex;\n    margin-top: 80px;\n}\n\np {\n    color: #242424;\n}\n\n\n.block,\n.block * {\n    user-select: text;\n}\n\n\n.johannes-content-element {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    /* background-color: green; */\n}\n\n\n#johannesEditor {\n    width: 60%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.johannes-editor hr {\n    width: 100%;\n    height: 2px;\n    visibility: visible;\n    border: none;\n    border-bottom: 1px solid rgba(55, 53, 47, 0.16);\n}\n\n\n\n.johannes-editor blockquote {\n    margin: 0.5rem 0;\n    padding-left: 20px;\n    border-left: 4px solid rgb(55, 53, 47);\n    font-style: italic\n}\n\n.johannes-editor cite {\n    padding-top: 1rem !important;\n    display: inline-block;\n}\n\n\n.johannes-editor cite::before {\n    content: \'â€” \';\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#linkBox {\n    border-radius: 2px;\n    padding: 20px;\n    background-color: #f9f9f9;\n\n\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(0, 0, 0, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n\n    border: 1px solid #d0d0d0;\n    width: fit-content;\n    z-index: 999999;\n    color: rgb(120, 119, 116);\n    border-radius: none;\n}\n\n\n#linkBox input {\n    width: 316px;\n    padding: 8px 40px 8px 16px;\n    /* border-color: #d0d0d0; */\n\n    border: 1px solid #949494;\n    /* border-radius: 4px; */\n    height: 24px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n\n#linkBox input::selection,\n#linkBox input:focus {\n    border-radius: none;\n}\n\n\n\n\n\n\n\n\n/** Text formatting Bar **/\n\n\n\n#floatingToolbar {\n    justify-content: space-between;\n    padding: 8px 16px;\n    background-color: #f9f9f9;\n    width: fit-content;\n    z-index: 999999;\n    position: absolute;\n    user-select: none;\n}\n\n/* TODO: remove this*/\nspan {\n    font-family: Arial, sans-serif;\n}\n\n\n#floatingToolbar .item {\n    color: rgb(120, 119, 116);\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#floatingToolbar .item>button {\n\n    display: inline-flex;\n    align-items: center;\n}\n\n\n#floatingToolbar select {\n    color: rgb(120, 119, 116);\n    border: none;\n    font-size: 0.85rem;\n    background-color: inherit;\n}\n\n.select-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.select-wrapper ul {\n    position: absolute;\n    background: #f9f9f9;\n    flex-direction: column;\n    width: 180px;\n    padding-bottom: 0.5rem;\n    padding-left: 5px;\n    padding-right: 5px;\n    top: 2.2rem;\n    color: rgb(55, 53, 47);\n}\n\n.select-wrapper ul li {\n    /* display: flex;\n    flex-direction: row !important;\n    background-color: yellow; */\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    padding: 3px 5px;\n    border-radius: 3px;\n    user-select: none !important;\n\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.select-wrapper ul li .option-image {\n    width: 22px;\n    height: 22px;\n    color: #242424;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.select-wrapper ul li .option-image svg {\n    color: #4f4f4f;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.text-formatting-select-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n#turnIntoButton span {\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n\n}\n\n#turnIntoButton svg use {\n    margin: auto;\n}\n\n.select-wrapper {\n    position: relative;\n    color: rgb(120, 119, 116);\n}\n\n\n\n\n\n\n\n\n\n\ncode {\n    background-color: #d0d0d0;\n}\n\n\n\n\na:not([href]) {\n    background-color: #d3e3fd;\n}\n\n.text-formatting-button-active {\n    color: #2382e2;\n}\n\n.text-formatting-circle-active {\n    border-color: #2382e2 !important;\n}\n\n\n\n#moreTextOptionSelect {\n    position: absolute;\n}\n\n.moreTextOptionWrapper {\n    position: relative;\n}\n\n\n\n\n.select-wrapper ul>h3 {\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n\n.bgc-red {\n    background-color: #FDDEDE;\n}\n\n.bgc-green {\n    background-color: #D7F7DC;\n}\n\n.bgc-blue {\n    background-color: #D9EDF6;\n}\n\n.bgc-yellow {\n    background-color: #FAF4D1;\n}\n\n.bgc-grey {\n    background-color: #E1E0E0;\n}\n\np,\nmark {\n    line-height: 1;\n}\n\n#turnIntoSelect .option-image {\n    /* display: none !important; */\n}\n\n.border-less-image {\n    width: 24px;\n    height: 24px;\n}\n\n\n\n\n/** Block Options **/\n.soft-box-shadow {\n    margin: 0;\n    padding: 0;\n    border-radius: 2px;\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(216, 196, 196, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n    border: 1px solid #d0d0d0;\n}\n\n.block-options-wrapper {\n    z-index: 999999;\n    position: absolute;\n    display: none;\n}\n\n.block-options {\n    width: 19rem;\n    max-height: 19rem;\n    overflow-y: auto;\n}\n\n.block-options {\n    padding: 0 10px;\n    background: #f9f9f9;\n}\n\n.block-options section h2 {\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    padding-left: 5px;\n}\n\n.block-options .option {\n    padding: 0.3125rem 0.625rem;\n    margin: 0.3125rem 0;\n    cursor: pointer;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: left;\n    gap: 0.6rem;\n    border-radius: 3px;\n}\n\n.block-options .option:focus {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n.option-focused {\n    outline: none;\n    background-color: #e9e9e9;\n    border: none;\n}\n\n\n\n\n.block-options .option:focus-visible {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n/* .option-hover:hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n} */\n\n/* .select-wrapper>button, */\n\n/* #turnIntoButton,\n#colorTextButton {\n    padding-left: 4px;\n} */\n\n#turnIntoButton:not([disabled]):hover,\n#colorTextButton:not([disabled]):hover,\n#moreTextOptionButton:not([disabled]):hover,\n#floatingToolbar .item>button:not([disabled]):hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n}\n\nul .option-hover:not([disabled]):hover {\n    background-color: #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n}\n\n\n.option[focused="true"] {\n    background-color: #bde4ff;\n}\n\n\n\n\n\n.option-image {\n    width: 2.875rem;\n    height: 2.875rem;\n    border-radius: 3px;\n    border: 1px solid #ccc;\n    color: #4f4f4f;\n\n    /* color: #84888d; */\n    /* color: #242424; */\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    vertical-align: middle;\n    align-items: center;\n    background-color: #ffff;\n    box-sizing: border-box;\n}\n\n.option-image img {\n    max-width: 2.875rem;\n    max-height: 2.875rem;\n}\n\n.option-image svg {\n    margin: 0;\n    padding: 0;\n    padding: 0.625rem;\n    box-sizing: border-box;\n\n}\n\n.option-text * {\n    margin: 0;\n    padding: 0;\n\n}\n\n.option-text .block-title {\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.option-text .block-description {\n    font-size: small !important;\n}\n\n/** End Block Options **/\n\n\n\n#deleteBlockButton:hover svg,\n#deleteBlockButton:hover {\n    color: rgb(235, 87, 87) !important;\n}\n\n\n\n\n\n\n\n.johannes-editor *::selection {\n    background-color: rgba(211, 227, 253, 0.5) !important;\n}\n\n.johannes-editor mark,\n.johannes-editor * {\n    line-height: 1.5 !important;\n}\n\n.option {\n    justify-content: space-between;\n}\n\n.text-option {\n    display: flex;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n    gap: 10px;\n}\n\n\n\n\n:root {\n    font-size: 16px;\n    /* Tamanho padrÃ£o */\n}\n\n/* Para telas com densidade mÃ©dia */\n@media only screen and (-webkit-min-device-pixel-ratio: 2),\nonly screen and (min--moz-device-pixel-ratio: 2),\nonly screen and (min-resolution: 192dpi),\nonly screen and (min-resolution: 2dppx) {\n    :root {\n        font-size: 18px;\n        /* Aumenta o tamanho da fonte para telas de alta densidade */\n    }\n}\n\n/* Para telas com altÃ­ssima densidade */\n@media only screen and (-webkit-min-device-pixel-ratio: 3),\nonly screen and (min--moz-device-pixel-ratio: 3),\nonly screen and (min-resolution: 288dpi),\nonly screen and (min-resolution: 3dppx) {\n    :root {\n        font-size: 20px;\n        /* Ainda maior para telas de densidade muito alta */\n    }\n}'],sourceRoot:""}]);const a=s},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&s[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},s=[],a=0;a<e.length;a++){var l=e[a],c=o.base?l[0]+o.base:l[0],d=r[c]||0,A="".concat(c," ").concat(d);r[c]=d+1;var p=t(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=i(u,o);o.byIndex=a,n.splice(a,0,{identifier:A,updater:h,references:1})}s.push(A)}return s}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var s=0;s<r.length;s++){var a=t(r[s]);n[a].references--}for(var l=o(e,i),c=0;c<r.length;c++){var d=t(r[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}r=l}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},54:()=>{},528:()=>{document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".johannes-editor");let n=null,t=document.createElement("div");t.classList.add("drop-line"),t.style.height="2px",t.style.display="none",e.addEventListener("dragstart",(e=>{e.target.classList.contains("drag-handler")&&(n=e.target.closest(".block"),n.setAttribute("draggable","true"),setTimeout((()=>{n.style.opacity="0.5"}),0))})),e.addEventListener("dragend",(()=>{setTimeout((()=>{n&&(n.style.opacity="",n.removeAttribute("draggable"),n=null),t.remove()}),0)})),e.addEventListener("dragover",(e=>{e.preventDefault();let o=e.target.closest(".block");if(o&&o!==n){let n=o.getBoundingClientRect(),i=n.y+n.height/2;e.clientY>i?o.nextElementSibling!==t&&o.insertAdjacentElement("afterend",t):o.previousElementSibling!==t&&o.insertAdjacentElement("beforebegin",t)}t.style.display="block"})),e.addEventListener("drop",(e=>{e.preventDefault(),t.parentElement&&(t.parentElement.insertBefore(n,t),t.remove())}))}))},167:()=>{let e=[],n=[];document.addEventListener("DOMContentLoaded",(function(){const t=document.querySelector(".content");if(t){function o(){const n=t.innerHTML;e.push(n)}t.addEventListener("input",(()=>{o()})),document.addEventListener("keydown",(o=>{o.ctrlKey&&"z"===o.key?(function(){if(e.length>0){const o=e.pop();n.push(t.innerHTML),t.innerHTML=o}}(),o.preventDefault()):o.ctrlKey&&"y"===o.key&&(function(){if(n.length>0){const o=n.pop();e.push(t.innerHTML),t.innerHTML=o}}(),o.preventDefault())})),o()}}))}},n={};function t(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.nc=void 0,(()=>{"use strict";var e={};t.r(e),t.d(e,{G0:()=>fe,EC:()=>ae,a0:()=>ce,LH:()=>se,Lz:()=>pe,j$:()=>le,Iv:()=>he,Jv:()=>Ae,pe:()=>ue});class n extends Error{constructor(e){super(`Service already registered: ${e}`),this.name="ServiceAlreadyRegisteredException"}}const o=n;class i extends Error{constructor(e){super(`Service not found: ${e}`),this.name="ServiceNotFoundException"}}const r=i;class s{static instance;services=new Map;constructor(){}static getInstance(){return s.instance||(s.instance=new s),s.instance}getInstanceOf(e){const n=this.services.get(e);if(!n)throw new r(e);return n}registerService(e,n){if(this.services.has(e))throw new o(e);this.services.set(e,n)}registerServices(e){e.forEach(((e,n)=>{this.registerService(n,e)}))}reset(){this.services.clear()}}const a=s;class l{creators;static _instance;static ELEMENT_TYPES={BLOCK_PARAGRAPH:"block-p",PARAGRAPH:"p",CHECKBOX_ITEM:"checkboxItem",LIST_ITEM:"listItem",BLOCK_HEADER_1:"h1",HEADER_2:"h2",HEADER_3:"h3",HEADER_4:"h4",HEADER_5:"h5",HEADER_6:"h6",DRAG_HANDLE_BUTTON:"drag-handle-button"};constructor(){if(l._instance)throw new Error("Use ElementFactoryService.getInstance() to get instance.");this.creators={},this.register(l.ELEMENT_TYPES.BLOCK_PARAGRAPH,l.blockParagraphCreator()),this.register(l.ELEMENT_TYPES.PARAGRAPH,l.paragraphCreator()),this.register(l.ELEMENT_TYPES.CHECKBOX_ITEM,l.checkboxItemCreator()),this.register(l.ELEMENT_TYPES.LIST_ITEM,l.listItemCreator()),this.register(l.ELEMENT_TYPES.BLOCK_HEADER_1,l.headingCreator(1)),this.register(l.ELEMENT_TYPES.HEADER_2,l.headingCreator(2)),this.register(l.ELEMENT_TYPES.HEADER_3,l.headingCreator(3)),this.register(l.ELEMENT_TYPES.HEADER_4,l.headingCreator(4)),this.register(l.ELEMENT_TYPES.HEADER_5,l.headingCreator(5)),this.register(l.ELEMENT_TYPES.HEADER_6,l.headingCreator(6)),this.register(l.ELEMENT_TYPES.DRAG_HANDLE_BUTTON,l.dragHandleButtonCreator()),l._instance=this}static getInstance(){return this._instance||(this._instance=new l),this._instance}register(e,n){this.creators[e]=n}create(e,n){const t=this.creators[e];if(!t)throw new TypeError(`No creator registered for type: ${e}`);return t(n||"")}static blockParagraphCreator(){return e=>l.blockParagraph(e)}static paragraphCreator(){return e=>l.paragraph(e)}static headingCreator(e){return n=>l.heading(e,n)}static checkboxItemCreator(){return e=>l.checkBoxItem(e)}static listItemCreator(){return e=>l.checkboxItem(e)}static dragHandleButtonCreator(){return()=>l.dragHandleButton()}static paragraph(e=null){const n=document.createElement("p");return n.innerText=e||"",n.contentEditable="true",n.setAttribute("data-type","p"),n.classList.add("johannes-content-element"),n.classList.add("swittable"),n.classList.add("focusable"),n.classList.add("key-trigger"),n.setAttribute("data-placeholder","Write something or type / (slash) to choose a block..."),n}static heading(e,n=null){const t=document.createElement(`h${e}`);return t.innerText=n||"",t.contentEditable="true",t.setAttribute("data-type",`h${e}`),t.classList.add("johannes-content-element"),t.classList.add("swittable"),t.classList.add("focusable"),t.classList.add("focus"),t.classList.add("key-trigger"),t}static checkBoxItem(e=null){let n=document.createElement("li");n.classList.add("deletable"),n.classList.add("list-item");let t=document.createElement("input");t.setAttribute("type","checkbox");let o=document.createElement("span");return o.textContent=e||"",o.setAttribute("data-placeholder","To-do"),o.setAttribute("contentEditable","true"),o.classList.add("focusable"),o.classList.add("editable"),o.classList.add("focus"),n.appendChild(t),n.appendChild(o),n}static checkboxItem(e=null){let n=document.createElement("li");return n.classList.add("focusable"),n.classList.add("deletable"),n.classList.add("editable"),n.classList.add("focus"),n.classList.add("key-trigger"),n.classList.add("list-item"),n.innerText=e||"",n.setAttribute("contentEditable","true"),n.setAttribute("data-placeholder","Item"),n}static blockParagraph(e=null){let n=document.createElement("div"),t=l.paragraph(e),o=document.createElement("button");return o.innerHTML='<svg width="20" height="20" fill="currentColor"><use href="#icon-material-drag"></use></svg>',n.appendChild(t),n.classList.add("block"),n.classList.add("deletable"),o.classList.add("drag-handler"),o.classList.add("button-reset"),o.draggable=!0,n}static dragHandleButton(){let e=document.createElement("button");return e.innerHTML='<svg width="20" height="20" fill="currentColor"><use href="#icon-material-drag"></use></svg>',e.classList.add("drag-handler"),e.classList.add("button-reset"),e.draggable=!0,e}}const c=l;class d{elementFactoryService;static instance;constructor(){if(d.instance)throw new Error("Use BlockOperationsService.getInstance() to get instance.");this.elementFactoryService=a.getInstance().getInstanceOf("IElementFactoryService"),d.instance=this}execCommand(e,n=null){if(e==A.CREATE_DEFAULT_BLOCK&&this.createDefaultBlock(null),e==A.TURN_INTO){if(!n)throw new Error;const e=d.getDraggableElementFromSelection();this.formatBlock(e,n)}const t=new CustomEvent("blockFormatted",{bubbles:!0,cancelable:!0});return document.dispatchEvent(t),!0}queryCommandState(){throw new Error("Method not implemented.")}static getInstance(){return this.instance||(this.instance=new d),this.instance}formatBlock(e,n){let t=e.querySelector(".swittable"),o=t.innerText,i=this.elementFactoryService.create(n,o);e.replaceChild(i,t),i.closest(".focusable")||e.querySelector(".focusable")}static getDraggableElementFromSelection(){const e=window.getSelection();if(e&&e.rangeCount>0){let n=e.getRangeAt(0).commonAncestorContainer;for(n.nodeType===Node.TEXT_NODE&&(n=n.parentNode);n&&!(n instanceof HTMLElement);)n=n.parentNode;if(n)return n.closest(".block")}throw new Error}createNewElement(e){const n=e.target.closest(".johannes-content-element");n&&n.classList.contains("list")?this.createListItem(n):this.createDefaultBlock(n)}createListItem(e){let n=null,t=(document.activeElement,e.closest(".johannes-content-element"));t.classList.contains("checkbox-list")?n=this.elementFactoryService.create("checkboxItem",""):t.classList.contains("list")&&(n=this.elementFactoryService.create("listItem",""))}createDefaultBlock(e){const n=this.elementFactoryService.create(c.ELEMENT_TYPES.BLOCK_PARAGRAPH,"");e&&e.closest(".block")?e.closest(".block").insertAdjacentElement("afterend",n):document.querySelector("#johannesEditor .content").appendChild(n),n.querySelector(".johannes-content-element")}}const A={TURN_INTO:"turnInto",CREATE_DEFAULT_BLOCK:"CreateDefaultBlock"},p=d,u=class{_canHide;props;htmlElement;constructor(e){this.props=e,this.htmlElement=this.init(),this._canHide=!0}documentAppendTo(e){e.appendChild(this.htmlElement)}get isVisible(){let e=this.htmlElement;if("none"===e.style.display||"hidden"===e.style.visibility||!document.contains(e))return!1;for(;e;){const n=window.getComputedStyle(e);if("none"===n.display||"hidden"===n.visibility)return!1;if(!e.parentElement)break;e=e.parentElement}return!0}show(){this._canHide=!1,this.htmlElement.style.display=this.display,setTimeout((()=>{this._canHide=!0}),100)}hide(){this._canHide||console.warn("Attempted to hide the element before 100 milliseconds have passed since the last display."),this.htmlElement.style.display="none"}get canHide(){return this._canHide&&this.isVisible}focus(){this.htmlElement.focus()}},h=class extends u{display;constructor(){super({}),this.display="block"}init(){const e=document.createElement("span");return e.innerText="No results",e.classList.add("empty-block-options"),e.style.padding="10px",e.style.color="rgba(55, 53, 47, 0.65)",e.style.display="none",e}};class m{head=null;tail=null;length=0;getFirst(){return this.head}getLast(){return this.tail}*[Symbol.iterator](){let e=this.head;if(e)do{yield e,e=e.nextNode}while(e&&e!==this.head)}forEach(e){let n=0;for(let t of this)e(t.value,n,this),n++}any(e){let n=this.head;for(;n;){if(e(n.value))return!0;if(n=n.nextNode,n===this.head)break}return!1}findFirst(e){if(!this.head)return null;let n=this.head;do{if(e(n.value))return n;n=n.nextNode}while(n&&n!==this.head);return null}findLast(e){if(!this.tail)return null;let n=this.tail;do{if(e(n.value))return n;n=n.previousNode}while(n&&n!==this.tail);return null}find(e){let n=this.head;for(;n;){if(n.value==e)return n;if(n=n.nextNode,n===this.head)break}return null}}const g=m,C=class{parentList;previousNode;nextNode;value;constructor(e,n){this.previousNode=null,this.nextNode=null,this.value=e,this.parentList=n}setNext(e){this.nextNode=e}setPrevious(e){this.previousNode=e}getNextSatisfying(e){let n=this.nextNode;const t=this;for(;n;){if(e(n.value))return n;if(n=n.nextNode,n===t)break}return null}getPreviousSatisfying(e){let n=this.previousNode;const t=this;for(;n&&n!==t;){if(e(n.value))return n;if(n=n.previousNode,n===this)break}return null}},B=class extends g{constructor(){super()}append(e){const n=new C(e,this);this.head&&this.tail?(n.setPrevious(this.tail),n.setNext(this.head),this.tail.setNext(n),this.head.setPrevious(n),this.tail=n):(this.head=n,this.tail=n,this.head.setNext(this.tail),this.head.setPrevious(this.tail)),this.length++}};class b extends u{display;blockOperationsService;currentFocusedMenuItem;htmlFocusedElementBeforeOpenQuickMenu;menuSections;quickMenuEmpty;filterInput;static _instance;constructor(){super({}),this.display="block",this.blockOperationsService=a.getInstance().getInstanceOf("IBlockOperationsService"),this.currentFocusedMenuItem=null,this.htmlFocusedElementBeforeOpenQuickMenu=null,this.menuSections=new B,this.quickMenuEmpty=new h;let e=this.htmlElement.querySelector(".block-options");this.quickMenuEmpty.documentAppendTo(e),this.attachEvents(),this.filterInput=""}init(){const e=document.createElement("div");e.id="quickMenu",e.classList.add("block-options-wrapper","soft-box-shadow"),e.style.display="none";const n=document.createElement("div");return n.classList.add("block-options"),n.style.position="relative",e.appendChild(n),e}append(e){this.menuSections.append(e),this.htmlElement.querySelector(".block-options").appendChild(e.htmlElement)}static getInstance(){return b._instance||(b._instance=new b),b._instance}switchVisualFocus(e){this.currentFocusedMenuItem!=e&&(this.currentFocusedMenuItem&&this.currentFocusedMenuItem.value.removeFocus(),this.currentFocusedMenuItem=e,this.currentFocusedMenuItem.value.focus(),this.htmlFocusedElementBeforeOpenQuickMenu?.focus())}focusOnTheFirstVisibleItem(){const e=this.menuSections.getFirst();let n=e;for(;n;){const t=n.value.menuItems.findFirst((e=>e.isVisible));if(t)return void this.switchVisualFocus(t);if(n=n.nextNode,n==e)return}}focusPreviousVisibleItem(){let e;if(this.currentFocusedMenuItem){if(e=this.currentFocusedMenuItem.getPreviousSatisfying((e=>e.isVisible)),!e){let n=this.menuSections.find(this.currentFocusedMenuItem.value.quickMenuSectionInstance).getPreviousSatisfying((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findLast((e=>e.isVisible))}}else{let n=this.menuSections.findLast((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findLast((e=>e.isVisible))}this.switchVisualFocus(e)}focusNextVisibleItem(){let e;if(this.currentFocusedMenuItem){if(e=this.currentFocusedMenuItem.getNextSatisfying((e=>e.isVisible)),!e){let n=this.menuSections.find(this.currentFocusedMenuItem.value.quickMenuSectionInstance).getNextSatisfying((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findFirst((e=>e.isVisible))}}else{let n=this.menuSections.findFirst((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findFirst((e=>e.isVisible))}this.switchVisualFocus(e)}filterItems(){this.menuSections.forEach((e=>{e.filterSection(this.filterInput)})),this.menuSections.any((e=>e.isVisible))?this.quickMenuEmpty.hide():this.quickMenuEmpty.show(),this.focusOnTheFirstVisibleItem()}show(){setTimeout((()=>{if(this.htmlFocusedElementBeforeOpenQuickMenu=document.activeElement,!this.htmlFocusedElementBeforeOpenQuickMenu)throw new Error("Failed to capture the focused element before displaying the QuickMenu. Ensure an element is focused.");const e=document.getSelection().getRangeAt(0).getBoundingClientRect(),n=parseFloat(getComputedStyle(document.documentElement).fontSize),t=19*n;let o=e.right,i=e.bottom+window.scrollY;const r=1.25*n;o+this.htmlElement.offsetWidth+r>window.innerWidth&&(o=e.left-t,o<0&&(o=0)),this.htmlElement.style.left=`${o}px`,this.htmlElement.style.top=`${i}px`,super.show(),this.focusOnTheFirstVisibleItem(),this.htmlFocusedElementBeforeOpenQuickMenu.focus()}),10)}restore(){this.filterInput="",this.menuSections.forEach((e=>{e.restore()}))}hide(){this.restore(),this.htmlFocusedElementBeforeOpenQuickMenu?.focus(),super.hide()}attachEvents(){document.addEventListener("keydown",(e=>{if(this.isVisible||"/"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowLeft"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowRight"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowDown"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowUp"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||!/^[a-z0-9 ]$/i.test(e.key)||e.ctrlKey||e.shiftKey||e.altKey)if(this.isVisible&&"Backspace"===e.key)""==this.filterInput?this.hide():(this.removeLastFilterInputCharacter(),this.filterItems());else if(!this.isVisible||"Escape"!==e.key||e.ctrlKey||e.shiftKey||e.altKey){if("Enter"===e.key&&this.isVisible&&!e.ctrlKey&&!e.shiftKey&&!e.altKey){e.preventDefault(),e.stopPropagation();let n=this.currentFocusedMenuItem.value.htmlElement.getAttribute("data-type");n&&this.transformHtmlFocusedElementBeforeOpenQuickMenu(n)}}else this.hide();else this.concatFilterInput(e.key),this.filterItems();else e.preventDefault(),this.focusPreviousVisibleItem();else e.preventDefault(),this.focusNextVisibleItem();else e.preventDefault(),e.stopPropagation();else e.preventDefault(),e.stopPropagation();else this.show()})),document.addEventListener("click",(e=>{this.isVisible&&!e.target.closest(`#${this.htmlElement.id}`)&&this.hide()})),document.addEventListener("keydown",(e=>{if("Enter"===e.key&&this.isVisible){const e=this.currentFocusedMenuItem?.value.blockType;e&&this.transformHtmlFocusedElementBeforeOpenQuickMenu(e)}}))}transformHtmlFocusedElementBeforeOpenQuickMenu(e){let n=this.htmlFocusedElementBeforeOpenQuickMenu?.closest(".block");n&&e&&this.blockOperationsService.formatBlock(n,e),this.hide()}concatFilterInput(e){this.filterInput+=e.toLowerCase()}removeLastFilterInputCharacter(){this.filterInput.length>0&&(this.filterInput=this.filterInput.slice(0,-1))}}const f=b,E=class extends g{constructor(){super()}append(e){const n=new C(e,this);this.head&&this.tail?(this.tail.setNext(n),n.setPrevious(this.tail),this.tail=n):(this.head=n,this.tail=n),this.length++}},I=class extends u{display;quickMenuInstance;menuItems=new E;constructor(e,n,t){super({title:n,classList:t}),this.quickMenuInstance=e,this.display="block"}init(){const e=document.createElement("section");e.classList.add(this.props.classList);const n=document.createElement("h2");return n.textContent=this.props.title,e.appendChild(n),e}appendQuickMenuItems(e){e.forEach((e=>{this.appendQuickMenuItem(e)}))}appendQuickMenuItem(e){this.menuItems.append(e),this.htmlElement.appendChild(e.htmlElement)}filterSection(e){this.restore(),""!==e&&(this.menuItems.forEach((n=>{n.filterValue.toLocaleLowerCase().includes(e)||n.hide()})),this.menuItems.any((n=>n.filterValue.toLocaleLowerCase().includes(e)))||this.hide())}restore(){this.show(),this.menuItems.forEach((e=>{e.show()}))}};class y extends u{display;useElement;constructor(e,n="16",t="16"){super({hrefUseId:e,width:n,height:t}),this.display="block",this.useElement=this.htmlElement.querySelector("use")}init(){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");let n=document.createElementNS("http://www.w3.org/2000/svg","use");return n.setAttributeNS("http://www.w3.org/1999/xlink","href",`#${this.props.hrefUseId}`),e.appendChild(n),e.setAttribute("width",this.props.width),e.setAttribute("height",this.props.height),e.setAttribute("fill","currentColor"),e}clone(){return new y(this.props.hrefUseId,this.props.width,this.props.height)}}const x=y,w=class extends u{display;blockType;title;filterValue;description;quickMenuSectionInstance;constructor(e,n,t,o,i,r){super({title:n,description:t,SVGHrefUseId:o}),this.display="flex",this.blockType=i,this.title=n,this.description=t,this.filterValue=r,this.quickMenuSectionInstance=e,this.blockType=i,this.attachEvents()}init(){const e=document.createElement("div");e.classList.add("option","option-hover","block-operation"),e.setAttribute("data-block-operation","apply-selected-block-type"),e.setAttribute("tabindex","0"),e.setAttribute("role","option");const n=document.createElement("div");n.classList.add("option-image");const t=new x(this.props.SVGHrefUseId,"100%","100%");n.appendChild(t.htmlElement),e.appendChild(n);const o=document.createElement("div");o.classList.add("option-text");const i=document.createElement("p");i.classList.add("block-title"),i.innerText=this.props.title,o.appendChild(i);const r=document.createElement("p");return r.classList.add("block-description"),r.innerText=this.props.description,o.appendChild(r),e.appendChild(o),e}focus(){this.htmlElement.classList.add("option-focused"),this.htmlElement.focus()}removeFocus(){this.htmlElement.classList.remove("option-focused")}attachEvents(){this.htmlElement.addEventListener("mousemove",(()=>{const e=this.quickMenuSectionInstance.menuItems.find(this);this.quickMenuSectionInstance.quickMenuInstance.switchVisualFocus(e)})),this.htmlElement.addEventListener("click",(()=>{this.quickMenuSectionInstance.quickMenuInstance.transformHtmlFocusedElementBeforeOpenQuickMenu(this.blockType)}))}},v=class{static build(){const e=new f,n=new I(e,"Basic blocks","basic-section");n.appendQuickMenuItems([new w(n,"Paragraph","Just start writing with plain text.","icon-wordpress-paragraph",c.ELEMENT_TYPES.PARAGRAPH,"paragraph text p"),new w(n,"Image","Just start writing with plain text.","icon-wordpress-paragraph","image","image figure photo illustration picture "),new w(n,"Bulleted list","Organize items with bullet points.","icon-wordpress-bulleted-list","bulleted-list","bulleted list unordered list ul"),new w(n,"Numbered list","List items in a numbered format.","icon-wordpress-numbered-list","numbered-list","numbered list number list sequential list ol enumerated list ordered list"),new w(n,"Code","Insert code snippets with syntax highlighting.","icon-wordpress-code-mark","code","code script source markup"),new w(n,"Quote","Highlight text as a significant quote.","icon-wordpress-quote","quote","quote blockquote citation quotation"),new w(n,"Heading 2","Medium header for subsections.","icon-julia-head-2",c.ELEMENT_TYPES.HEADER_2,"header 2 heading 2 h2"),new w(n,"Heading 3","Small header for detailed sections.","icon-julia-head-2",c.ELEMENT_TYPES.HEADER_3,"header 3 heading 3 h3"),new w(n,"Separator","Visually divide blocks.","icon-wordpress-separator","separator","separator divider rule line")]),e.append(n);const t=new I(e,"Heading","heading-section");t.appendQuickMenuItems([new w(t,"Heading 1","Large header to organize content.","icon-julia-head-1",c.ELEMENT_TYPES.BLOCK_HEADER_1,"header 1 heading 1 h1"),new w(t,"Heading 2","Medium header for subsections.","icon-julia-head-2",c.ELEMENT_TYPES.HEADER_2,"header 2 heading 2 h2"),new w(t,"Heading 3","Small header for detailed sections.","icon-julia-head-3",c.ELEMENT_TYPES.HEADER_3,"header 3 heading 3 h3"),new w(t,"Heading 4","Small header for detailed sections.","icon-julia-head-4",c.ELEMENT_TYPES.HEADER_4,"header 4 heading 4 h4"),new w(t,"Heading 5","Small header for detailed sections.","icon-julia-head-5",c.ELEMENT_TYPES.HEADER_5,"header 5 heading 5 h5"),new w(t,"Heading 6","Small header for detailed sections.","icon-julia-head-6",c.ELEMENT_TYPES.HEADER_6,"header 6 heading 6 h6")]),e.append(t);const o=new I(e,"List","list-section");return o.appendQuickMenuItems([new w(o,"Todo list","Organize items with bullet points.","icon-material-check-list","todo-list","todo list task list checklist"),new w(o,"Bulleted list","Organize items with bullet points.","icon-wordpress-bulleted-list","bulleted-list","bulleted list unordered list ul"),new w(o,"Numbered list","List items in a numbered format.","icon-wordpress-numbered-list","numbered-list","numbered list number list sequential list ol enumerated list ordered list")]),e.append(o),e}},k=class extends u{display;dropdownButton;dropdownList;constructor(e,n){super({}),this.display="block",this.dropdownButton=e,this.dropdownList=n,e.documentAppendTo(this.htmlElement),n.documentAppendTo(this.htmlElement)}init(){const e=document.createElement("div");return e.classList.add("select-wrapper"),e}},T=class extends u{display;constructor(){super({}),this.display="block"}init(){const e=document.createElement("input");return e.id="linkBoxInput",e.type="url",e.placeholder="Paste or type a link...",e}},L=class extends u{display;inputLinkBox;constructor(){const e=new T;super({inputLinkBox:e}),this.display="block",this.inputLinkBox=e}init(){const e=document.createElement("div");return e.id="linkBox",e.style.display="none",e.classList.add("dependent-box"),e.appendChild(this.props.inputLinkBox.htmlElement),e}},S=class extends u{display;dropdowns;currentSelectionRange;inputLinkBoxWrapper;constructor(){const e=new L;super({inputLinkBoxWrapper:e}),this.display="flex",this.inputLinkBoxWrapper=e,this.attachEvents(),this.dropdowns=[],this.currentSelectionRange=null}init(){const e=document.createElement("div");e.id="floatingToolbar",e.style.display="none",e.classList.add("soft-box-shadow");const n=document.createElement("div");n.classList.add("select-wrapper"),e.appendChild(n);const t=document.getElementById("johannesEditor");return t?.appendChild(this.props.inputLinkBoxWrapper.htmlElement),e}show(){setTimeout((()=>{const e=window.getSelection();if(!e)throw new Error;this.currentSelectionRange=e.getRangeAt(0);let n=e.getRangeAt(0).getBoundingClientRect();this.htmlElement.style.display="flex",this.htmlElement.style.left=n.left+window.scrollX-50+"px",this.htmlElement.style.top=n.top+window.scrollY-this.htmlElement.offsetHeight-10+"px",super.show()}),10)}hide(){this.currentSelectionRange=null,super.hide()}appendDropdown(e){this.dropdowns.push(e),this.htmlElement.appendChild(e.htmlElement)}appendSeparator(e){this.htmlElement.appendChild(e.htmlElement)}appendTextToolbar(e){this.htmlElement.appendChild(e.htmlElement)}anyDropdownVisible(){for(const e of this.dropdowns)if(e.dropdownList.isVisible)return!0;return!1}attachEvents(){document.addEventListener("keydown",(e=>{"Escape"!==e.key&&"Delete"!==e.key||!this.isVisible||this.hide()})),document.addEventListener("keyup",(e=>{"Shift"!==e.key&&"Control"!==e.key||setTimeout((()=>{""!==window.getSelection().toString().trim()&&(e.preventDefault(),e.stopPropagation(),this.show())}),10)})),document.addEventListener("click",(e=>{!this.isVisible||e.target.closest(`#${this.htmlElement.id}`)||this.anyDropdownVisible()?this.isVisible&&!e.target.closest(`#${this.htmlElement.id}`)&&(document.getSelection()?.removeAllRanges(),document.getSelection()?.addRange(this.currentSelectionRange)):this.hide()})),document.addEventListener("mouseup",(e=>{this.isVisible||setTimeout((()=>{""!==window.getSelection().toString().trim()&&(e.preventDefault(),e.stopPropagation(),this.show())}),10)})),document.addEventListener("blockFormatted",(()=>{this.canHide&&this.hide()}))}},_=class extends u{display;dropdownItems;constructor(e,n){super({id:e,title:n}),this.display="flex",this.dropdownItems=new B,this.attachEvents()}init(){const e=document.createElement("ul");e.id=this.props.id,e.setAttribute("name","block-type"),e.style.display="none",e.classList.add("soft-box-shadow","dependent-box","checkable-items");const n=document.createElement("h3");return n.innerText=this.props.title,n.style.marginLeft="5px",e.appendChild(n),e}append(e){this.dropdownItems.append(e),this.htmlElement.appendChild(e.htmlElement)}attachEvents(){document.addEventListener("click",(e=>{this.canHide&&!e.target.closest(`#${this.htmlElement.id}`)&&this.hide()}))}},O=class extends u{_commandService;_command;_value;parentDropdownMenuList;display;constructor(e,n,t,o,i,r){super({leftIcon:i,title:r}),this.display="block",this._command=t,this._value=o,this._commandService=n,this.parentDropdownMenuList=e,this.attachEvent()}init(){const e=document.createElement("li");e.classList.add("option","option-hover","block-operation"),e.tabIndex=2;const n=document.createElement("div");n.classList.add("text-option"),n.appendChild(this.props.leftIcon);const t=document.createElement("span");return t.innerText=this.props.title,n.appendChild(t),e.appendChild(n),e}attachEvent(){this.htmlElement.addEventListener("click",(()=>{setTimeout((()=>{this._commandService.execCommand(this._command,this._value),this.parentDropdownMenuList.hide()}),10)}))}},N=class extends u{display;constructor(){super({}),this.display="block"}init(){const e=document.createElement("div");return e.style.height="24px",e.style.width="1px",e.style.borderRight="1px solid #d0d0d0",e.style.margin="auto 6px",e}},H=class extends u{display;constructor(){super({}),this.display="block"}init(){const e=document.createElement("div");return e.classList.add("item"),e.style.marginLeft="10px",e.style.marginRight="10px",e}},M=class extends u{_commandService;_command;display;constructor(e,n,t,o){super({title:t,svgUseHref:o}),this.display="block",this._commandService=e,this._command=n,this.attachEvents()}init(){const e=document.createElement("button");return e.role="button",e.classList.add("entry","button-reset","text-formatting-operation","option-hover"),e.title=this.props.title,e.tabIndex=1,new x(this.props.svgUseHref,"22","22").documentAppendTo(e),e}attachEvents(){this.htmlElement.addEventListener("click",(e=>{const n=this.getParentEditable();this._commandService.execCommand(this._command),setTimeout((()=>{n?.normalize()}),10)})),document.addEventListener("selectionchange",(e=>{setTimeout((()=>{const e=window.getSelection();e?.isCollapsed||(this._commandService.queryCommandState(this._command)?this.htmlElement.style.color="#2382e2":this.htmlElement.style.color="")}),10)}))}getParentEditable(){let e=window.getSelection().getRangeAt(0).commonAncestorContainer;return 3===e.nodeType&&(e=e.parentNode),e.closest(".editable")}},V=class extends u{display;constructor(e){super({color:e}),this.display="block"}init(){const e=document.createElement("div");return e.style.width="20px",e.style.height="20px",e.style.borderRadius="50%",e.style.backgroundColor=this.props.color,e.style.border="1px solid #d0d0d0",e}};class D{static _instance;constructor(){if(D._instance)throw new Error}static getInstance(){return this._instance||(this._instance=new D),this._instance}execCommand(e,n){let t=n||void 0;if("link"==e)return alert("delete"),!0;if("delete"==e)throw new Error("move to Block operations exception");if("duplicate"==e)throw new Error("move to Block operations exception");return document.execCommand(e,!1,t)}queryCommandState(e,n){return document.queryCommandState(e)}getTargetElementMap(e){switch(e){case"strong":case"bold":case"b":return"strong";case"italic":case"i":case"em":return"em";case"underline":case"u":return"u";case"strikethrough":case"s":return"s";case"background":case"color":return"span";default:throw new Error}}getSelectedTextNodes(){const e=window.getSelection();if(!e||0===e.rangeCount)return[];const n=[];for(let t=0;t<e.rangeCount;++t){const o=e.getRangeAt(t),i=document.createNodeIterator(o.commonAncestorContainer,NodeFilter.SHOW_TEXT,{acceptNode:e=>o.intersectsNode(e)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT});let r;for(;r=i.nextNode();)if(r.nodeType===Node.TEXT_NODE){const e=document.createRange();e.selectNodeContents(r),-1===o.compareBoundaryPoints(Range.END_TO_START,e)&&1===o.compareBoundaryPoints(Range.START_TO_END,e)&&n.push(r)}}return n}findClosestMatchingParent(e,n){for(e&&e.nodeType===Node.TEXT_NODE&&(e=e.parentElement);e&&e!==document.body;){if(e.nodeType===Node.ELEMENT_NODE){const t=e;if(t.tagName.toLowerCase()===n.nodeType.toLowerCase()&&(!n.classes||n.classes.every((e=>t.classList.contains(e)))))return t}e=e.parentElement}return null}extractSelectedText(e){const n=window.getSelection();if(!n||0===n.rangeCount)return"";const t=n.getRangeAt(0);if(e.nodeType!==Node.TEXT_NODE)return"";const o=e.textContent||"";let i=0,r=o.length;return t.intersectsNode(e)?(t.startContainer===e?i=t.startOffset:t.startContainer.contains(e)&&(i=0),t.endContainer===e?r=t.endOffset:t.endContainer.contains(e)&&(r=o.length),i<r?o.substring(i,r):""):""}}const q=D,j=class extends u{display;dropdownList;constructor(e,n,t,o=!0){super({id:e,title:n,dropdownList:t,includeChevronIcon:o}),this.display="block",this.dropdownList=t,this.attachEvents()}init(){const e=document.createElement("button");if(e.id=this.props.id,e.role="button",e.classList.add("button-reset","text-formatting-select-button","text-formatting-operation","option-hover"),e.tabIndex=1,e.setAttribute("aria-controls",this.props.dropdownList.htmlElement.id),"string"==typeof this.props.title){const n=document.createElement("span");n.textContent=this.props.title,e.appendChild(n)}else e.appendChild(this.props.title);if(this.props.includeChevronIcon){const n=new x("icon-wordpress-chevron-down");e.appendChild(n.htmlElement)}return e}attachEvents(){this.htmlElement.addEventListener("click",(()=>{this.dropdownList.isVisible||this.dropdownList.show()}))}};class R{static build(){const e=new S;return e.appendDropdown(R.turnIntoDropdown()),e.appendSeparator(R.separator()),e.appendSeparator(R.groupButton()),e.appendDropdown(R.colorDropdown()),e.appendSeparator(R.separator()),e.appendDropdown(R.moreOptionsDropdown()),e}static turnIntoDropdown(){const e=new _("turnIntoSelect","Turn into"),n=new j("turnIntoButton","Text",e),t=new k(n,e);return e.append(new O(e,p.getInstance(),"p",null,F.paragraph.htmlElement,"Text")),e.append(new O(e,p.getInstance(),"bulleted-list",null,F.b_list.htmlElement,"Bulleted list")),e.append(new O(e,p.getInstance(),"numbered-list",null,F.n_list.htmlElement,"Numbered list")),e.append(new O(e,p.getInstance(),"code",null,F.code.htmlElement,"Code")),e.append(new O(e,p.getInstance(),"quote",null,F.quote.htmlElement,"Quote")),e.append(new O(e,p.getInstance(),"h1",null,F.head1.htmlElement,"Heading 1")),e.append(new O(e,p.getInstance(),"h2",null,F.head2.htmlElement,"Heading 2")),e.append(new O(e,p.getInstance(),"h3",null,F.head3.htmlElement,"Heading 3")),e.append(new O(e,p.getInstance(),"h4",null,F.head4.htmlElement,"Heading 4")),e.append(new O(e,p.getInstance(),"h5",null,F.head5.htmlElement,"Heading 5")),e.append(new O(e,p.getInstance(),"h6",null,F.head6.htmlElement,"Heading 6")),t}static separator(){return new N}static groupButton(){const e=new H;return new M(q.getInstance(),"link","Link","icon-material-link").documentAppendTo(e.htmlElement),new M(q.getInstance(),"bold","Bold","icon-wordpress-bold").documentAppendTo(e.htmlElement),new M(q.getInstance(),"italic","Italic","icon-material-italic").documentAppendTo(e.htmlElement),new M(q.getInstance(),"underline","Underline","icon-material-underline").documentAppendTo(e.htmlElement),new M(q.getInstance(),"copy","Code","icon-wordpress-code-mark").documentAppendTo(e.htmlElement),new M(q.getInstance(),"strikeThrough","Strike-through","icon-wordpress-strike-through").documentAppendTo(e.htmlElement),new M(q.getInstance(),"copy","Equation","icon-wordpress-equation-mark").documentAppendTo(e.htmlElement),e}static colorDropdown(){const e=new _("colorTextOptionSelect","Background"),n=new j("colorTextButton",new V("#FAF4D1").htmlElement,e),t=new k(n,e);return e.append(new O(e,p.getInstance(),"hiliteColor","#FDDEDE",new V("#FDDEDE").htmlElement,"Red")),e.append(new O(e,p.getInstance(),"hiliteColor","#D7F7DC",new V("#D7F7DC").htmlElement,"Green")),e.append(new O(e,p.getInstance(),"hiliteColor","#D9EDF6",new V("#D9EDF6").htmlElement,"Blue")),e.append(new O(e,p.getInstance(),"hiliteColor","#FAF4D1",new V("#FAF4D1").htmlElement,"Yellow")),e.append(new O(e,p.getInstance(),"hiliteColor","#E1E0E0",new V("#E1E0E0").htmlElement,"Grey")),e.append(new O(e,p.getInstance(),"hiliteColor","transparent",new V("transparent").htmlElement,"None")),t}static moreOptionsDropdown(){const e=new x("icon-material-more","24","24"),n=new _("moreTextOptionSelect","More options"),t=new j("moreTextOptionButton",e.htmlElement,n,!1),o=new k(t,n);return n.append(new O(n,p.getInstance(),"duplicate",null,F.duplicate.htmlElement,"Duplicate")),n.append(new O(n,p.getInstance(),"delete",null,F.delete.htmlElement,"Delete")),o}}const F={paragraph:new x("icon-wordpress-paragraph","22","22"),b_list:new x("icon-wordpress-bulleted-list","22","22"),n_list:new x("icon-wordpress-numbered-list","22","22"),code:new x("icon-wordpress-numbered-list","22","22"),quote:new x("icon-wordpress-quote","22","22"),head1:new x("icon-julia-head-1","22","22"),head2:new x("icon-julia-head-2","22","22"),head3:new x("icon-julia-head-3","22","22"),head4:new x("icon-julia-head-4","22","22"),head5:new x("icon-julia-head-5","22","22"),head6:new x("icon-julia-head-6","22","22"),duplicate:new x("icon-material-duplicate","22","22"),delete:new x("icon-material-trash","22","22")},P=R,z=class extends u{blockOperationsService;display;constructor(){super({}),this.display="block",this.blockOperationsService=a.getInstance().getInstanceOf("IBlockOperationsService"),this.attachEvents()}init(){const e=document.createElement("button");e.classList.add("add-block","block-operation");const n=new x("icon-add-block","24","24");return e.appendChild(n.htmlElement),e}attachEvents(){this.htmlElement.addEventListener("click",(()=>{this.blockOperationsService.execCommand(A.CREATE_DEFAULT_BLOCK)}))}},U=class extends u{display;constructor(){super({}),this.display="block"}init(){const e=document.createElement("div");e.classList.add("add-block-wrapper");const n=new z;return e.appendChild(n.htmlElement),e}};class K extends u{display;editorId="johannesEditor";elementFactoryService;static instance;constructor(){if(K.instance)throw new Error("Use BlockOperationsService.getInstance() to get instance.");super({editorId:"johannesEditor"}),this.elementFactoryService=a.getInstance().getInstanceOf("IElementFactoryService"),this.display="block",this.attachEvents(),K.instance=this}init(){const e=document.getElementById(this.props.editorId)||document.createElement("div");return e&&e?.classList.add("johannes-editor"),e}static getInstance(){return K.instance||(K.instance=new K),K.instance}attachEvents(){const e=document.getElementById(this.editorId);if(e?.addEventListener("mouseover",(e=>{const n=e.target;n.closest(".block")&&this.appendDragHandler(n)})),"loading"===document.readyState)document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("#johannesEditor > .content .block p");e&&e.focus()}));else{const e=document.querySelector("#johannesEditor > .content .block p");e&&e.focus()}}appendDragHandler(e){const n=e.closest(".block");let t=n?.querySelector(".drag-handler");!t&&n&&(t=this.elementFactoryService.create(c.ELEMENT_TYPES.DRAG_HANDLE_BUTTON),n.prepend(t))}removeDragHandler(e){const n=e.closest(".block");if(n){const e=n.querySelector(".drag-handler");e?.remove()}}extractContent(){throw new Error("Not implemented Exception")}}const G=K;class Y{static instance;editor;addBlock;floatingToolbar;quickMenu;constructor(e,n,t,o){if(Y.instance)throw new Error;this.editor=e,this.addBlock=n,this.floatingToolbar=t,this.quickMenu=o,Y.instance=this}static build(e){if(Y.instance)return Y.instance;const n=a.getInstance();e?(n.reset(),n.registerServices(e)):(n.registerService("IBlockOperationsService",p.getInstance()),n.registerService("IElementFactoryService",c.getInstance()),n.registerService("ITextOperationService",q.getInstance()));const t=G.getInstance(),o=new U,i=P.build(),r=v.build();return new Y(t,o,i,r)}start(){return this.editor.htmlElement.appendChild(this.addBlock.htmlElement),this.editor.htmlElement.appendChild(this.floatingToolbar.htmlElement),this.editor.htmlElement.appendChild(this.quickMenu.htmlElement),this.editor}}const Z=Y;function W(e){let n=document.createElement("p");return n.setAttribute("data-type","p"),n.classList.add("johannes-content-element"),n.classList.add("swittable"),n.classList.add("focusable"),n.classList.add("key-trigger"),n.contentEditable=!0,n.innerText=e||"",n.setAttribute("data-placeholder","Write something or type / (slash) to choose a block..."),n}function X(){let e=document.createElement("div"),n=W(),t=document.createElement("button");return t.innerHTML='<svg width="20" height="20" fill="currentColor"><use href="#icon-material-drag"></use></svg>',e.appendChild(t),e.appendChild(n),e.classList.add("block"),e.classList.add("deletable"),t.classList.add("drag-handler"),t.classList.add("button-reset"),t.draggable=!0,e}document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".johannes-editor");if(e){let n=e.querySelectorAll(".block");if(1==n.length){const e=n[0].querySelector(".johannes-content-element");""==e.innerText&&e.focus()}}})),document.addEventListener("DOMContentLoaded",(function(){if(document.querySelector(".johannes-editor")){function e(e){const n=window.getSelection();if(n.rangeCount>0){const t=n.getRangeAt(0);t.deleteContents();const o=document.createTextNode(e);t.insertNode(o),t.setStartAfter(o),t.setEndAfter(o),n.removeAllRanges(),n.addRange(t)}}document.addEventListener("paste",(function(n){"true"===n.target.getAttribute("contenteditable")&&(n.preventDefault(),e((n.clipboardData||window.clipboardData).getData("text/plain")))}),!0)}})),document.addEventListener("DOMContentLoaded",(function(){Z.build().start()})),document.addEventListener("DOMContentLoaded",(function(){const e=document.createElement("div");e.innerHTML='<svg shape-rendering="geometricPrecision">\r\n\r\n    <symbol id="icon-add-block" viewBox="0 0 24 24" aria-hidden="true">\r\n        <path d="M11 12.5V17.5H12.5V12.5H17.5V11H12.5V6H11V11H6V12.5H11Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-drag" viewBox="0 -960 960 960" aria-hidden="true">\r\n        <path\r\n            d="M360-160q-33 0-56.5-23.5T280-240q0-33 23.5-56.5T360-320q33 0 56.5 23.5T440-240q0 33-23.5 56.5T360-160Zm240 0q-33 0-56.5-23.5T520-240q0-33 23.5-56.5T600-320q33 0 56.5 23.5T680-240q0 33-23.5 56.5T600-160ZM360-400q-33 0-56.5-23.5T280-480q0-33 23.5-56.5T360-560q33 0 56.5 23.5T440-480q0 33-23.5 56.5T360-400Zm240 0q-33 0-56.5-23.5T520-480q0-33 23.5-56.5T600-560q33 0 56.5 23.5T680-480q0 33-23.5 56.5T600-400ZM360-640q-33 0-56.5-23.5T280-720q0-33 23.5-56.5T360-800q33 0 56.5 23.5T440-720q0 33-23.5 56.5T360-640Zm240 0q-33 0-56.5-23.5T520-720q0-33 23.5-56.5T600-800q33 0 56.5 23.5T680-720q0 33-23.5 56.5T600-640Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-paragraph" viewBox="0 -960 960 960" aria-hidden="true">\r\n        <path\r\n            d="M360-160v-240q-83 0-141.5-58.5T160-600q0-83 58.5-141.5T360-800h360v80h-80v560h-80v-560H440v560h-80Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-paragraph" viewBox="0 0 24 24">\r\n        <path\r\n            d="m9.99609 14v-.2251l.00391.0001v6.225h1.5v-14.5h2.5v14.5h1.5v-14.5h3v-1.5h-8.50391c-2.76142 0-5 2.23858-5 5 0 2.7614 2.23858 5 5 5z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-list" viewBox="0 0 24 24">\r\n        <path\r\n            d="M4 4v1.5h16V4H4zm8 8.5h8V11h-8v1.5zM4 20h16v-1.5H4V20zm4-8c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-numbered-list" viewBox="0 0 24 24">\r\n        <path\r\n            d="M11.1 15.8H20v-1.5h-8.9v1.5zm0-8.6v1.5H20V7.2h-8.9zM5 6.7V10h1V5.3L3.8 6l.4 1 .8-.3zm-.4 5.7c-.3.1-.5.2-.7.3l.1 1.1c.2-.2.5-.4.8-.5.3-.1.6 0 .7.1.2.3 0 .8-.2 1.1-.5.8-.9 1.6-1.4 2.5h2.7v-1h-1c.3-.6.8-1.4.9-2.1.1-.3 0-.8-.2-1.1-.5-.6-1.3-.5-1.7-.4z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-bulleted-list" viewBox="0 0 24 24">\r\n        <path\r\n            d="M11.1 15.8H20v-1.5h-8.9v1.5zm0-8.6v1.5H20V7.2h-8.9zM6 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-separator" viewBox="0 0 24 24">\r\n        <path d="M4.5 12.5v4H3V7h1.5v3.987h15V7H21v9.5h-1.5v-4h-15Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-quote" viewBox="0 0 24 24">\r\n        <path\r\n            d="M13 6v6h5.2v4c0 .8-.2 1.4-.5 1.7-.6.6-1.6.6-2.5.5h-.3v1.5h.5c1 0 2.3-.1 3.3-1 .6-.6 1-1.6 1-2.8V6H13zm-9 6h5.2v4c0 .8-.2 1.4-.5 1.7-.6.6-1.6.6-2.5.5h-.3v1.5h.5c1 0 2.3-.1 3.3-1 .6-.6 1-1.6 1-2.8V6H4v6z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-twitter" viewBox="0 0 24 24">\r\n        <path\r\n            d="M22.23 5.924c-.736.326-1.527.547-2.357.646.847-.508 1.498-1.312 1.804-2.27-.793.47-1.67.812-2.606.996C18.325 4.498 17.258 4 16.078 4c-2.266 0-4.103 1.837-4.103 4.103 0 .322.036.635.106.935-3.41-.17-6.433-1.804-8.457-4.287-.353.607-.556 1.312-.556 2.064 0 1.424.724 2.68 1.825 3.415-.673-.022-1.305-.207-1.86-.514v.052c0 1.988 1.415 3.647 3.293 4.023-.344.095-.707.145-1.08.145-.265 0-.522-.026-.773-.074.522 1.63 2.038 2.817 3.833 2.85-1.404 1.1-3.174 1.757-5.096 1.757-.332 0-.66-.02-.98-.057 1.816 1.164 3.973 1.843 6.29 1.843 7.547 0 11.675-6.252 11.675-11.675 0-.178-.004-.355-.012-.53.802-.578 1.497-1.3 2.047-2.124z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-1" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM563.187 113.659L658.781 53.5511H710.198V487.341C710.198 504.238 710.922 514.136 712.371 517.032C713.819 519.929 718.405 521.86 726.13 522.826L765.961 527.171V546H576.947V527.171L631.261 522.826C638.986 522.343 643.573 520.653 645.021 517.757C646.469 514.377 647.193 504.238 647.193 487.341V88.3122L575.499 133.212L563.187 113.659Z"\r\n            fill="#343434" />\r\n        <line x1="49.7258" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-2" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM857.208 402.61H876.037V546H585.637V507.618C585.637 474.305 591.189 446.545 602.294 424.336C613.398 402.128 627.64 383.299 645.021 367.849C662.884 351.917 681.955 337.433 702.232 324.398C719.612 312.811 736.51 300.983 752.925 288.913C769.34 276.843 782.858 262.118 793.48 244.737C804.584 226.874 810.136 204.665 810.136 178.112C810.136 141.419 802.894 114.142 788.41 96.2782C774.409 78.4149 754.615 69.4832 729.027 69.4832C695.714 69.4832 672.54 81.5531 659.505 105.693C646.952 129.35 643.09 163.386 647.918 207.803L584.913 196.216C580.085 170.146 582.016 145.765 590.707 123.073C599.88 100.382 616.053 82.0359 639.227 68.0349C662.401 53.5511 692.576 46.3092 729.751 46.3092C765.478 46.3092 794.445 52.5855 816.654 65.1381C838.862 77.6907 855.036 94.1057 865.175 114.383C875.313 134.66 880.383 156.386 880.383 179.56C880.383 206.114 875.313 228.322 865.175 246.185C855.036 264.049 841.759 278.774 825.344 290.361C808.929 301.948 791.066 312.328 771.754 321.501C752.442 330.191 733.613 339.365 715.267 349.02C697.404 358.193 680.989 369.056 666.022 381.609C651.539 394.162 639.469 409.37 629.813 427.233C620.64 444.613 615.088 466.098 613.157 491.686H799.997C816.895 491.686 827.034 490.72 830.413 488.789C834.276 486.375 837.173 481.064 839.104 472.857L857.208 402.61Z"\r\n            fill="#343434" />\r\n        <line x1="49.7258" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-3" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM693.542 304.121H673.988V280.947H693.542C733.613 280.947 761.615 270.808 777.548 250.531C793.963 230.253 802.17 204.183 802.17 172.318C802.17 138.523 795.17 112.935 781.169 95.5541C767.168 78.1735 747.373 69.4832 721.785 69.4832C688.472 69.4832 665.298 81.5531 652.263 105.693C639.71 129.35 635.848 163.386 640.676 207.803L577.671 196.216C573.326 170.146 575.499 145.765 584.189 123.073C593.362 100.382 609.294 82.0359 631.985 68.0349C655.16 53.5511 685.334 46.3092 722.509 46.3092C758.236 46.3092 786.962 52.3441 808.688 64.4139C830.896 76.0009 847.07 91.4503 857.208 110.762C867.347 129.591 872.416 150.11 872.416 172.318C872.416 206.114 862.036 232.909 841.276 252.703C820.999 272.498 791.549 285.775 752.925 292.534C793.963 298.81 825.344 312.811 847.07 334.537C869.278 356.262 880.383 385.713 880.383 422.888C880.383 446.545 874.589 468.27 863.002 488.065C851.898 507.859 834.517 523.792 810.86 535.861C787.686 547.448 757.512 553.242 720.337 553.242C685.093 553.242 654.194 545.034 627.64 528.619C601.57 512.204 582.982 482.754 571.878 440.268L617.502 427.233C621.364 453.787 628.123 474.547 637.779 489.513C647.918 504.48 659.746 515.101 673.264 521.378C687.265 527.171 701.99 530.068 717.44 530.068C779.237 530.068 810.136 494.341 810.136 422.888C810.136 388.127 801.446 359.642 784.065 337.433C766.685 315.225 736.51 304.121 693.542 304.121Z"\r\n            fill="#343434" />\r\n        <line x1="49.7257" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7257" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7257" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-4" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM762.34 487.341V418.543H553.049V395.369C577.671 369.298 598.914 343.951 616.778 319.329C634.641 294.223 650.09 268.394 663.126 241.84C676.161 215.287 687.507 186.802 697.163 156.386C707.301 125.487 716.474 91.2089 724.682 53.5511H801.446C782.134 121.625 753.891 182.698 716.716 236.771C679.541 290.844 635.124 343.71 583.465 395.369H762.34V281.671L825.344 271.532V395.369H881.107V418.543H825.344V487.341C825.344 504.238 826.068 514.136 827.517 517.032C828.965 519.929 833.552 521.86 841.276 522.826L881.107 527.171V546H692.093V527.171L746.407 522.826C754.132 522.343 758.719 520.653 760.167 517.757C761.615 514.377 762.34 504.238 762.34 487.341Z"\r\n            fill="#343434" />\r\n        <line x1="49.7258" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-5" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM834.759 -5.83247H853.588V109.314H630.537L621.847 264.29C635.848 254.634 651.056 247.392 667.471 242.565C684.369 237.737 701.749 235.323 719.612 235.323C767.409 235.323 805.308 250.048 833.31 279.498C861.312 308.466 875.313 347.331 875.313 396.093C875.313 423.612 870.002 449.441 859.381 473.581C848.76 497.238 831.62 516.55 807.964 531.516C784.79 546 754.374 553.242 716.716 553.242C683.403 553.242 654.435 545.034 629.813 528.619C605.19 511.722 587.327 482.271 576.223 440.268L621.847 427.233C627.64 466.822 638.986 493.858 655.884 508.342C672.782 522.826 691.852 530.068 713.095 530.068C743.028 530.068 765.719 519.205 781.169 497.479C797.101 475.271 805.067 441.475 805.067 396.093C805.067 356.021 798.066 323.432 784.065 298.327C770.547 272.739 746.407 259.945 711.646 259.945C695.231 259.945 678.334 263.083 660.953 269.36C643.573 275.153 626.433 285.533 609.536 300.5L595.052 293.982L608.811 53.5511H788.41C805.791 53.5511 816.171 52.8269 819.551 51.3785C823.413 49.4473 826.068 43.8952 827.517 34.7221L834.759 -5.83247Z"\r\n            fill="#343434" />\r\n        <line x1="49.7256" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-6" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM915.868 407.68C915.868 437.13 909.35 462.96 896.315 485.168C883.279 506.894 865.175 523.792 842 535.861C818.826 547.448 791.79 553.242 760.891 553.242C708.267 553.242 667.471 533.93 638.503 495.307C610.018 456.683 595.776 399.955 595.776 325.122V279.498C595.776 199.837 610.501 141.178 639.952 103.52C669.402 65.3795 708.991 46.3092 758.719 46.3092C791.066 46.3092 818.585 52.8269 841.276 65.8623C864.45 78.8977 881.59 96.0369 892.694 117.28C904.281 138.523 908.626 161.697 905.729 186.802L843.449 197.665C847.311 156.145 842 124.522 827.517 102.796C813.033 80.5875 789.859 69.4832 757.994 69.4832C740.614 69.4832 724.682 74.0698 710.198 83.2428C696.197 91.9331 685.093 108.348 676.885 132.488C668.678 156.627 664.574 191.388 664.574 236.771V307.017C678.575 289.154 694.749 276.36 713.095 268.635C731.924 260.428 751.96 256.324 773.202 256.324C816.171 256.324 850.691 269.36 876.762 295.43C902.832 321.501 915.868 356.504 915.868 400.438V407.68ZM664.574 367.849C664.574 408.887 668.195 441.234 675.437 464.891C683.162 488.548 694.266 505.445 708.75 515.584C723.716 525.24 741.58 530.068 762.34 530.068C788.41 530.068 809.171 521.136 824.62 503.273C840.552 484.927 848.518 453.545 848.518 409.128V401.886C848.518 364.711 841.518 335.744 827.517 314.984C813.516 293.741 791.79 283.119 762.34 283.119C744.959 283.119 727.337 287.706 709.474 296.879C692.093 306.052 677.127 321.501 664.574 343.227V367.849Z"\r\n            fill="#343434" />\r\n        <line x1="49.7256" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-check-list" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M222-200 80-342l56-56 85 85 170-170 56 57-225 226Zm0-320L80-662l56-56 85 85 170-170 56 57-225 226Zm298 240v-80h360v80H520Zm0-320v-80h360v80H520Z" />\r\n    </symbol>\r\n\r\n\r\n    \x3c!-- tags --\x3e\r\n\r\n    <symbol id="icon-wordpress-bold" viewBox="0 0 24 24">\r\n        <path\r\n            d="M14.7 11.3c1-.6 1.5-1.6 1.5-3 0-2.3-1.3-3.4-4-3.4H7v14h5.8c1.4 0 2.5-.3 3.3-1 .8-.7 1.2-1.7 1.2-2.9.1-1.9-.8-3.1-2.6-3.7zm-5.1-4h2.3c.6 0 1.1.1 1.4.4.3.3.5.7.5 1.2s-.2 1-.5 1.2c-.3.3-.8.4-1.4.4H9.6V7.3zm4.6 9c-.4.3-1 .4-1.7.4H9.6v-3.9h2.9c.7 0 1.3.2 1.7.5.4.3.6.8.6 1.5s-.2 1.2-.6 1.5z">\r\n        </path>\r\n    </symbol>\r\n    <symbol id="icon-wordpress-italic" viewBox="0 0 24 24">\r\n        <path d="M12.5 5L10 19h1.9l2.5-14z"></path>\r\n    </symbol>\r\n    <symbol id="icon-wordpress-anchor" viewBox="0 0 24 24">\r\n        <path\r\n            d="M10 17.389H8.444A5.194 5.194 0 1 1 8.444 7H10v1.5H8.444a3.694 3.694 0 0 0 0 7.389H10v1.5ZM14 7h1.556a5.194 5.194 0 0 1 0 10.39H14v-1.5h1.556a3.694 3.694 0 0 0 0-7.39H14V7Zm-4.5 6h5v-1.5h-5V13Z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-underline" viewBox="0 0 24 24">\r\n\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-wordpress-strike-through" viewBox="0 0 24 24">\r\n        <path\r\n            d="M9.1 9v-.5c0-.6.2-1.1.7-1.4.5-.3 1.2-.5 2-.5.7 0 1.4.1 2.1.3.7.2 1.4.5 2.1.9l.2-1.9c-.6-.3-1.2-.5-1.9-.7-.8-.1-1.6-.2-2.4-.2-1.5 0-2.7.3-3.6 1-.8.7-1.2 1.5-1.2 2.6V9h2zM20 12H4v1h8.3c.3.1.6.2.8.3.5.2.9.5 1.1.8.3.3.4.7.4 1.2 0 .7-.2 1.1-.8 1.5-.5.3-1.2.5-2.1.5-.8 0-1.6-.1-2.4-.3-.8-.2-1.5-.5-2.2-.8L7 18.1c.5.2 1.2.4 2 .6.8.2 1.6.3 2.4.3 1.7 0 3-.3 3.9-1 .9-.7 1.3-1.6 1.3-2.8 0-.9-.2-1.7-.7-2.2H20v-1z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-code-mark" viewBox="0 0 24 24">\r\n        <path\r\n            d="M20.8 10.7l-4.3-4.3-1.1 1.1 4.3 4.3c.1.1.1.3 0 .4l-4.3 4.3 1.1 1.1 4.3-4.3c.7-.8.7-1.9 0-2.6zM4.2 11.8l4.3-4.3-1-1-4.3 4.3c-.7.7-.7 1.8 0 2.5l4.3 4.3 1.1-1.1-4.3-4.3c-.2-.1-.2-.3-.1-.4z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-equation-mark" viewBox="0 0 24 24">\r\n        <path\r\n            d="M16.9 10.3l.8-1.3c.4-.6.7-1.2.9-1.6.2-.4.3-.8.3-1.2 0-.3-.1-.7-.2-1-.2-.2-.4-.4-.7-.6-.3-.2-.6-.3-1-.3s-.8.1-1.1.2c-.3.1-.7.3-1 .6l.1 1.3c.3-.3.5-.5.8-.6s.6-.2.9-.2c.3 0 .5.1.7.2.2.2.2.4.2.7 0 .3-.1.5-.2.8-.1.3-.4.7-.8 1.3l-1.8 2.8h4.3v-1.2h-2.2zm-2.8-3.1h-2L9.5 11 6.9 7.2h-2l3.6 5.3L4.7 18h2l2.7-4 2.7 4h2l-3.8-5.5 3.8-5.3z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-underline" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M213.85-155v-60h532.3v60h-532.3ZM480-298.85q-93.31 0-145.65-56.65Q282-412.15 282-507.31v-316.15h74.15v319.84q0 60.62 32.23 97.16T480-369.92q59.39 0 91.62-36.54 32.23-36.54 32.23-97.16v-319.84H678v316.15q0 95.16-52.35 151.81-52.34 56.65-145.65 56.65Z" />\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-link" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M440-280H280q-83 0-141.5-58.5T80-480q0-83 58.5-141.5T280-680h160v80H280q-50 0-85 35t-35 85q0 50 35 85t85 35h160v80ZM320-440v-80h320v80H320Zm200 160v-80h160q50 0 85-35t35-85q0-50-35-85t-85-35H520v-80h160q83 0 141.5 58.5T880-480q0 83-58.5 141.5T680-280H520Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-italic" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M215.77-215v-72.31h152.69l129.62-385.38H345.39V-745h366.15v72.31H571.15L441.54-287.31h140.38V-215H215.77Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-chevron-down" viewBox="0 0 24 24">\r\n        <path d="M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z"></path>\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-trash" viewBox="0 -960 960 960">\r\n\r\n        <path\r\n            d="M292.31-140q-29.92 0-51.12-21.19Q220-182.39 220-212.31V-720h-40v-60h180v-35.38h240V-780h180v60h-40v507.69Q740-182 719-161q-21 21-51.31 21H292.31ZM680-720H280v507.69q0 5.39 3.46 8.85t8.85 3.46h375.38q4.62 0 8.46-3.85 3.85-3.84 3.85-8.46V-720ZM376.16-280h59.99v-360h-59.99v360Zm147.69 0h59.99v-360h-59.99v360ZM280-720v520-520Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-duplicate" viewBox="0 -960 960 960">\r\n\r\n        <path\r\n            d="M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-clear" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M182.15-140q-14.38-3.62-26.46-15.69-12.07-12.08-15.69-26.46L777.85-820q15.61 4.23 26.76 15.69 11.16 11.46 16 26.46L182.15-140Zm213.31 0 76.85-76.85V-140h-76.85ZM560-227.69v-60h300v60H560ZM140-395.46v-84.31L480.23-820h84.31L140-395.46Zm490.85 20.07L820-564.54v84.31L715.15-375.39h-84.3ZM140-693.08v-54.61Q140-778 161-799q21-21 51.31-21h54.61L140-693.08Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-small-check" viewBox="0 -960 960 960">\r\n        <path d="M400-304 240-464l56-56 104 104 264-264 56 56-320 320Z" />\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-more" viewBox="0 0 24 24">\r\n        <path d="M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z" />\r\n    </symbol>\r\n\r\n</svg>',e.className="svg-icons-container",document.body.appendChild(e)}));let Q=null;function $(){setTimeout((()=>{if(console.log("select all content temporarrly"),window.getSelection){const e=window.getSelection();if(e.rangeCount>0){let n=(Q||e.getRangeAt(0)).commonAncestorContainer;1!==n.nodeType&&(n=n.parentNode);const t=n.closest(".johannes-content-element");if(t){e.removeAllRanges();const n=document.createRange();n.selectNodeContents(t),e.addRange(n)}else console.log("Nenhum elemento '.content' envolvendo a seleÃ§Ã£o atual foi encontrado.")}}}),11)}function J(){setTimeout((()=>{console.log("restore selection");const e=window.getSelection();Q&&(e.removeAllRanges(),e.addRange(Q))}),10)}function ee(){return Q}function ne(e){setTimeout((()=>{const n=document.createRange(),t=window.getSelection();n.selectNodeContents(e);let o=e;for(;o.lastChild&&o.lastChild.nodeType===Node.ELEMENT_NODE;)o=o.lastChild;o.lastChild&&(o=o.lastChild),n.setEnd(o,o.textContent.length),n.collapse(!1),t.removeAllRanges(),t.addRange(n),e.focus()}),10)}let te=null;var oe=t(54);let ie=!1,re=!1;function se(e){console.log("show text formatting bar"),fe(),ie=!0,re=!0,setTimeout((()=>{re=!1}),300),Q=null,function(){if(window.getSelection){const e=window.getSelection();e.rangeCount>0&&(Q=e.getRangeAt(0).cloneRange())}}(),linkTextButton.classList.remove("text-formatting-button-active"),boldTextButton.classList.remove("text-formatting-button-active"),italicTextButton.classList.remove("text-formatting-button-active"),underlineTextButton.classList.remove("text-formatting-button-active"),codeTextButton.classList.remove("text-formatting-button-active"),strikeThroughTextButton.classList.remove("text-formatting-button-active"),mathTextButton.classList.remove("text-formatting-button-active"),colorCircle.classList.remove("text-formatting-circle-active"),function(){const e=window.getSelection(),n=[],t=["STRONG","S","EM","U","CODE","MATH","A","MARK"];if(e.rangeCount){const o=e.getRangeAt(0),i=o.startContainer;if(i!==o.endContainer){const i=o.commonAncestorContainer;(1===i.nodeType?i.querySelectorAll("*"):[]).forEach((o=>{t.includes(o.tagName)&&e.containsNode(o,!0)&&n.push(o.tagName.toLowerCase())}))}else{let e=1===i.nodeType?i:i.parentNode;for(;e&&e!==document;)t.includes(e.tagName)&&n.push(e.tagName.toLowerCase()),e=e.parentNode}}return[...new Set(n)]}().forEach((e=>{"a"==e&&linkTextButton.classList.add("text-formatting-button-active"),"strong"==e&&boldTextButton.classList.add("text-formatting-button-active"),"em"==e&&italicTextButton.classList.add("text-formatting-button-active"),"u"==e&&underlineTextButton.classList.add("text-formatting-button-active"),"s"==e&&strikeThroughTextButton.classList.add("text-formatting-button-active"),"code"==e&&codeTextButton.classList.add("text-formatting-button-active"),"math"==e&&mathTextButton.classList.add("text-formatting-button-active"),"mark"==e&&colorCircle.classList.add("text-formatting-circle-active")})),function(){let e=function(){let e=window.getSelection().getRangeAt(0).commonAncestorContainer;3===e.nodeType&&(e=e.parentNode);const n=e.closest(".johannes-content-element");return"H1"===n.tagName?"Heading 1":"H2"===n.tagName?"Heading 2":"H3"===n.tagName?"Heading 3":"H4"===n.tagName?"Heading 4":"H5"===n.tagName?"Heading 5":"H6"===n.tagName?"Heading 6":"P"===n.tagName?"Text":"UL"===n.tagName&&n.classList.contains("checkbox-list")?"Todo list":"UL"===n.tagName?"Bulleted list":"OL"===n.tagName?"Numbered list":"BLOCKQUOTE"===n.tagName?"Quote":"PRE"===n.tagName?"Code":""}();turnIntoButton.querySelector("span").innerText=e}();const n=window.getSelection();if(n.rangeCount>0&&document.querySelector(".johannes-editor").contains(n.anchorNode)&&""!==n.toString().trim()){e.preventDefault(),e.stopPropagation();let t=n.getRangeAt(0).getBoundingClientRect();floatingToolbar.style.display="flex",floatingToolbar.style.left=t.left+window.scrollX-50+"px",floatingToolbar.style.top=t.top+window.scrollY-floatingToolbar.offsetHeight-10+"px"}}function ae(){console.log("hide text formatting bar "),"none"===floatingToolbar.style.display||me()||(floatingToolbar.style.display="none"),me()&&(fe(),J())}function le(e){const n=e.target.closest(".entry").getAttribute("data-tag"),t=e.target.closest(".entry").getAttribute("data-class");t?de(n,t):de(n),fe(),ae(),J()}function ce(){const e=linkBoxInput.value.trim();e&&(e.match(/^https?:\/\/.+/)?(function(e){te.href=e}(e),be(),linkBoxInput.value=""):alert("Please enter a valid URL."))}function de(e,n=""){let t=null;const o=ee();if(!o.toString().trim())return;const i=o.commonAncestorContainer;let r=null;if(r=3===i.nodeType?i.parentNode.tagName.toLowerCase()===e.toLowerCase()?i.parentNode:null:i.tagName.toLowerCase()===e.toLowerCase()?i:i.querySelector(e),r){const n=Array.from(r.parentNode.childNodes).filter((n=>1===n.nodeType&&n.tagName.toLowerCase()===e.toLowerCase()&&o.intersectsNode(n))),t=r.parentNode;n.forEach((e=>{for(;e.firstChild;)t.insertBefore(e.firstChild,e);t.removeChild(e)})),t.normalize(),o.setStart(t,0),o.setEnd(t,t.childNodes.length)}else{t=document.createElement(e),"mark"===e&&n.split(",").filter((e=>e.length>0)).forEach((e=>{t.classList.add(e)}));try{o.surroundContents(t)}catch(e){return void console.error("Erro ao aplicar a tag:",e)}o.selectNodeContents(t)}return t}function Ae(e){console.log("toggle more options"),"none"==moreTextOptionSelect.style.display?(moreTextOptionSelect.style.display="flex",(0,oe.showDependentBlockOptions)(e.target),$()):ge(),Be(),Ce(),be()}function pe(e){console.log("toggle change color"),"none"==colorTextOptionSelect.style.display?(colorTextOptionSelect.style.display="flex",(0,oe.showDependentBlockOptions)(e.target),colorTextOptionSelect.querySelectorAll(".option").forEach((e=>{e.querySelectorAll(".checked-svg").forEach((e=>{e.parentNode.removeChild(e)}))})),colorTextOptionSelect.querySelectorAll(".option").forEach((e=>{e.removeAttribute("disabled"),e.style.cursor="auto"})),clearColorBackgroundOption.style.display="none",clearColorBackgroundOption.style.cursor="auto",function(){let e=ee();if(e){let n=e.cloneContents(),t=document.createElement("div");t.appendChild(n);let o=function(e){const n=e.querySelectorAll("mark"),t=[];return n.forEach((e=>{e.classList.forEach((e=>{t.includes(e)||t.push(e)}))})),t}(t);o.forEach((e=>{let n=colorTextOptionSelect.querySelector(`[data-class="${e}"]`);if(n&&!n.querySelector(".checked-svg")){let e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.classList.add("checked-svg");let t=document.createElementNS("http://www.w3.org/2000/svg","use");t.setAttributeNS("http://www.w3.org/1999/xlink","href","#icon-material-small-check"),e.appendChild(t),e.setAttribute("width","16"),e.setAttribute("height","16"),e.setAttribute("fill","currentColor"),n.appendChild(e)}})),o.length>0?(colorTextOptionSelect.querySelectorAll(".option").forEach((e=>{e.setAttribute("disabled","true"),e.style.cursor="not-allowed"})),clearColorBackgroundOption.removeAttribute("disabled"),clearColorBackgroundOption.style.display="flex",clearColorBackgroundOption.style.cursor="auto"):clearColorBackgroundOption.style.display="none"}}()):colorTextOptionSelect.style.display="none",Ce(),ge(),be()}function ue(e){console.log("toggle turn into box"),"none"==turnIntoSelect.style.display?(turnIntoSelect.style.display="flex",$(),(0,oe.showDependentBlockOptions)(e.target),turnIntoSelect.querySelectorAll(".option").forEach((e=>{e.querySelectorAll(".checked-svg").forEach((e=>{e.parentNode.removeChild(e)}))})),function(){let e=function(){let e=window.getSelection().getRangeAt(0).commonAncestorContainer;return 3===e.nodeType&&(e=e.parentNode),e.closest(".block")}().querySelector(".johannes-content-element");if(e){let n=e.getAttribute("data-type"),t=turnIntoSelect.querySelector(`[data-type="${n}"]`);if(t){let e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.classList.add("checked-svg");let n=document.createElementNS("http://www.w3.org/2000/svg","use");n.setAttributeNS("http://www.w3.org/1999/xlink","href","#icon-material-small-check"),e.appendChild(n),e.setAttribute("width","16"),e.setAttribute("height","16"),e.setAttribute("fill","currentColor"),t.appendChild(e)}}}()):Ce(),Be(),ge(),be()}function he(){console.log("toggle input link box"),"none"==linkBox.style.display?function(){const e=ee().getBoundingClientRect(),n=floatingToolbar.offsetWidth,t=linkBox.offsetWidth,o=(floatingToolbar.getBoundingClientRect().left+n)/2,i=(linkBox.getBoundingClientRect().left+t)/2;var r;linkBox.style.position="absolute",linkBox.style.left=`${o-i+window.scrollX}px`,linkBox.style.top=`${e.bottom+window.scrollY+5}px`,linkBox.style.display="block",r=de("a"),te=r}():turnIntoSelect.style.display="none",Be(),ge(),Ce()}function me(){const e=document.querySelectorAll(".dependent-box");for(const n of e)if("none"!==n.style.display)return!0;return!1}function ge(){"none"!=moreTextOptionSelect.style.display&&(console.log("hide more options"),moreTextOptionSelect.style.display="none",J())}function Ce(){"none"!=turnIntoSelect.style.display&&(console.log("hide turn into box"),turnIntoSelect.style.display="none",J())}function Be(){"none"!=colorTextOptionSelect.style.display&&(console.log("hide change color box"),colorTextOptionSelect.style.display="none")}function be(){"none"!=linkBox.style.display&&(console.log("hide link box"),function(){if(te&&(""==te.href||null==te.href)){const e=te.parentNode;for(;te.firstChild;)e.insertBefore(te.firstChild,te);e&&(e.removeChild(te),e.normalize())}te=null}(),J(),linkBox.style.display="none")}function fe(){ge(),Ce(),Be(),be()}const Ee={CREATE_LIST_ELEMENT:"create-list-element",CREATE_NEW_ELEMENT:"create-new-element",DELETE_DRAGGABLE_BLOCK:"delete-block",DELETE_AND_FOCUS_ON_NEXT:"delete-and-focus-on-next",DELETE_AND_FOCUS_ON_PREVIOUS:"delete-and-focus-on-previous",DUPLICATE_SELECTED_BLOCK:"duplicate-selected-block",TRANSFORM_BLOCK:"transform-block",MOVE_UP_BLOCK:"move-up-block",MOVE_DOWN_BLOCK:"move-down-block",SHOW_TURN_INTO_BOX:"show-turn-into-box",SHOW_COLOR_BOX:"show-color-box",SHOW_MORE_OPTIONS_BOX:"show-more-options-box"},Ie={SHOW_BLOCK_OPTIONS:"show-block-options",HIDE_CLEAR_BLOCK_OPTIONS:"hide-clear-block-options",MOVE_FAKE_FOCUS_TO_NEXT_OPTION:"move-fake-focus-to-next-option",MOVE_FAKE_FOCUS_TO_PREVIOUS_OPTION:"move-fake-focus-to-previous-option",APPLY_SELECTED_BLOCK_TYPE:"apply-selected-block-type",FILTER_CONCAT:"filter-contact",FILTER_REMOVE_LAST:"filter-remove-last"},ye={SHOW_TEXT_FORMATTING_BAR:"show-text-formatting-bar",HIDE_TEXT_FORMATTING_BAR:"hide-text-formatting-bar",TOGGLE_MORE_OPTIONS_BOX:"toggle-more-options-box",TOGGLE_CHANGE_COLOR_BOX:"toggle-change-color-box",TOGGLE_TURN_INTO_BOX:"toggle-turn-into-box",TOGGLE_INPUT_LINK_BOX:"toggle-input-link-box",INPUT_LINK_URL:"input-link-url",TOGGLE_ENCLOSE_SELECTED_TEXT_TO:"toggle-enclose-selected-text-to"};Ee.CREATE_LIST_ELEMENT,Ee.CREATE_NEW_ELEMENT,Ee.DELETE_DRAGGABLE_BLOCK,Ee.DELETE_AND_FOCUS_ON_NEXT,Ee.DELETE_AND_FOCUS_ON_PREVIOUS,Ee.DUPLICATE_SELECTED_BLOCK,Ee.TRANSFORM_BLOCK,Ee.MOVE_UP_BLOCK,Ee.MOVE_DOWN_BLOCK,Ie.SHOW_BLOCK_OPTIONS,oe.showMainBlockOptions,Ie.HIDE_CLEAR_BLOCK_OPTIONS,oe.hideAndClearBlockOptions,Ie.MOVE_FAKE_FOCUS_TO_NEXT_OPTION,f.moveTheFakeFocusToTheNextMenuItem,Ie.MOVE_FAKE_FOCUS_TO_PREVIOUS_OPTION,oe.moveTheFakeFocusToPreviousBlockOption,Ie.APPLY_SELECTED_BLOCK_TYPE,oe.applySelectedBlockType,Ie.FILTER_CONCAT,oe.filterContact,Ie.FILTER_REMOVE_LAST,oe.filterRemoveLast,ye.SHOW_TEXT_FORMATTING_BAR,ye.HIDE_TEXT_FORMATTING_BAR,ye.TOGGLE_MORE_OPTIONS_BOX,ye.TOGGLE_CHANGE_COLOR_BOX,ye.TOGGLE_TURN_INTO_BOX,ye.TOGGLE_INPUT_LINK_BOX,ye.INPUT_LINK_URL,ye.TOGGLE_ENCLOSE_SELECTED_TEXT_TO,document.addEventListener("DOMContentLoaded",(function(){})),document.addEventListener("DOMContentLoaded",(function(){document.addEventListener("keydown",(function(e){}))})),document.addEventListener("keyup",(function(e){})),t(528),document.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".johannes-editor > .content").addEventListener("paste",(function(e){if("INPUT"===e.target.tagName||"TEXTAREA"===e.target.tagName)return;e.preventDefault();const n=e.target;if("P"===n.tagName&&n.isContentEditable){const t=(e.clipboardData||window.clipboardData).getData("text").split("\n").filter((e=>""!==e.trim()));n.innerText=t[0];let o=n.closest(".block");for(let e=1;e<t.length;e++){const n=X();n.querySelector(".johannes-content-element").innerText=t[e],o.insertAdjacentElement("afterend",n),o=n}ne(o.querySelector(".johannes-content-element"))}}))})),t(167);var xe=t(72),we=t.n(xe),ve=t(825),ke=t.n(ve),Te=t(659),Le=t.n(Te),Se=t(56),_e=t.n(Se),Oe=t(540),Ne=t.n(Oe),He=t(113),Me=t.n(He),Ve=t(282),De={};De.styleTagTransform=Me(),De.setAttributes=_e(),De.insert=Le().bind(null,"head"),De.domAPI=ke(),De.insertStyleElement=Ne(),we()(Ve.A,De),Ve.A&&Ve.A.locals&&Ve.A.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QjBCLGlCQUFpQixTQUFTLFNBQVU2QixHQUV4QyxHQUE2QixVQUF6QkEsRUFBTTFELE9BQU8wWSxTQUFnRCxhQUF6QmhWLEVBQU0xRCxPQUFPMFksUUFDakQsT0FHSmhWLEVBQU1qQixpQkFFTixNQUFNekMsRUFBUzBELEVBQU0xRCxPQUVyQixHQUF1QixNQUFuQkEsRUFBTzBZLFNBQW1CMVksRUFBTzBrQixrQkFBbUIsQ0FDcEQsTUFHTXhJLEdBSGdCeFksRUFBTWdaLGVBQWlCdGMsT0FBT3NjLGVBQ25CQyxRQUFRLFFBRWY2RCxNQUFNLE1BQU1KLFFBQU82QixHQUEwQixLQUFqQkEsRUFBTTVNLFNBRTVEclYsRUFBT2tKLFVBQVlnVCxFQUFPLEdBRTFCLElBQUl5SSxFQUFnQjNrQixFQUFPcUMsUUFBUSxVQUVuQyxJQUFLLElBQUl6RixFQUFJLEVBQUdBLEVBQUlzZixFQUFPeGYsT0FBUUUsSUFBSyxDQUNwQyxNQUFNZ29CLEVBQWUzSSxJQUNJMkksRUFBYXprQixjQUFjLDZCQUNuQytJLFVBQVlnVCxFQUFPdGYsR0FDcEMrbkIsRUFBYzNoQixzQkFBc0IsV0FBWTRoQixHQUNoREQsRUFBZ0JDLENBQ3BCLENBRUF4SCxHQUF1QnVILEVBQWN4a0IsY0FBYyw2QkFDdkQsQ0FDSixHQUFFLEksaUpDekJGL0IsR0FBVSxDQUFDLEVBRWZBLEdBQVFnRCxrQkFBb0IsS0FDNUJoRCxHQUFRMEMsY0FBZ0IsS0FDeEIxQyxHQUFRMEIsT0FBUyxVQUFjLEtBQU0sUUFDckMxQixHQUFRZSxPQUFTLEtBQ2pCZixHQUFRK0MsbUJBQXFCLEtBRWhCLEtBQUksS0FBUy9DLElBS0osTUFBVyxLQUFReW1CLFFBQVMsS0FBUUEsTSIsInNvdXJjZXMiOlsid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2Fzc2V0cy9jc3MvbWFpbi5jc3MiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9kcmFnLWFuZC1kcm9wLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL21lbWVudG8uanMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2pvaGFubmVzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9qb2hhbm5lcy93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvc2VydmljZXMvZXJyb3JzL1NlcnZpY2VBbHJlYWR5UmVnaXN0ZXJlZEV4Y2VwdGlvbi50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9zZXJ2aWNlcy9lcnJvcnMvU2VydmljZU5vdEZvdW5kRXhjZXB0aW9uLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL3NlcnZpY2VzL3NlcnZpY2UtcHJvdmlkZXIvU2VydmljZVByb3ZpZGVyLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL3NlcnZpY2VzL2VsZW1lbnQtZmFjdG9yeS9FbGVtZW50RmFjdG9yeVNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvc2VydmljZXMvYmxvY2stb3BlcmF0aW9ucy9CbG9ja09wZXJhdGlvbnNTZXJ2aWNlLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL0Jhc2VVSUNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL3F1aWNrLW1lbnUvUXVpY2tNZW51RW1wdHkudHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvY29tbW9uL0Jhc2VEb3VibHlMaW5rZWRMaXN0LnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbW1vbi9KTm9kZS50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21tb24vQ2lyY3VsYXJEb3VibHlMaW5rZWRMaXN0LnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvcXVpY2stbWVudS9RdWlja01lbnUudHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvY29tbW9uL0RvdWJseUxpbmtlZExpc3QudHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvY29tcG9uZW50cy9xdWljay1tZW51L1F1aWNrTWVudVNlY3Rpb24udHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvY29tcG9uZW50cy9jb21tb24vU1ZHSWNvbi50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL3F1aWNrLW1lbnUvUXVpY2tNZW51SXRlbS50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9idWlsZGVycy9RdWlja01lbnVCdWlsZGVyLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9kcm9wZG93bi10b29sL0Ryb3Bkb3duTWVudS50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvbGluay1ib3gvSW5wdXRMaW5rQm94LnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9saW5rLWJveC9JbnB1dExpbmtCb3hXcmFwcGVyLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9GbG9hdGluZ1Rvb2xiYXIudHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvY29tcG9uZW50cy9mbG9hdGluZy10b29sYmFyL2Ryb3Bkb3duLXRvb2wvRHJvcGRvd25NZW51TGlzdC50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvZHJvcGRvd24tdG9vbC9Ecm9wZG93bk1lbnVMaXN0SXRlbS50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvc2VwYXJhdG9yL0Zsb2F0aW5nVG9vbGJhclNlcGFyYXRvci50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvZ3JvdXAtYnV0dG9uL0dyb3VwQnV0dG9uLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9ncm91cC1idXR0b24vR3JvdXBlZEJ1dHRvbi50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvZHJvcGRvd24tdG9vbC9Db2xvckljb24udHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvc2VydmljZXMvdGV4dC1vcGVyYXRpb25zL1RleHRPcGVyYXRpb25TZXJ2aWNlLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9kcm9wZG93bi10b29sL0Ryb3Bkb3duTWVudUJ1dHRvbi50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9idWlsZGVycy9GbG9hdGluZ1Rvb2xiYXJCdWlsZGVyLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvYWRkLWJsb2NrL0FkZEJsb2NrQnV0dG9uLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvYWRkLWJsb2NrL0FkZEJsb2NrLnRzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZWRpdG9yL0VkaXRvci50cyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9idWlsZGVycy9VSUJ1aWxkZXIudHMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvZWxlbWVudC1mYWN0b3J5LmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL3RyaWdnZXJzL2xvYWQtZXZlbnRzLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2otc2VsZWN0aW9uLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2otd2luZG93LmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2otYW5jaG9yLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci90ZXh0LWZvcm1hdHRpbmctYmFyLmpzIiwid2VicGFjazovL2pvaGFubmVzLy4vc3JjL2NvbW1hbmRzL2NvbW1hbmQtZmFjdG9yeS5qcyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy90cmlnZ2Vycy9rZXlwcmVzcy1ldmVudHMuanMiLCJ3ZWJwYWNrOi8vam9oYW5uZXMvLi9zcmMvdGV4dC1ibG9ja3MtZnJvbS1uZXdsaW5lcy5qcyIsIndlYnBhY2s6Ly9qb2hhbm5lcy8uL3NyYy9hc3NldHMvY3NzL21haW4uY3NzPzFmYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC8qKiBDU1MgcmVzZXQgKi9cblxuLmJ1dHRvbi1yZXNldCB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGZvbnQ6IGluaGVyaXQ7XG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuXG5cbi8qKiBhZGQgYmxvY2sgKi9cbi5hZGQtYmxvY2sge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgbWFyZ2luLWxlZnQ6IDEuM3JlbTtcbn1cblxuLmFkZC1ibG9jay13cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDMuMTI1cmVtO1xufVxuXG4uYWRkLWJsb2NrLXdyYXBwZXI6aG92ZXIgLmFkZC1ibG9jayB7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLyoqIGFuZCBhZGQgYmxvY2sgKi9cblxuXG5cbi8qKiBMaXN0ICAqKi9cbm9sLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCxcbnVsLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtICFpbXBvcnRhbnQ7XG59XG5cblxuXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IGxpPmJ1dHRvbiB7XG4gICAgLyogZGlzcGxheTogbm9uZTsgKi9cbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICB0b3A6IDA7XG5cbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuXG59XG5cbi5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQgbGkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCBsaTo6YmVmb3JlIHtcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xufVxuXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IGxpOmhvdmVyPmJ1dHRvbiB7XG4gICAgLyogZGlzcGxheTogaW5saW5lLWJsb2NrOyAqL1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuXG59XG5cbnAuam9oYW5uZXMtY29udGVudC1lbGVtZW50IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbi5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQgLmNoZWNrYm94LWxpc3Qge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn1cblxuXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IC5jaGVja2JveC1saXN0IGxpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xufVxuXG5cbi5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQgdWwuY2hlY2tib3gtbGlzdCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCtzcGFuIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbn1cblxudWwuam9oYW5uZXMtY29udGVudC1lbGVtZW50Om5vdCguY2hlY2tib3gtbGlzdCksXG5vbC5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQ6bm90KC5jaGVja2JveC1saXN0KSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLyoqIGFuZCBsaXN0ICoqL1xuXG5cblxuLmJsb2NrPi5kcmFnLWhhbmRsZXIge1xuICAgIGNvbG9yOiAjODQ4ODhkO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBjdXJzb3I6IGdyYWI7XG4gICAgYWxpZ24tc2VsZjogc3RhcnQ7XG5cbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rOyAqL1xuICAgIHBhZGRpbmctdG9wOiAwLjMzcmVtO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgICAgXG59XG5cbi5kcmFnLWhhbmRsZXIgc3ZnIHtcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7ICovXG59XG5cbi5kcmFnLWhhbmRsZXIgc3ZnIHVzZSB7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogYmx1ZTsgKi9cbn1cblxuLmRyYWctaGFuZGxlcjphY3RpdmUge1xuICAgIGN1cnNvcjogZ3JhYmJpbmc7XG59XG5cbi5ibG9jayB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgLyogbWFyZ2luLWxlZnQ6IDIwcHg7ICovXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYmxvY2sgPiAqOm5vdCguZHJhZy1oYW5kbGVyKSB7XG4gICAgLyogUHJvcHJpZWRhZGUgZGVzZWphZGEgKi9cbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG59XG5cbi5ibG9jazpob3ZlciAuZHJhZy1oYW5kbGVyIHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbn1cblxuLmRyb3AtbGluZSB7XG4gICAgaGVpZ2h0OiAxcmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4NDg4OGQ7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cblxuLnRpdGxlIGgxIHtcbiAgICBtYXJnaW4tbGVmdDogMS4zcmVtO1xufVxuXG5oMVtkYXRhLXBsYWNlaG9sZGVyXTplbXB0eTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1wbGFjZWhvbGRlcik7XG4gICAgY29sb3I6ICM4NDg4OGQgIWltcG9ydGFudDtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuaDFbZGF0YS1wbGFjZWhvbGRlcl06Zm9jdXM6YmVmb3JlIHt9XG5cblxuKltjb250ZW50ZWRpdGFibGU9XCJ0cnVlXCJdOm5vdChoMSk6ZW1wdHk6YmVmb3JlIHtcbiAgICBjb250ZW50OiBhdHRyKGRhdGEtcGxhY2Vob2xkZXIpO1xuICAgIGNvbG9yOiAjODQ4ODhhY2Q7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuKltjb250ZW50ZWRpdGFibGU9XCJ0cnVlXCJdOm5vdChoMSk6ZW1wdHk6aG92ZXI6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuY2l0ZVtjb250ZW50ZWRpdGFibGU9XCJ0cnVlXCJdOmVtcHR5OmJlZm9yZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbipbY29udGVudGVkaXRhYmxlPVwidHJ1ZVwiXTpub3QoaDEpW2RhdGEtcGxhY2Vob2xkZXJdOmVtcHR5OmZvY3VzOmJlZm9yZSB7XG4gICAgY29udGVudDogYXR0cihkYXRhLXBsYWNlaG9sZGVyKTtcbiAgICBjb2xvcjogIzg0ODg4YWNkICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cblxuXG5oMSB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlciAhaW1wb3J0YW50O1xufVxuXG4uam9oYW5uZXMtZWRpdG9yIHtcbiAgICB3aWR0aDogMTAwJTtcblxufVxuXG4uY29udGVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuXG59XG5cbnByZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbltjb250ZW50ZWRpdGFibGVdIHtcbiAgICBvdXRsaW5lOiBub25lO1xufVxuXG5ib2R5IHtcbiAgICBoZWlnaHQ6IDIwMDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYxICFpbXBvcnRhbnQ7XG5cbiAgICBmb250LWZhbWlseTogc3lzdGVtLXVpLCAtYXBwbGUtc3lzdGVtLCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIk5vdG8gU2Fuc1wiLCBcIkxpYmVyYXRpb24gU2Fuc1wiLCBBcmlhbCwgc2Fucy1zZXJpZiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCIsIFwiTm90byBDb2xvciBFbW9qaVwiO1xufVxuXG5cbi5lZGl0b3Ige1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLXRvcDogODBweDtcbn1cblxucCB7XG4gICAgY29sb3I6ICMyNDI0MjQ7XG59XG5cblxuLmJsb2NrLFxuLmJsb2NrICoge1xuICAgIHVzZXItc2VsZWN0OiB0ZXh0O1xufVxuXG5cbi5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOyAqL1xufVxuXG5cbiNqb2hhbm5lc0VkaXRvciB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5qb2hhbm5lcy1lZGl0b3IgaHIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMnB4O1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDU1LCA1MywgNDcsIDAuMTYpO1xufVxuXG5cblxuLmpvaGFubmVzLWVkaXRvciBibG9ja3F1b3RlIHtcbiAgICBtYXJnaW46IDAuNXJlbSAwO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHJnYig1NSwgNTMsIDQ3KTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWNcbn1cblxuLmpvaGFubmVzLWVkaXRvciBjaXRlIHtcbiAgICBwYWRkaW5nLXRvcDogMXJlbSAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuXG4uam9oYW5uZXMtZWRpdG9yIGNpdGU6OmJlZm9yZSB7XG4gICAgY29udGVudDogJ+KAlCAnO1xufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4jbGlua0JveCB7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcblxuXG4gICAgYm94LXNoYWRvdzpcbiAgICAgICAgMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKSxcbiAgICAgICAgMCAtMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMDIpLFxuICAgICAgICAtMnB4IDAgNHB4IHJnYmEoMCwgMCwgMCwgMC4wMiksXG4gICAgICAgIDJweCAwIDRweCByZ2JhKDAsIDAsIDAsIDAuMDIpO1xuXG5cbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDBkMGQwO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICB6LWluZGV4OiA5OTk5OTk7XG4gICAgY29sb3I6IHJnYigxMjAsIDExOSwgMTE2KTtcbiAgICBib3JkZXItcmFkaXVzOiBub25lO1xufVxuXG5cbiNsaW5rQm94IGlucHV0IHtcbiAgICB3aWR0aDogMzE2cHg7XG4gICAgcGFkZGluZzogOHB4IDQwcHggOHB4IDE2cHg7XG4gICAgLyogYm9yZGVyLWNvbG9yOiAjZDBkMGQwOyAqL1xuXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk0OTQ5NDtcbiAgICAvKiBib3JkZXItcmFkaXVzOiA0cHg7ICovXG4gICAgaGVpZ2h0OiAyNHB4O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cblxuI2xpbmtCb3ggaW5wdXQ6OnNlbGVjdGlvbixcbiNsaW5rQm94IGlucHV0OmZvY3VzIHtcbiAgICBib3JkZXItcmFkaXVzOiBub25lO1xufVxuXG5cblxuXG5cblxuXG5cbi8qKiBUZXh0IGZvcm1hdHRpbmcgQmFyICoqL1xuXG5cblxuI2Zsb2F0aW5nVG9vbGJhciB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6IDhweCAxNnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIHotaW5kZXg6IDk5OTk5OTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi8qIFRPRE86IHJlbW92ZSB0aGlzKi9cbnNwYW4ge1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuXG4jZmxvYXRpbmdUb29sYmFyIC5pdGVtIHtcbiAgICBjb2xvcjogcmdiKDEyMCwgMTE5LCAxMTYpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEwcHg7XG59XG5cbiNmbG9hdGluZ1Rvb2xiYXIgLml0ZW0+YnV0dG9uIHtcblxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cblxuI2Zsb2F0aW5nVG9vbGJhciBzZWxlY3Qge1xuICAgIGNvbG9yOiByZ2IoMTIwLCAxMTksIDExNik7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGZvbnQtc2l6ZTogMC44NXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xufVxuXG4uc2VsZWN0LXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uc2VsZWN0LXdyYXBwZXIgdWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDE4MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICAgcGFkZGluZy1yaWdodDogNXB4O1xuICAgIHRvcDogMi4ycmVtO1xuICAgIGNvbG9yOiByZ2IoNTUsIDUzLCA0Nyk7XG59XG5cbi5zZWxlY3Qtd3JhcHBlciB1bCBsaSB7XG4gICAgLyogZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93OyAqL1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTBweDtcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICB1c2VyLXNlbGVjdDogbm9uZSAhaW1wb3J0YW50O1xuXG4gICAgZm9udC1zaXplOiBzbWFsbCAhaW1wb3J0YW50O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5zZWxlY3Qtd3JhcHBlciB1bCBsaSAub3B0aW9uLWltYWdlIHtcbiAgICB3aWR0aDogMjJweDtcbiAgICBoZWlnaHQ6IDIycHg7XG4gICAgY29sb3I6ICMyNDI0MjQ7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xufVxuXG4uc2VsZWN0LXdyYXBwZXIgdWwgbGkgLm9wdGlvbi1pbWFnZSBzdmcge1xuICAgIGNvbG9yOiAjNGY0ZjRmO1xuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cblxuLnRleHQtZm9ybWF0dGluZy1zZWxlY3QtYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuI3R1cm5JbnRvQnV0dG9uIHNwYW4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcblxufVxuXG4jdHVybkludG9CdXR0b24gc3ZnIHVzZSB7XG4gICAgbWFyZ2luOiBhdXRvO1xufVxuXG4uc2VsZWN0LXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogcmdiKDEyMCwgMTE5LCAxMTYpO1xufVxuXG5cblxuXG5cblxuXG5cblxuXG5jb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBkMGQwO1xufVxuXG5cblxuXG5hOm5vdChbaHJlZl0pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDNlM2ZkO1xufVxuXG4udGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUge1xuICAgIGNvbG9yOiAjMjM4MmUyO1xufVxuXG4udGV4dC1mb3JtYXR0aW5nLWNpcmNsZS1hY3RpdmUge1xuICAgIGJvcmRlci1jb2xvcjogIzIzODJlMiAhaW1wb3J0YW50O1xufVxuXG5cblxuI21vcmVUZXh0T3B0aW9uU2VsZWN0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5tb3JlVGV4dE9wdGlvbldyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuXG5cblxuLnNlbGVjdC13cmFwcGVyIHVsPmgzIHtcbiAgICBmb250LXNpemU6IHNtYWxsICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMzNzM1MmZhNjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBmb250LXdlaWdodDogNjAwICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuXG4uYmdjLXJlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZEREVERTtcbn1cblxuLmJnYy1ncmVlbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Q3RjdEQztcbn1cblxuLmJnYy1ibHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDlFREY2O1xufVxuXG4uYmdjLXllbGxvdyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRjREMTtcbn1cblxuLmJnYy1ncmV5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTFFMEUwO1xufVxuXG5wLFxubWFyayB7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbiN0dXJuSW50b1NlbGVjdCAub3B0aW9uLWltYWdlIHtcbiAgICAvKiBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7ICovXG59XG5cbi5ib3JkZXItbGVzcy1pbWFnZSB7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xufVxuXG5cblxuXG4vKiogQmxvY2sgT3B0aW9ucyAqKi9cbi5zb2Z0LWJveC1zaGFkb3cge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBib3gtc2hhZG93OlxuICAgICAgICAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpLFxuICAgICAgICAwIC0ycHggNHB4IHJnYmEoMjE2LCAxOTYsIDE5NiwgMC4wMiksXG4gICAgICAgIC0ycHggMCA0cHggcmdiYSgwLCAwLCAwLCAwLjAyKSxcbiAgICAgICAgMnB4IDAgNHB4IHJnYmEoMCwgMCwgMCwgMC4wMik7XG5cbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDBkMGQwO1xufVxuXG4uYmxvY2stb3B0aW9ucy13cmFwcGVyIHtcbiAgICB6LWluZGV4OiA5OTk5OTk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5ibG9jay1vcHRpb25zIHtcbiAgICB3aWR0aDogMTlyZW07XG4gICAgbWF4LWhlaWdodDogMTlyZW07XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLmJsb2NrLW9wdGlvbnMge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xufVxuXG4uYmxvY2stb3B0aW9ucyBzZWN0aW9uIGgyIHtcbiAgICBmb250LXNpemU6IHNtYWxsICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMzNzM1MmZhNjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBmb250LXdlaWdodDogNjAwICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbn1cblxuLmJsb2NrLW9wdGlvbnMgLm9wdGlvbiB7XG4gICAgcGFkZGluZzogMC4zMTI1cmVtIDAuNjI1cmVtO1xuICAgIG1hcmdpbjogMC4zMTI1cmVtIDA7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogbGVmdDtcbiAgICBnYXA6IDAuNnJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi5ibG9jay1vcHRpb25zIC5vcHRpb246Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTllOTtcbiAgICBib3JkZXI6IGluaGVyaXQ7XG59XG5cbi5ibG9jay1vcHRpb25zLWZvY3VzZWQge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTllOTtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cblxuXG5cbi5ibG9jay1vcHRpb25zIC5vcHRpb246Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllOWU5O1xuICAgIGJvcmRlcjogaW5oZXJpdDtcbn1cblxuLyogLm9wdGlvbi1ob3Zlcjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTllOTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAycHggI2U5ZTllOTtcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7XG4gICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlO1xufSAqL1xuXG4vKiAuc2VsZWN0LXdyYXBwZXI+YnV0dG9uLCAqL1xuXG4vKiAjdHVybkludG9CdXR0b24sXG4jY29sb3JUZXh0QnV0dG9uIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcbn0gKi9cblxuI3R1cm5JbnRvQnV0dG9uOm5vdChbZGlzYWJsZWRdKTpob3ZlcixcbiNjb2xvclRleHRCdXR0b246bm90KFtkaXNhYmxlZF0pOmhvdmVyLFxuI21vcmVUZXh0T3B0aW9uQnV0dG9uOm5vdChbZGlzYWJsZWRdKTpob3ZlcixcbiNmbG9hdGluZ1Rvb2xiYXIgLml0ZW0+YnV0dG9uOm5vdChbZGlzYWJsZWRdKTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTllOTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAycHggI2U5ZTllOTtcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7XG4gICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlO1xufVxuXG51bCAub3B0aW9uLWhvdmVyOm5vdChbZGlzYWJsZWRdKTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTllOTtcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7XG4gICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlO1xufVxuXG5cbi5vcHRpb25bZm9jdXNlZD1cInRydWVcIl0ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiZGU0ZmY7XG59XG5cblxuXG5cblxuLm9wdGlvbi1pbWFnZSB7XG4gICAgd2lkdGg6IDIuODc1cmVtO1xuICAgIGhlaWdodDogMi44NzVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgY29sb3I6ICM0ZjRmNGY7XG5cbiAgICAvKiBjb2xvcjogIzg0ODg4ZDsgKi9cbiAgICAvKiBjb2xvcjogIzI0MjQyNDsgKi9cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5vcHRpb24taW1hZ2UgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDIuODc1cmVtO1xuICAgIG1heC1oZWlnaHQ6IDIuODc1cmVtO1xufVxuXG4ub3B0aW9uLWltYWdlIHN2ZyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcGFkZGluZzogMC42MjVyZW07XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxufVxuXG4ub3B0aW9uLXRleHQgKiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG5cbn1cblxuLm9wdGlvbi10ZXh0IC5ibG9jay10aXRsZSB7XG4gICAgZm9udC1zaXplOiBzbWFsbCAhaW1wb3J0YW50O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5vcHRpb24tdGV4dCAuYmxvY2stZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogc21hbGwgIWltcG9ydGFudDtcbn1cblxuLyoqIEVuZCBCbG9jayBPcHRpb25zICoqL1xuXG5cblxuI2RlbGV0ZUJsb2NrQnV0dG9uOmhvdmVyIHN2ZyxcbiNkZWxldGVCbG9ja0J1dHRvbjpob3ZlciB7XG4gICAgY29sb3I6IHJnYigyMzUsIDg3LCA4NykgIWltcG9ydGFudDtcbn1cblxuXG5cblxuXG5cblxuLmpvaGFubmVzLWVkaXRvciAqOjpzZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjExLCAyMjcsIDI1MywgMC41KSAhaW1wb3J0YW50O1xufVxuXG4uam9oYW5uZXMtZWRpdG9yIG1hcmssXG4uam9oYW5uZXMtZWRpdG9yICoge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjUgIWltcG9ydGFudDtcbn1cblxuLm9wdGlvbiB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4udGV4dC1vcHRpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxMHB4O1xufVxuXG5cblxuXG46cm9vdCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIC8qIFRhbWFuaG8gcGFkcsOjbyAqL1xufVxuXG4vKiBQYXJhIHRlbGFzIGNvbSBkZW5zaWRhZGUgbcOpZGlhICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLFxub25seSBzY3JlZW4gYW5kIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLFxub25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSxcbm9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDJkcHB4KSB7XG4gICAgOnJvb3Qge1xuICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgIC8qIEF1bWVudGEgbyB0YW1hbmhvIGRhIGZvbnRlIHBhcmEgdGVsYXMgZGUgYWx0YSBkZW5zaWRhZGUgKi9cbiAgICB9XG59XG5cbi8qIFBhcmEgdGVsYXMgY29tIGFsdMOtc3NpbWEgZGVuc2lkYWRlICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLFxub25seSBzY3JlZW4gYW5kIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLFxub25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMjg4ZHBpKSxcbm9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDNkcHB4KSB7XG4gICAgOnJvb3Qge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIC8qIEFpbmRhIG1haW9yIHBhcmEgdGVsYXMgZGUgZGVuc2lkYWRlIG11aXRvIGFsdGEgKi9cbiAgICB9XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL2Nzcy9tYWluLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxlQUFlOztBQUVmO0lBQ0ksWUFBWTtJQUNaLFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLGlCQUFpQjtJQUNqQix1QkFBdUI7SUFDdkIsY0FBYztJQUNkLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsK0JBQStCO0lBQy9CLGdDQUFnQztJQUNoQyx3QkFBd0I7QUFDNUI7Ozs7QUFJQSxlQUFlO0FBQ2Y7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2Qix5QkFBeUI7SUFDekIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBLG1CQUFtQjs7OztBQUluQixZ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SSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsU0FBUztBQUNiOzs7OztBQUtBO0lBQ0ksZUFBZTtJQUNmLG1CQUFtQjtBQUN2Qjs7QUFFQSxtQ0FBbUM7QUFDbkM7Ozs7SUFJSTtRQUNJLGVBQWU7UUFDZiw0REFBNEQ7SUFDaEU7QUFDSjs7QUFFQSx1Q0FBdUM7QUFDdkM7Ozs7SUFJSTtRQUNJLGVBQWU7UUFDZixtREFBbUQ7SUFDdkQ7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiogQ1NTIHJlc2V0ICovXFxuXFxuLmJ1dHRvbi1yZXNldCB7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICB3aWR0aDogYXV0bztcXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XFxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgICBjb2xvcjogaW5oZXJpdDtcXG4gICAgZm9udDogaW5oZXJpdDtcXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuXFxuXFxuLyoqIGFkZCBibG9jayAqL1xcbi5hZGQtYmxvY2sge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHdpZHRoOiAyNHB4O1xcbiAgICBoZWlnaHQ6IDI0cHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgbWFyZ2luLWxlZnQ6IDEuM3JlbTtcXG59XFxuXFxuLmFkZC1ibG9jay13cmFwcGVyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMy4xMjVyZW07XFxufVxcblxcbi5hZGQtYmxvY2std3JhcHBlcjpob3ZlciAuYWRkLWJsb2NrIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLyoqIGFuZCBhZGQgYmxvY2sgKi9cXG5cXG5cXG5cXG4vKiogTGlzdCAgKiovXFxub2wuam9oYW5uZXMtY29udGVudC1lbGVtZW50LFxcbnVsLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCB7XFxuICAgIHBhZGRpbmctbGVmdDogMXJlbSAhaW1wb3J0YW50O1xcbn1cXG5cXG5cXG5cXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IGxpPmJ1dHRvbiB7XFxuICAgIC8qIGRpc3BsYXk6IG5vbmU7ICovXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxuICAgIHRvcDogMDtcXG5cXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcblxcbn1cXG5cXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IGxpIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IGxpOjpiZWZvcmUge1xcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xcbn1cXG5cXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IGxpOmhvdmVyPmJ1dHRvbiB7XFxuICAgIC8qIGRpc3BsYXk6IGlubGluZS1ibG9jazsgKi9cXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuXFxufVxcblxcbnAuam9oYW5uZXMtY29udGVudC1lbGVtZW50IHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICBsaW5lLWhlaWdodDogMTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5cXG4uam9oYW5uZXMtY29udGVudC1lbGVtZW50IC5jaGVja2JveC1saXN0IHtcXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcXG59XFxuXFxuXFxuLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCAuY2hlY2tib3gtbGlzdCBsaSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogbGVmdDtcXG59XFxuXFxuXFxuLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCB1bC5jaGVja2JveC1saXN0IGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl06Y2hlY2tlZCtzcGFuIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbnVsLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudDpub3QoLmNoZWNrYm94LWxpc3QpLFxcbm9sLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudDpub3QoLmNoZWNrYm94LWxpc3QpIHtcXG4gICAgcGFkZGluZy1sZWZ0OiAxLjVyZW0gIWltcG9ydGFudDtcXG59XFxuXFxuLyoqIGFuZCBsaXN0ICoqL1xcblxcblxcblxcbi5ibG9jaz4uZHJhZy1oYW5kbGVyIHtcXG4gICAgY29sb3I6ICM4NDg4OGQ7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gICAgY3Vyc29yOiBncmFiO1xcbiAgICBhbGlnbi1zZWxmOiBzdGFydDtcXG5cXG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcGluazsgKi9cXG4gICAgcGFkZGluZy10b3A6IDAuMzNyZW07XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgICAgXFxufVxcblxcbi5kcmFnLWhhbmRsZXIgc3ZnIHtcXG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmVkOyAqL1xcbn1cXG5cXG4uZHJhZy1oYW5kbGVyIHN2ZyB1c2Uge1xcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOyAqL1xcbn1cXG5cXG4uZHJhZy1oYW5kbGVyOmFjdGl2ZSB7XFxuICAgIGN1cnNvcjogZ3JhYmJpbmc7XFxufVxcblxcbi5ibG9jayB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XFxuICAgIC8qIG1hcmdpbi1sZWZ0OiAyMHB4OyAqL1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5ibG9jayA+ICo6bm90KC5kcmFnLWhhbmRsZXIpIHtcXG4gICAgLyogUHJvcHJpZWRhZGUgZGVzZWphZGEgKi9cXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcbn1cXG5cXG4uYmxvY2s6aG92ZXIgLmRyYWctaGFuZGxlciB7XFxuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XFxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XFxuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XFxufVxcblxcbi5kcm9wLWxpbmUge1xcbiAgICBoZWlnaHQ6IDFyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM4NDg4OGQ7XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG5cXG4udGl0bGUgaDEge1xcbiAgICBtYXJnaW4tbGVmdDogMS4zcmVtO1xcbn1cXG5cXG5oMVtkYXRhLXBsYWNlaG9sZGVyXTplbXB0eTpiZWZvcmUge1xcbiAgICBjb250ZW50OiBhdHRyKGRhdGEtcGxhY2Vob2xkZXIpO1xcbiAgICBjb2xvcjogIzg0ODg4ZCAhaW1wb3J0YW50O1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuaDFbZGF0YS1wbGFjZWhvbGRlcl06Zm9jdXM6YmVmb3JlIHt9XFxuXFxuXFxuKltjb250ZW50ZWRpdGFibGU9XFxcInRydWVcXFwiXTpub3QoaDEpOmVtcHR5OmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1wbGFjZWhvbGRlcik7XFxuICAgIGNvbG9yOiAjODQ4ODhhY2Q7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbipbY29udGVudGVkaXRhYmxlPVxcXCJ0cnVlXFxcIl06bm90KGgxKTplbXB0eTpob3ZlcjpiZWZvcmUge1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuY2l0ZVtjb250ZW50ZWRpdGFibGU9XFxcInRydWVcXFwiXTplbXB0eTpiZWZvcmUge1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuKltjb250ZW50ZWRpdGFibGU9XFxcInRydWVcXFwiXTpub3QoaDEpW2RhdGEtcGxhY2Vob2xkZXJdOmVtcHR5OmZvY3VzOmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1wbGFjZWhvbGRlcik7XFxuICAgIGNvbG9yOiAjODQ4ODhhY2QgIWltcG9ydGFudDtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcblxcblxcbmgxIHtcXG4gICAgZm9udC1zaXplOiAyLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXIgIWltcG9ydGFudDtcXG59XFxuXFxuLmpvaGFubmVzLWVkaXRvciB7XFxuICAgIHdpZHRoOiAxMDAlO1xcblxcbn1cXG5cXG4uY29udGVudCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcblxcblxcbn1cXG5cXG5wcmUge1xcbiAgICB3aWR0aDogMTAwJTtcXG59XFxuXFxuW2NvbnRlbnRlZGl0YWJsZV0ge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgaGVpZ2h0OiAyMDAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjEgIWltcG9ydGFudDtcXG5cXG4gICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgXFxcIlNlZ29lIFVJXFxcIiwgUm9ib3RvLCBcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLCBcXFwiTm90byBTYW5zXFxcIiwgXFxcIkxpYmVyYXRpb24gU2Fuc1xcXCIsIEFyaWFsLCBzYW5zLXNlcmlmLCBcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLCBcXFwiU2Vnb2UgVUkgRW1vamlcXFwiLCBcXFwiU2Vnb2UgVUkgU3ltYm9sXFxcIiwgXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiO1xcbn1cXG5cXG5cXG4uZWRpdG9yIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWFyZ2luLXRvcDogODBweDtcXG59XFxuXFxucCB7XFxuICAgIGNvbG9yOiAjMjQyNDI0O1xcbn1cXG5cXG5cXG4uYmxvY2ssXFxuLmJsb2NrICoge1xcbiAgICB1c2VyLXNlbGVjdDogdGV4dDtcXG59XFxuXFxuXFxuLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOyAqL1xcbn1cXG5cXG5cXG4jam9oYW5uZXNFZGl0b3Ige1xcbiAgICB3aWR0aDogNjAlO1xcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbn1cXG5cXG4uam9oYW5uZXMtZWRpdG9yIGhyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMnB4O1xcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDU1LCA1MywgNDcsIDAuMTYpO1xcbn1cXG5cXG5cXG5cXG4uam9oYW5uZXMtZWRpdG9yIGJsb2NrcXVvdGUge1xcbiAgICBtYXJnaW46IDAuNXJlbSAwO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XFxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgcmdiKDU1LCA1MywgNDcpO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWNcXG59XFxuXFxuLmpvaGFubmVzLWVkaXRvciBjaXRlIHtcXG4gICAgcGFkZGluZy10b3A6IDFyZW0gIWltcG9ydGFudDtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG5cXG4uam9oYW5uZXMtZWRpdG9yIGNpdGU6OmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6ICfigJQgJztcXG59XFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuI2xpbmtCb3gge1xcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XFxuXFxuXFxuICAgIGJveC1zaGFkb3c6XFxuICAgICAgICAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpLFxcbiAgICAgICAgMCAtMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMDIpLFxcbiAgICAgICAgLTJweCAwIDRweCByZ2JhKDAsIDAsIDAsIDAuMDIpLFxcbiAgICAgICAgMnB4IDAgNHB4IHJnYmEoMCwgMCwgMCwgMC4wMik7XFxuXFxuXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkMGQwZDA7XFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXG4gICAgei1pbmRleDogOTk5OTk5O1xcbiAgICBjb2xvcjogcmdiKDEyMCwgMTE5LCAxMTYpO1xcbiAgICBib3JkZXItcmFkaXVzOiBub25lO1xcbn1cXG5cXG5cXG4jbGlua0JveCBpbnB1dCB7XFxuICAgIHdpZHRoOiAzMTZweDtcXG4gICAgcGFkZGluZzogOHB4IDQwcHggOHB4IDE2cHg7XFxuICAgIC8qIGJvcmRlci1jb2xvcjogI2QwZDBkMDsgKi9cXG5cXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk0OTQ5NDtcXG4gICAgLyogYm9yZGVyLXJhZGl1czogNHB4OyAqL1xcbiAgICBoZWlnaHQ6IDI0cHg7XFxuXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG5cXG4jbGlua0JveCBpbnB1dDo6c2VsZWN0aW9uLFxcbiNsaW5rQm94IGlucHV0OmZvY3VzIHtcXG4gICAgYm9yZGVyLXJhZGl1czogbm9uZTtcXG59XFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuLyoqIFRleHQgZm9ybWF0dGluZyBCYXIgKiovXFxuXFxuXFxuXFxuI2Zsb2F0aW5nVG9vbGJhciB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgcGFkZGluZzogOHB4IDE2cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXG4gICAgei1pbmRleDogOTk5OTk5O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcbn1cXG5cXG4vKiBUT0RPOiByZW1vdmUgdGhpcyovXFxuc3BhbiB7XFxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcXG59XFxuXFxuXFxuI2Zsb2F0aW5nVG9vbGJhciAuaXRlbSB7XFxuICAgIGNvbG9yOiByZ2IoMTIwLCAxMTksIDExNik7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI2Zsb2F0aW5nVG9vbGJhciAuaXRlbT5idXR0b24ge1xcblxcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuXFxuI2Zsb2F0aW5nVG9vbGJhciBzZWxlY3Qge1xcbiAgICBjb2xvcjogcmdiKDEyMCwgMTE5LCAxMTYpO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGZvbnQtc2l6ZTogMC44NXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcXG59XFxuXFxuLnNlbGVjdC13cmFwcGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnNlbGVjdC13cmFwcGVyIHVsIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICB3aWR0aDogMTgwcHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XFxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XFxuICAgIHRvcDogMi4ycmVtO1xcbiAgICBjb2xvcjogcmdiKDU1LCA1MywgNDcpO1xcbn1cXG5cXG4uc2VsZWN0LXdyYXBwZXIgdWwgbGkge1xcbiAgICAvKiBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93ICFpbXBvcnRhbnQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdzsgKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XFxuICAgIHVzZXItc2VsZWN0OiBub25lICFpbXBvcnRhbnQ7XFxuXFxuICAgIGZvbnQtc2l6ZTogc21hbGwgIWltcG9ydGFudDtcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG59XFxuXFxuLnNlbGVjdC13cmFwcGVyIHVsIGxpIC5vcHRpb24taW1hZ2Uge1xcbiAgICB3aWR0aDogMjJweDtcXG4gICAgaGVpZ2h0OiAyMnB4O1xcbiAgICBjb2xvcjogIzI0MjQyNDtcXG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcXG59XFxuXFxuLnNlbGVjdC13cmFwcGVyIHVsIGxpIC5vcHRpb24taW1hZ2Ugc3ZnIHtcXG4gICAgY29sb3I6ICM0ZjRmNGY7XFxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcXG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XFxufVxcblxcbi50ZXh0LWZvcm1hdHRpbmctc2VsZWN0LWJ1dHRvbiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbiN0dXJuSW50b0J1dHRvbiBzcGFuIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDAuOXJlbTtcXG5cXG59XFxuXFxuI3R1cm5JbnRvQnV0dG9uIHN2ZyB1c2Uge1xcbiAgICBtYXJnaW46IGF1dG87XFxufVxcblxcbi5zZWxlY3Qtd3JhcHBlciB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgY29sb3I6IHJnYigxMjAsIDExOSwgMTE2KTtcXG59XFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuY29kZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkMGQwZDA7XFxufVxcblxcblxcblxcblxcbmE6bm90KFtocmVmXSkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDNlM2ZkO1xcbn1cXG5cXG4udGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUge1xcbiAgICBjb2xvcjogIzIzODJlMjtcXG59XFxuXFxuLnRleHQtZm9ybWF0dGluZy1jaXJjbGUtYWN0aXZlIHtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMjM4MmUyICFpbXBvcnRhbnQ7XFxufVxcblxcblxcblxcbiNtb3JlVGV4dE9wdGlvblNlbGVjdCB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuXFxuLm1vcmVUZXh0T3B0aW9uV3JhcHBlciB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuXFxuXFxuXFxuLnNlbGVjdC13cmFwcGVyIHVsPmgzIHtcXG4gICAgZm9udC1zaXplOiBzbWFsbCAhaW1wb3J0YW50O1xcbiAgICBjb2xvcjogIzM3MzUyZmE2O1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDAgIWltcG9ydGFudDtcXG4gICAgbWFyZ2luLXRvcDogNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XFxufVxcblxcblxcbi5iZ2MtcmVkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZEREVERTtcXG59XFxuXFxuLmJnYy1ncmVlbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNEN0Y3REM7XFxufVxcblxcbi5iZ2MtYmx1ZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNEOUVERjY7XFxufVxcblxcbi5iZ2MteWVsbG93IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRjREMTtcXG59XFxuXFxuLmJnYy1ncmV5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0UxRTBFMDtcXG59XFxuXFxucCxcXG5tYXJrIHtcXG4gICAgbGluZS1oZWlnaHQ6IDE7XFxufVxcblxcbiN0dXJuSW50b1NlbGVjdCAub3B0aW9uLWltYWdlIHtcXG4gICAgLyogZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyAqL1xcbn1cXG5cXG4uYm9yZGVyLWxlc3MtaW1hZ2Uge1xcbiAgICB3aWR0aDogMjRweDtcXG4gICAgaGVpZ2h0OiAyNHB4O1xcbn1cXG5cXG5cXG5cXG5cXG4vKiogQmxvY2sgT3B0aW9ucyAqKi9cXG4uc29mdC1ib3gtc2hhZG93IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XFxuICAgIGJveC1zaGFkb3c6XFxuICAgICAgICAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpLFxcbiAgICAgICAgMCAtMnB4IDRweCByZ2JhKDIxNiwgMTk2LCAxOTYsIDAuMDIpLFxcbiAgICAgICAgLTJweCAwIDRweCByZ2JhKDAsIDAsIDAsIDAuMDIpLFxcbiAgICAgICAgMnB4IDAgNHB4IHJnYmEoMCwgMCwgMCwgMC4wMik7XFxuXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkMGQwZDA7XFxufVxcblxcbi5ibG9jay1vcHRpb25zLXdyYXBwZXIge1xcbiAgICB6LWluZGV4OiA5OTk5OTk7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmJsb2NrLW9wdGlvbnMge1xcbiAgICB3aWR0aDogMTlyZW07XFxuICAgIG1heC1oZWlnaHQ6IDE5cmVtO1xcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xcbn1cXG5cXG4uYmxvY2stb3B0aW9ucyB7XFxuICAgIHBhZGRpbmc6IDAgMTBweDtcXG4gICAgYmFja2dyb3VuZDogI2Y5ZjlmOTtcXG59XFxuXFxuLmJsb2NrLW9wdGlvbnMgc2VjdGlvbiBoMiB7XFxuICAgIGZvbnQtc2l6ZTogc21hbGwgIWltcG9ydGFudDtcXG4gICAgY29sb3I6ICMzNzM1MmZhNjtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBmb250LXdlaWdodDogNjAwICFpbXBvcnRhbnQ7XFxuICAgIG1hcmdpbi10b3A6IDVweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcXG59XFxuXFxuLmJsb2NrLW9wdGlvbnMgLm9wdGlvbiB7XFxuICAgIHBhZGRpbmc6IDAuMzEyNXJlbSAwLjYyNXJlbTtcXG4gICAgbWFyZ2luOiAwLjMxMjVyZW0gMDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XFxuICAgIGdhcDogMC42cmVtO1xcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XFxufVxcblxcbi5ibG9jay1vcHRpb25zIC5vcHRpb246Zm9jdXMge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllOWU5O1xcbiAgICBib3JkZXI6IGluaGVyaXQ7XFxufVxcblxcbi5ibG9jay1vcHRpb25zLWZvY3VzZWQge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllOWU5O1xcbiAgICBib3JkZXI6IG5vbmU7XFxufVxcblxcblxcblxcblxcbi5ibG9jay1vcHRpb25zIC5vcHRpb246Zm9jdXMtdmlzaWJsZSB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWU5ZTk7XFxuICAgIGJvcmRlcjogaW5oZXJpdDtcXG59XFxuXFxuLyogLm9wdGlvbi1ob3Zlcjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWU5ZTk7XFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMHB4IDJweCAjZTllOWU5O1xcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7XFxuICAgIHRyYW5zaXRpb246IDAuMXMgZWFzZTtcXG59ICovXFxuXFxuLyogLnNlbGVjdC13cmFwcGVyPmJ1dHRvbiwgKi9cXG5cXG4vKiAjdHVybkludG9CdXR0b24sXFxuI2NvbG9yVGV4dEJ1dHRvbiB7XFxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xcbn0gKi9cXG5cXG4jdHVybkludG9CdXR0b246bm90KFtkaXNhYmxlZF0pOmhvdmVyLFxcbiNjb2xvclRleHRCdXR0b246bm90KFtkaXNhYmxlZF0pOmhvdmVyLFxcbiNtb3JlVGV4dE9wdGlvbkJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6aG92ZXIsXFxuI2Zsb2F0aW5nVG9vbGJhciAuaXRlbT5idXR0b246bm90KFtkaXNhYmxlZF0pOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZTllOTtcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggMnB4ICNlOWU5ZTk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDFweDtcXG4gICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlO1xcbn1cXG5cXG51bCAub3B0aW9uLWhvdmVyOm5vdChbZGlzYWJsZWRdKTpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWU5ZTk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDFweDtcXG4gICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlO1xcbn1cXG5cXG5cXG4ub3B0aW9uW2ZvY3VzZWQ9XFxcInRydWVcXFwiXSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiZGU0ZmY7XFxufVxcblxcblxcblxcblxcblxcbi5vcHRpb24taW1hZ2Uge1xcbiAgICB3aWR0aDogMi44NzVyZW07XFxuICAgIGhlaWdodDogMi44NzVyZW07XFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcXG4gICAgY29sb3I6ICM0ZjRmNGY7XFxuXFxuICAgIC8qIGNvbG9yOiAjODQ4ODhkOyAqL1xcbiAgICAvKiBjb2xvcjogIzI0MjQyNDsgKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4ub3B0aW9uLWltYWdlIGltZyB7XFxuICAgIG1heC13aWR0aDogMi44NzVyZW07XFxuICAgIG1heC1oZWlnaHQ6IDIuODc1cmVtO1xcbn1cXG5cXG4ub3B0aW9uLWltYWdlIHN2ZyB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgcGFkZGluZzogMC42MjVyZW07XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuXFxufVxcblxcbi5vcHRpb24tdGV4dCAqIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcblxcbn1cXG5cXG4ub3B0aW9uLXRleHQgLmJsb2NrLXRpdGxlIHtcXG4gICAgZm9udC1zaXplOiBzbWFsbCAhaW1wb3J0YW50O1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbn1cXG5cXG4ub3B0aW9uLXRleHQgLmJsb2NrLWRlc2NyaXB0aW9uIHtcXG4gICAgZm9udC1zaXplOiBzbWFsbCAhaW1wb3J0YW50O1xcbn1cXG5cXG4vKiogRW5kIEJsb2NrIE9wdGlvbnMgKiovXFxuXFxuXFxuXFxuI2RlbGV0ZUJsb2NrQnV0dG9uOmhvdmVyIHN2ZyxcXG4jZGVsZXRlQmxvY2tCdXR0b246aG92ZXIge1xcbiAgICBjb2xvcjogcmdiKDIzNSwgODcsIDg3KSAhaW1wb3J0YW50O1xcbn1cXG5cXG5cXG5cXG5cXG5cXG5cXG5cXG4uam9oYW5uZXMtZWRpdG9yICo6OnNlbGVjdGlvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjExLCAyMjcsIDI1MywgMC41KSAhaW1wb3J0YW50O1xcbn1cXG5cXG4uam9oYW5uZXMtZWRpdG9yIG1hcmssXFxuLmpvaGFubmVzLWVkaXRvciAqIHtcXG4gICAgbGluZS1oZWlnaHQ6IDEuNSAhaW1wb3J0YW50O1xcbn1cXG5cXG4ub3B0aW9uIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4udGV4dC1vcHRpb24ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcblxcblxcblxcbjpyb290IHtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICAvKiBUYW1hbmhvIHBhZHLDo28gKi9cXG59XFxuXFxuLyogUGFyYSB0ZWxhcyBjb20gZGVuc2lkYWRlIG3DqWRpYSAqL1xcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksXFxub25seSBzY3JlZW4gYW5kIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLFxcbm9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSksXFxub25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpIHtcXG4gICAgOnJvb3Qge1xcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICAgICAgLyogQXVtZW50YSBvIHRhbWFuaG8gZGEgZm9udGUgcGFyYSB0ZWxhcyBkZSBhbHRhIGRlbnNpZGFkZSAqL1xcbiAgICB9XFxufVxcblxcbi8qIFBhcmEgdGVsYXMgY29tIGFsdMOtc3NpbWEgZGVuc2lkYWRlICovXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSxcXG5vbmx5IHNjcmVlbiBhbmQgKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzogMyksXFxub25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMjg4ZHBpKSxcXG5vbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCkge1xcbiAgICA6cm9vdCB7XFxuICAgICAgICBmb250LXNpemU6IDIwcHg7XFxuICAgICAgICAvKiBBaW5kYSBtYWlvciBwYXJhIHRlbGFzIGRlIGRlbnNpZGFkZSBtdWl0byBhbHRhICovXFxuICAgIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qb2hhbm5lcy1lZGl0b3InKTtcblxuICAgIGxldCBkcmFnZ2VkSXRlbSA9IG51bGw7XG5cbiAgICBsZXQgZHJvcExpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkcm9wTGluZS5jbGFzc0xpc3QuYWRkKCdkcm9wLWxpbmUnKTtcbiAgICBkcm9wTGluZS5zdHlsZS5oZWlnaHQgPSAnMnB4JztcbiAgICBkcm9wTGluZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gICAgY29udGVudC5hZGRFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCAoZSkgPT4ge1xuICAgICAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkcmFnLWhhbmRsZXInKSkge1xuICAgICAgICAgICAgZHJhZ2dlZEl0ZW0gPSBlLnRhcmdldC5jbG9zZXN0KCcuYmxvY2snKTtcbiAgICAgICAgICAgIGRyYWdnZWRJdGVtLnNldEF0dHJpYnV0ZSgnZHJhZ2dhYmxlJywgJ3RydWUnKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGRyYWdnZWRJdGVtLnN0eWxlLm9wYWNpdHkgPSAnMC41JztcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBjb250ZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdlbmQnLCAoKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGRyYWdnZWRJdGVtKSB7XG4gICAgICAgICAgICAgICAgZHJhZ2dlZEl0ZW0uc3R5bGUub3BhY2l0eSA9ICcnO1xuICAgICAgICAgICAgICAgIGRyYWdnZWRJdGVtLnJlbW92ZUF0dHJpYnV0ZSgnZHJhZ2dhYmxlJyk7XG4gICAgICAgICAgICAgICAgZHJhZ2dlZEl0ZW0gPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZHJvcExpbmUucmVtb3ZlKCk7XG4gICAgICAgIH0sIDApO1xuICAgIH0pO1xuXG4gICAgY29udGVudC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGV0IHRhcmdldCA9IGUudGFyZ2V0LmNsb3Nlc3QoJy5ibG9jaycpO1xuXG4gICAgICAgIGlmICh0YXJnZXQgJiYgdGFyZ2V0ICE9PSBkcmFnZ2VkSXRlbSkge1xuICAgICAgICAgICAgbGV0IGJvdW5kaW5nID0gdGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgbGV0IG9mZnNldCA9IGJvdW5kaW5nLnkgKyBib3VuZGluZy5oZWlnaHQgLyAyO1xuXG4gICAgICAgICAgICBpZiAoZS5jbGllbnRZID4gb2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmcgIT09IGRyb3BMaW5lKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyZW5kJywgZHJvcExpbmUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nICE9PSBkcm9wTGluZSkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdiZWZvcmViZWdpbicsIGRyb3BMaW5lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBkcm9wTGluZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICB9KTtcblxuICAgIGNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYgKGRyb3BMaW5lLnBhcmVudEVsZW1lbnQpIHtcbiAgICAgICAgICAgIGRyb3BMaW5lLnBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKGRyYWdnZWRJdGVtLCBkcm9wTGluZSk7XG4gICAgICAgICAgICBkcm9wTGluZS5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7IiwiLy8gUGlsaGFzIHBhcmEgdW5kbyBlIHJlZG9cclxubGV0IHVuZG9TdGFjayA9IFtdO1xyXG5sZXQgcmVkb1N0YWNrID0gW107XHJcblxyXG5cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBFbGVtZW50byBkbyBlZGl0b3JcclxuICAgIGNvbnN0IGVkaXRvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XHJcblxyXG4gICAgaWYgKGVkaXRvcikge1xyXG4gICAgICAgIC8vIEV2ZW50byBwYXJhIGRldGVjdGFyIG11ZGFuw6dhcyBlIHNhbHZhciBvIGVzdGFkbyBhbnRlcyBkZSBtdWRhclxyXG4gICAgICAgIGVkaXRvci5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICAgICAgc2F2ZVN0YXRlKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIEZ1bsOnw6NvIHBhcmEgc2FsdmFyIG8gZXN0YWRvIGF0dWFsIGRvIGVkaXRvclxyXG4gICAgICAgIGZ1bmN0aW9uIHNhdmVTdGF0ZSgpIHtcclxuICAgICAgICAgICAgLy8gQ2xvbmUgZG8gY29udGXDumRvIGF0dWFsIGRvIGVkaXRvclxyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50U3RhdGUgPSBlZGl0b3IuaW5uZXJIVE1MO1xyXG4gICAgICAgICAgICB1bmRvU3RhY2sucHVzaChjdXJyZW50U3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAvLyBGdW7Dp8OjbyBwYXJhIGRlc2ZhemVyXHJcbiAgICAgICAgZnVuY3Rpb24gdW5kbygpIHtcclxuICAgICAgICAgICAgaWYgKHVuZG9TdGFjay5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzdGF0ZVRvUmVzdG9yZSA9IHVuZG9TdGFjay5wb3AoKTtcclxuICAgICAgICAgICAgICAgIHJlZG9TdGFjay5wdXNoKGVkaXRvci5pbm5lckhUTUwpO1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmlubmVySFRNTCA9IHN0YXRlVG9SZXN0b3JlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBGdW7Dp8OjbyBwYXJhIHJlZmF6ZXJcclxuICAgICAgICBmdW5jdGlvbiByZWRvKCkge1xyXG4gICAgICAgICAgICBpZiAocmVkb1N0YWNrLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRlVG9BcHBseSA9IHJlZG9TdGFjay5wb3AoKTtcclxuICAgICAgICAgICAgICAgIHVuZG9TdGFjay5wdXNoKGVkaXRvci5pbm5lckhUTUwpO1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmlubmVySFRNTCA9IHN0YXRlVG9BcHBseTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQWRpY2lvbmFuZG8gZXZlbnRvcyBkZSB0ZWNsYWRvIHBhcmEgdW5kbyBlIHJlZG9cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleSA9PT0gJ3onKSB7XHJcbiAgICAgICAgICAgICAgICB1bmRvKCk7XHJcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LmN0cmxLZXkgJiYgZXZlbnQua2V5ID09PSAneScpIHtcclxuICAgICAgICAgICAgICAgIHJlZG8oKTtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gSW5pY2lhbGl6YXIgbyBlc3RhZG8gZG8gZWRpdG9yXHJcbiAgICAgICAgc2F2ZVN0YXRlKCk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJjbGFzcyBTZXJ2aWNlQWxyZWFkeVJlZ2lzdGVyZWRFeGNlcHRpb24gZXh0ZW5kcyBFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihzZXJ2aWNlS2V5OiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihgU2VydmljZSBhbHJlYWR5IHJlZ2lzdGVyZWQ6ICR7c2VydmljZUtleX1gKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIlNlcnZpY2VBbHJlYWR5UmVnaXN0ZXJlZEV4Y2VwdGlvblwiO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZXJ2aWNlQWxyZWFkeVJlZ2lzdGVyZWRFeGNlcHRpb247IiwiY2xhc3MgU2VydmljZU5vdEZvdW5kRXhjZXB0aW9uIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3Ioc2VydmljZUtleTogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoYFNlcnZpY2Ugbm90IGZvdW5kOiAke3NlcnZpY2VLZXl9YCk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJTZXJ2aWNlTm90Rm91bmRFeGNlcHRpb25cIjtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2VydmljZU5vdEZvdW5kRXhjZXB0aW9uOyIsImltcG9ydCBTZXJ2aWNlQWxyZWFkeVJlZ2lzdGVyZWRFeGNlcHRpb24gZnJvbSBcIi4uL2Vycm9ycy9TZXJ2aWNlQWxyZWFkeVJlZ2lzdGVyZWRFeGNlcHRpb25cIjtcclxuaW1wb3J0IFNlcnZpY2VOb3RGb3VuZEV4Y2VwdGlvbiBmcm9tIFwiLi4vZXJyb3JzL1NlcnZpY2VOb3RGb3VuZEV4Y2VwdGlvblwiO1xyXG5cclxuY2xhc3MgU2VydmljZVByb3ZpZGVyIHtcclxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBTZXJ2aWNlUHJvdmlkZXI7XHJcbiAgICBwcml2YXRlIHNlcnZpY2VzOiBNYXA8c3RyaW5nLCBhbnk+ID0gbmV3IE1hcCgpO1xyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogU2VydmljZVByb3ZpZGVyIHtcclxuICAgICAgICBpZiAoIVNlcnZpY2VQcm92aWRlci5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBTZXJ2aWNlUHJvdmlkZXIuaW5zdGFuY2UgPSBuZXcgU2VydmljZVByb3ZpZGVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBTZXJ2aWNlUHJvdmlkZXIuaW5zdGFuY2U7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5zdGFuY2VPZjxUPihrZXk6IHN0cmluZyk6IFQge1xyXG4gICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLnNlcnZpY2VzLmdldChrZXkpO1xyXG4gICAgICAgIGlmICghc2VydmljZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VydmljZU5vdEZvdW5kRXhjZXB0aW9uKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlIGFzIFQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmVnaXN0ZXJTZXJ2aWNlPFQ+KGtleTogc3RyaW5nLCBpbnN0YW5jZTogVCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnNlcnZpY2VzLmhhcyhrZXkpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBTZXJ2aWNlQWxyZWFkeVJlZ2lzdGVyZWRFeGNlcHRpb24oa2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zZXJ2aWNlcy5zZXQoa2V5LCBpbnN0YW5jZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVnaXN0ZXJTZXJ2aWNlcyhzZXJ2aWNlczogTWFwPHN0cmluZywgYW55Pik6IHZvaWQge1xyXG4gICAgICAgIHNlcnZpY2VzLmZvckVhY2goKGluc3RhbmNlLCBrZXkpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZWdpc3RlclNlcnZpY2Uoa2V5LCBpbnN0YW5jZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzZXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXJ2aWNlcy5jbGVhcigpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZXJ2aWNlUHJvdmlkZXI7IiwiaW1wb3J0IElFbGVtZW50RmFjdG9yeVNlcnZpY2UgZnJvbSBcIi4vSUVsZW1lbnRGYWN0b3J5U2VydmljZVwiO1xuXG5pbnRlcmZhY2UgRWxlbWVudENyZWF0b3Ige1xuICAgIChjb250ZW50OiBzdHJpbmcgfCBudWxsKTogSFRNTEVsZW1lbnQ7XG59XG5cbmNsYXNzIEVsZW1lbnRGYWN0b3J5U2VydmljZSBpbXBsZW1lbnRzIElFbGVtZW50RmFjdG9yeVNlcnZpY2Uge1xuXG4gICAgcHJpdmF0ZSBjcmVhdG9yczogeyBbdHlwZTogc3RyaW5nXTogRWxlbWVudENyZWF0b3IgfTtcblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogRWxlbWVudEZhY3RvcnlTZXJ2aWNlO1xuXG4gICAgc3RhdGljIEVMRU1FTlRfVFlQRVMgPSB7XG4gICAgICAgIEJMT0NLX1BBUkFHUkFQSDogXCJibG9jay1wXCIsXG4gICAgICAgIFBBUkFHUkFQSDogXCJwXCIsXG4gICAgICAgIENIRUNLQk9YX0lURU06IFwiY2hlY2tib3hJdGVtXCIsXG4gICAgICAgIExJU1RfSVRFTTogXCJsaXN0SXRlbVwiLFxuICAgICAgICBCTE9DS19IRUFERVJfMTogXCJoMVwiLFxuICAgICAgICBIRUFERVJfMjogXCJoMlwiLFxuICAgICAgICBIRUFERVJfMzogXCJoM1wiLFxuICAgICAgICBIRUFERVJfNDogXCJoNFwiLFxuICAgICAgICBIRUFERVJfNTogXCJoNVwiLFxuICAgICAgICBIRUFERVJfNjogXCJoNlwiLFxuICAgICAgICBEUkFHX0hBTkRMRV9CVVRUT046IFwiZHJhZy1oYW5kbGUtYnV0dG9uXCJcbiAgICB9XG5cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuXG4gICAgICAgIGlmIChFbGVtZW50RmFjdG9yeVNlcnZpY2UuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVc2UgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmdldEluc3RhbmNlKCkgdG8gZ2V0IGluc3RhbmNlLlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY3JlYXRvcnMgPSB7fTtcblxuICAgICAgICB0aGlzLnJlZ2lzdGVyKEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkJMT0NLX1BBUkFHUkFQSCwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmJsb2NrUGFyYWdyYXBoQ3JlYXRvcigpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5QQVJBR1JBUEgsIEVsZW1lbnRGYWN0b3J5U2VydmljZS5wYXJhZ3JhcGhDcmVhdG9yKCkpO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyKEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkNIRUNLQk9YX0lURU0sIEVsZW1lbnRGYWN0b3J5U2VydmljZS5jaGVja2JveEl0ZW1DcmVhdG9yKCkpO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyKEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkxJU1RfSVRFTSwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmxpc3RJdGVtQ3JlYXRvcigpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5CTE9DS19IRUFERVJfMSwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmdDcmVhdG9yKDEpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5IRUFERVJfMiwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmdDcmVhdG9yKDIpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5IRUFERVJfMywgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmdDcmVhdG9yKDMpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5IRUFERVJfNCwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmdDcmVhdG9yKDQpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5IRUFERVJfNSwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmdDcmVhdG9yKDUpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5IRUFERVJfNiwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmdDcmVhdG9yKDYpKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5EUkFHX0hBTkRMRV9CVVRUT04sIEVsZW1lbnRGYWN0b3J5U2VydmljZS5kcmFnSGFuZGxlQnV0dG9uQ3JlYXRvcigpKTtcblxuXG4gICAgICAgIEVsZW1lbnRGYWN0b3J5U2VydmljZS5faW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBFbGVtZW50RmFjdG9yeVNlcnZpY2Uge1xuXG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IEVsZW1lbnRGYWN0b3J5U2VydmljZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVnaXN0ZXIodHlwZTogc3RyaW5nLCBjcmVhdG9yOiBFbGVtZW50Q3JlYXRvcik6IHZvaWQge1xuICAgICAgICB0aGlzLmNyZWF0b3JzW3R5cGVdID0gY3JlYXRvcjtcbiAgICB9XG5cbiAgICBjcmVhdGUodHlwZTogc3RyaW5nLCBjb250ZW50Pzogc3RyaW5nKTogSFRNTEVsZW1lbnQge1xuICAgICAgICBjb25zdCBjcmVhdG9yID0gdGhpcy5jcmVhdG9yc1t0eXBlXTtcblxuICAgICAgICBpZiAoIWNyZWF0b3IpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE5vIGNyZWF0b3IgcmVnaXN0ZXJlZCBmb3IgdHlwZTogJHt0eXBlfWApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0b3IoY29udGVudCB8fCBcIlwiKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBibG9ja1BhcmFncmFwaENyZWF0b3IoKTogRWxlbWVudENyZWF0b3Ige1xuICAgICAgICByZXR1cm4gY29udGVudCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmJsb2NrUGFyYWdyYXBoKGNvbnRlbnQpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIHBhcmFncmFwaENyZWF0b3IoKTogRWxlbWVudENyZWF0b3Ige1xuICAgICAgICByZXR1cm4gY29udGVudCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gRWxlbWVudEZhY3RvcnlTZXJ2aWNlLnBhcmFncmFwaChjb250ZW50KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBoZWFkaW5nQ3JlYXRvcihsZXZlbDogbnVtYmVyKTogRWxlbWVudENyZWF0b3Ige1xuICAgICAgICByZXR1cm4gY29udGVudCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmhlYWRpbmcobGV2ZWwsIGNvbnRlbnQpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNoZWNrYm94SXRlbUNyZWF0b3IoKTogRWxlbWVudENyZWF0b3Ige1xuICAgICAgICByZXR1cm4gY29udGVudCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmNoZWNrQm94SXRlbShjb250ZW50KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBsaXN0SXRlbUNyZWF0b3IoKTogRWxlbWVudENyZWF0b3Ige1xuXG4gICAgICAgIHJldHVybiBjb250ZW50ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBFbGVtZW50RmFjdG9yeVNlcnZpY2UuY2hlY2tib3hJdGVtKGNvbnRlbnQpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGRyYWdIYW5kbGVCdXR0b25DcmVhdG9yKCk6IEVsZW1lbnRDcmVhdG9yIHtcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIEVsZW1lbnRGYWN0b3J5U2VydmljZS5kcmFnSGFuZGxlQnV0dG9uKCk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgcGFyYWdyYXBoKGNvbnRlbnQ6IHN0cmluZyB8IG51bGwgPSBudWxsKTogSFRNTEVsZW1lbnQge1xuICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuXG4gICAgICAgIHAuaW5uZXJUZXh0ID0gY29udGVudCB8fCBcIlwiO1xuICAgICAgICBwLmNvbnRlbnRFZGl0YWJsZSA9IFwidHJ1ZVwiO1xuICAgICAgICBwLnNldEF0dHJpYnV0ZSgnZGF0YS10eXBlJywgJ3AnKTtcbiAgICAgICAgcC5jbGFzc0xpc3QuYWRkKCdqb2hhbm5lcy1jb250ZW50LWVsZW1lbnQnKTtcbiAgICAgICAgcC5jbGFzc0xpc3QuYWRkKCdzd2l0dGFibGUnKTtcbiAgICAgICAgcC5jbGFzc0xpc3QuYWRkKCdmb2N1c2FibGUnKTtcbiAgICAgICAgcC5jbGFzc0xpc3QuYWRkKCdrZXktdHJpZ2dlcicpO1xuICAgICAgICBwLnNldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicsICdXcml0ZSBzb21ldGhpbmcgb3IgdHlwZSAvIChzbGFzaCkgdG8gY2hvb3NlIGEgYmxvY2suLi4nKTtcblxuICAgICAgICByZXR1cm4gcDtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBoZWFkaW5nKGxldmVsOiBudW1iZXIsIGNvbnRlbnQ6IHN0cmluZyB8IG51bGwgPSBudWxsKTogSFRNTEVsZW1lbnQge1xuICAgICAgICBjb25zdCBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgaCR7bGV2ZWx9YCk7XG5cbiAgICAgICAgaC5pbm5lclRleHQgPSBjb250ZW50IHx8IFwiXCI7XG4gICAgICAgIGguY29udGVudEVkaXRhYmxlID0gXCJ0cnVlXCI7XG4gICAgICAgIGguc2V0QXR0cmlidXRlKCdkYXRhLXR5cGUnLCBgaCR7bGV2ZWx9YCk7XG4gICAgICAgIGguY2xhc3NMaXN0LmFkZCgnam9oYW5uZXMtY29udGVudC1lbGVtZW50Jyk7XG4gICAgICAgIGguY2xhc3NMaXN0LmFkZCgnc3dpdHRhYmxlJyk7XG4gICAgICAgIGguY2xhc3NMaXN0LmFkZCgnZm9jdXNhYmxlJyk7XG4gICAgICAgIGguY2xhc3NMaXN0LmFkZCgnZm9jdXMnKTtcbiAgICAgICAgaC5jbGFzc0xpc3QuYWRkKCdrZXktdHJpZ2dlcicpO1xuXG4gICAgICAgIHJldHVybiBoO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNoZWNrQm94SXRlbShjb250ZW50OiBzdHJpbmcgfCBudWxsID0gbnVsbCk6IEhUTUxFbGVtZW50IHtcbiAgICAgICAgbGV0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgbGkuY2xhc3NMaXN0LmFkZCgnZGVsZXRhYmxlJyk7XG4gICAgICAgIGxpLmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbScpO1xuXG4gICAgICAgIC8vIGluaXRpYWxJdGVtLmNsYXNzTGlzdC5hZGQoJ2tleS10cmlnZ2VyJyk7XG5cbiAgICAgICAgbGV0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgY2hlY2tib3guc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NoZWNrYm94Jyk7XG5cbiAgICAgICAgbGV0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIHNwYW4udGV4dENvbnRlbnQgPSBjb250ZW50IHx8IFwiXCI7XG4gICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKCdkYXRhLXBsYWNlaG9sZGVyJywgJ1RvLWRvJyk7XG4gICAgICAgIC8vIHNwYW4uY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoXCJjb250ZW50RWRpdGFibGVcIiwgXCJ0cnVlXCIpO1xuXG4gICAgICAgIHNwYW4uY2xhc3NMaXN0LmFkZCgnZm9jdXNhYmxlJyk7XG4gICAgICAgIHNwYW4uY2xhc3NMaXN0LmFkZCgnZWRpdGFibGUnKTtcbiAgICAgICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCdmb2N1cycpO1xuXG4gICAgICAgIGxpLmFwcGVuZENoaWxkKGNoZWNrYm94KTtcbiAgICAgICAgbGkuYXBwZW5kQ2hpbGQoc3Bhbik7XG5cbiAgICAgICAgcmV0dXJuIGxpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNoZWNrYm94SXRlbShjb250ZW50OiBzdHJpbmcgfCBudWxsID0gbnVsbCk6IEhUTUxFbGVtZW50IHtcblxuICAgICAgICBsZXQgaW5pdGlhbEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuXG4gICAgICAgIGluaXRpYWxJdGVtLmNsYXNzTGlzdC5hZGQoJ2ZvY3VzYWJsZScpO1xuICAgICAgICBpbml0aWFsSXRlbS5jbGFzc0xpc3QuYWRkKCdkZWxldGFibGUnKTtcbiAgICAgICAgaW5pdGlhbEl0ZW0uY2xhc3NMaXN0LmFkZCgnZWRpdGFibGUnKTtcbiAgICAgICAgaW5pdGlhbEl0ZW0uY2xhc3NMaXN0LmFkZCgnZm9jdXMnKTtcbiAgICAgICAgaW5pdGlhbEl0ZW0uY2xhc3NMaXN0LmFkZCgna2V5LXRyaWdnZXInKTtcbiAgICAgICAgaW5pdGlhbEl0ZW0uY2xhc3NMaXN0LmFkZCgnbGlzdC1pdGVtJyk7XG5cbiAgICAgICAgaW5pdGlhbEl0ZW0uaW5uZXJUZXh0ID0gY29udGVudCB8fCBcIlwiO1xuXG4gICAgICAgIC8vIGluaXRpYWxJdGVtLmNvbnRlbnRFZGl0YWJsZSA9IHRydWU7XG4gICAgICAgIGluaXRpYWxJdGVtLnNldEF0dHJpYnV0ZShcImNvbnRlbnRFZGl0YWJsZVwiLCBcInRydWVcIik7XG4gICAgICAgIGluaXRpYWxJdGVtLnNldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicsICdJdGVtJyk7XG5cbiAgICAgICAgcmV0dXJuIGluaXRpYWxJdGVtO1xuICAgIH1cblxuXG4gICAgc3RhdGljIGJsb2NrUGFyYWdyYXBoKGNvbnRlbnQ6IHN0cmluZyB8IG51bGwgPSBudWxsKSB7XG5cbiAgICAgICAgbGV0IG5ld0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBsZXQgbmV3RWxlbWVudCA9IEVsZW1lbnRGYWN0b3J5U2VydmljZS5wYXJhZ3JhcGgoY29udGVudCk7XG5cbiAgICAgICAgbGV0IG5ld0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBuZXdCdXR0b24uaW5uZXJIVE1MID0gJzxzdmcgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiPjx1c2UgaHJlZj1cIiNpY29uLW1hdGVyaWFsLWRyYWdcIj48L3VzZT48L3N2Zz4nO1xuXG4gICAgICAgIC8vIG5ld0Rpdi5hcHBlbmRDaGlsZChuZXdCdXR0b24pO1xuICAgICAgICBuZXdEaXYuYXBwZW5kQ2hpbGQobmV3RWxlbWVudCk7XG5cbiAgICAgICAgbmV3RGl2LmNsYXNzTGlzdC5hZGQoJ2Jsb2NrJyk7XG4gICAgICAgIG5ld0Rpdi5jbGFzc0xpc3QuYWRkKCdkZWxldGFibGUnKTtcbiAgICAgICAgbmV3QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2RyYWctaGFuZGxlcicpO1xuICAgICAgICBuZXdCdXR0b24uY2xhc3NMaXN0LmFkZCgnYnV0dG9uLXJlc2V0Jyk7XG4gICAgICAgIG5ld0J1dHRvbi5kcmFnZ2FibGUgPSB0cnVlO1xuXG4gICAgICAgIHJldHVybiBuZXdEaXY7XG4gICAgfVxuXG4gICAgc3RhdGljIGRyYWdIYW5kbGVCdXR0b24oKSB7XG5cbiAgICAgICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBidXR0b24uaW5uZXJIVE1MID0gJzxzdmcgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiPjx1c2UgaHJlZj1cIiNpY29uLW1hdGVyaWFsLWRyYWdcIj48L3VzZT48L3N2Zz4nO1xuXG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdkcmFnLWhhbmRsZXInKTtcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbi1yZXNldCcpO1xuICAgICAgICBidXR0b24uZHJhZ2dhYmxlID0gdHJ1ZTtcblxuICAgICAgICByZXR1cm4gYnV0dG9uO1xuICAgIH1cblxuXG5cblxuXG5cblxufVxuXG4vLyBleHBvcnQgY29uc3QgRUxFTUVOVF9UWVBFUyA9IHtcbi8vICAgICBCTE9DS19QQVJBR1JBUEg6IFwiYmxvY2stcFwiLFxuLy8gICAgIFBBUkFHUkFQSDogXCJwXCIsXG4vLyAgICAgQ0hFQ0tCT1hfSVRFTTogXCJjaGVja2JveEl0ZW1cIixcbi8vICAgICBMSVNUX0lURU06IFwibGlzdEl0ZW1cIixcbi8vICAgICBCTE9DS19IRUFERVJfMTogXCJoMVwiLFxuLy8gICAgIEhFQURFUl8yOiBcImgyXCIsXG4vLyAgICAgSEVBREVSXzM6IFwiaDNcIixcbi8vICAgICBIRUFERVJfNDogXCJoNFwiLFxuLy8gICAgIEhFQURFUl81OiBcImg1XCIsXG4vLyAgICAgSEVBREVSXzY6IFwiaDZcIixcbi8vICAgICBEUkFHX0hBTkRMRV9CVVRUT046IFwiZHJhZy1oYW5kbGUtYnV0dG9uXCJcblxuXG4vLyB9IGFzIGNvbnN0O1xuXG5leHBvcnQgZGVmYXVsdCBFbGVtZW50RmFjdG9yeVNlcnZpY2UiLCJpbXBvcnQgSUJsb2NrT3BlcmF0aW9uc1NlcnZpY2UgZnJvbSBcIi4vSUJsb2NrT3BlcmF0aW9uc1NlcnZpY2VcIjtcbmltcG9ydCBJRWxlbWVudEZhY3RvcnlTZXJ2aWNlIGZyb20gXCIuLi9lbGVtZW50LWZhY3RvcnkvSUVsZW1lbnRGYWN0b3J5U2VydmljZVwiO1xuaW1wb3J0IFNlcnZpY2VQcm92aWRlciBmcm9tIFwiLi4vc2VydmljZS1wcm92aWRlci9TZXJ2aWNlUHJvdmlkZXJcIjtcbmltcG9ydCBFbGVtZW50RmFjdG9yeVNlcnZpY2UgZnJvbSBcIi4uL2VsZW1lbnQtZmFjdG9yeS9FbGVtZW50RmFjdG9yeVNlcnZpY2VcIjtcblxuY2xhc3MgQmxvY2tPcGVyYXRpb25zU2VydmljZSBpbXBsZW1lbnRzIElCbG9ja09wZXJhdGlvbnNTZXJ2aWNlIHtcblxuICAgIHByaXZhdGUgcmVhZG9ubHkgZWxlbWVudEZhY3RvcnlTZXJ2aWNlOiBJRWxlbWVudEZhY3RvcnlTZXJ2aWNlO1xuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlO1xuXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcblxuICAgICAgICBpZiAoQmxvY2tPcGVyYXRpb25zU2VydmljZS5pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVXNlIEJsb2NrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0SW5zdGFuY2UoKSB0byBnZXQgaW5zdGFuY2UuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lbGVtZW50RmFjdG9yeVNlcnZpY2UgPSBTZXJ2aWNlUHJvdmlkZXIuZ2V0SW5zdGFuY2UoKS5nZXRJbnN0YW5jZU9mKFwiSUVsZW1lbnRGYWN0b3J5U2VydmljZVwiKTtcbiAgICAgICAgQmxvY2tPcGVyYXRpb25zU2VydmljZS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgZXhlY0NvbW1hbmQoY29tbWFuZDogc3RyaW5nLCB2YWx1ZTogc3RyaW5nIHwgbnVsbCA9IG51bGwpOiBib29sZWFuIHtcblxuICAgICAgICBpZiAoY29tbWFuZCA9PSBCTE9DS19PUEVSQVRJT05TLkNSRUFURV9ERUZBVUxUX0JMT0NLKSB7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZURlZmF1bHRCbG9jayhudWxsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb21tYW5kID09IEJMT0NLX09QRVJBVElPTlMuVFVSTl9JTlRPKSB7XG5cbiAgICAgICAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IEJsb2NrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0RHJhZ2dhYmxlRWxlbWVudEZyb21TZWxlY3Rpb24oKTtcblxuICAgICAgICAgICAgdGhpcy5mb3JtYXRCbG9jayhlbGVtZW50LCB2YWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzZWxlY3Rpb25FdmVudCA9IG5ldyBDdXN0b21FdmVudCgnYmxvY2tGb3JtYXR0ZWQnLCB7XG4gICAgICAgICAgICBidWJibGVzOiB0cnVlLFxuICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KHNlbGVjdGlvbkV2ZW50KTtcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBxdWVyeUNvbW1hbmRTdGF0ZSgpOiBib29sZWFuIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldEluc3RhbmNlKCk6IEJsb2NrT3BlcmF0aW9uc1NlcnZpY2Uge1xuXG4gICAgICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZTtcbiAgICB9XG5cbiAgICBmb3JtYXRCbG9jayhlbGVtZW50OiBIVE1MRWxlbWVudCwgY29udGVudFR5cGU6IHN0cmluZyk6IHZvaWQge1xuXG4gICAgICAgIGxldCBjb250ZW50RWxlbWVudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXR0YWJsZScpIGFzIEhUTUxFbGVtZW50O1xuICAgICAgICBsZXQgY29udGVudCA9IGNvbnRlbnRFbGVtZW50LmlubmVyVGV4dDtcblxuICAgICAgICBsZXQgbmV3Q29udGVudEJsb2NrID0gdGhpcy5lbGVtZW50RmFjdG9yeVNlcnZpY2UuY3JlYXRlKGNvbnRlbnRUeXBlLCBjb250ZW50KTtcblxuICAgICAgICBlbGVtZW50LnJlcGxhY2VDaGlsZChuZXdDb250ZW50QmxvY2ssIGNvbnRlbnRFbGVtZW50KTtcblxuICAgICAgICBjb25zdCBmb2N1c2FibGUgPSBuZXdDb250ZW50QmxvY2suY2xvc2VzdCgnLmZvY3VzYWJsZScpIHx8IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmZvY3VzYWJsZScpO1xuXG4gICAgICAgIC8vIGZvY3VzT25UaGVFbmRPZlRoZVRleHQoZm9jdXNhYmxlKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0RHJhZ2dhYmxlRWxlbWVudEZyb21TZWxlY3Rpb24oKTogSFRNTEVsZW1lbnQge1xuICAgICAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG5cbiAgICAgICAgaWYgKHNlbGVjdGlvbiAmJiBzZWxlY3Rpb24ucmFuZ2VDb3VudCA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IHJhbmdlID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCk7XG4gICAgICAgICAgICBsZXQgZWxlbWVudDogTm9kZSB8IG51bGwgPSByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcblxuICAgICAgICAgICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZSBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd2hpbGUgKGVsZW1lbnQgJiYgIShlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZSBhcyBIVE1MRWxlbWVudCB8IG51bGw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZHJhZ2dhYmxlID0gZWxlbWVudC5jbG9zZXN0KCcuYmxvY2snKSBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHJhZ2dhYmxlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmV0b3JuYXIgbnVsbCBzZSBuZW5odW1hIHNlbGXDp8OjbyB2w6FsaWRhIGZvciBlbmNvbnRyYWRhIG91IG5lbmh1bSBlbGVtZW50byBjb3JyZXNwb25kZW50ZVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICB9XG5cbiAgICAvLyBzdGF0aWMgZ2V0VGFnTmFtZUJ5Q29tbWFuZE5hbWUoY29tbWFuZE5hbWU6IHN0cmluZykge1xuICAgIC8vICAgICBzd2l0Y2ggKGNvbW1hbmROYW1lKSB7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9QYXJhZ3JhcGhcIjpcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gXCJwXCI7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9IMVwiOlxuICAgIC8vICAgICAgICAgICAgIHJldHVybiBcImgxXCI7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9IMlwiOlxuICAgIC8vICAgICAgICAgICAgIHJldHVybiBcImgyXCI7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9IM1wiOlxuICAgIC8vICAgICAgICAgICAgIHJldHVybiBcImgzXCI7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9INFwiOlxuICAgIC8vICAgICAgICAgICAgIHJldHVybiBcImg0XCI7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9INVwiOlxuICAgIC8vICAgICAgICAgICAgIHJldHVybiBcImg1XCI7XG4gICAgLy8gICAgICAgICBjYXNlIFwidHVybkludG9INlwiOlxuICAgIC8vICAgICAgICAgICAgIHJldHVybiBcImg2XCI7XG5cbiAgICAvLyAgICAgICAgIGRlZmF1bHQ6XG4gICAgLy8gICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJFcnJvclwiKTtcbiAgICAvLyAgICAgfVxuICAgIC8vIH1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgLy8gYXBwbHlTZWxlY3RlZEJsb2NrVHlwZShkcmFnZ2FibGVCbG9jazogSFRNTEVsZW1lbnQsIG5ld0Jsb2NrVHlwZTogc3RyaW5nKSB7XG5cbiAgICAvLyAgICAgLy8gY29uc3QgZHJhZ2dhYmxlQmxvY2sgPSByZWFsRm9jdXNlZEVsZW1lbnQuY2xvc2VzdCgnLmJsb2NrJyk7XG4gICAgLy8gICAgIC8vIGNvbnN0IG5ld0Jsb2NrVHlwZSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCcub3B0aW9uJykgP1xuICAgIC8vICAgICAvLyAgICAgZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5vcHRpb24nKS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpIDpcbiAgICAvLyAgICAgLy8gICAgIGN1cnJlbnRGYWtlRm9jdXNlZE9wdGlvbi5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpO1xuXG4gICAgLy8gICAgIGNvbnN0IGxhc3RTbGFzaEluZGV4ID0gcmVhbEZvY3VzZWRFbGVtZW50LmlubmVyVGV4dC5sYXN0SW5kZXhPZignLycpO1xuICAgIC8vICAgICByZWFsRm9jdXNlZEVsZW1lbnQuaW5uZXJUZXh0ID0gbGFzdFNsYXNoSW5kZXggIT09IC0xID8gcmVhbEZvY3VzZWRFbGVtZW50LmlubmVyVGV4dC5zbGljZSgwLCBsYXN0U2xhc2hJbmRleCkgOiByZWFsRm9jdXNlZEVsZW1lbnQuaW5uZXJUZXh0O1xuXG5cbiAgICAvLyAgICAgdHJhbnNmb3JtQmxvY2soZHJhZ2dhYmxlQmxvY2ssIG5ld0Jsb2NrVHlwZSk7XG5cbiAgICAvLyAgICAgaGlkZUFuZENsZWFyQmxvY2tPcHRpb25zKCk7XG4gICAgLy8gICAgIGhpZGVBbGxEZXBlbmRlbnRCb3goKTtcbiAgICAvLyAgICAgaGlkZWZsb2F0aW5nVG9vbGJhcigpO1xuICAgIC8vIH1cblxuXG5cbiAgICBjcmVhdGVOZXdFbGVtZW50KGV2ZW50OiBFdmVudCkge1xuXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBldmVudC50YXJnZXQgYXMgRWxlbWVudDtcblxuICAgICAgICBjb25zdCBjb250ZW50RWxlbWVudCA9IGVsZW1lbnQuY2xvc2VzdCgnLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCcpIGFzIEhUTUxFbGVtZW50O1xuXG4gICAgICAgIGlmIChjb250ZW50RWxlbWVudCAmJiBjb250ZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2xpc3QnKSkge1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVMaXN0SXRlbShjb250ZW50RWxlbWVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZURlZmF1bHRCbG9jayhjb250ZW50RWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjcmVhdGVMaXN0SXRlbShlbGVtZW50OiBIVE1MRWxlbWVudCk6IHZvaWQge1xuXG4gICAgICAgIGxldCBuZXdDb250ZW50RWxlbWVudCA9IG51bGw7XG5cbiAgICAgICAgbGV0IGFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgICAgICBsZXQgY29udGVudEVsZW1lbnQgPSBlbGVtZW50LmNsb3Nlc3QoJy5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQnKSBhcyBIVE1MRWxlbWVudDtcblxuICAgICAgICBpZiAoY29udGVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjaGVja2JveC1saXN0JykpIHtcbiAgICAgICAgICAgIG5ld0NvbnRlbnRFbGVtZW50ID0gdGhpcy5lbGVtZW50RmFjdG9yeVNlcnZpY2UuY3JlYXRlKFwiY2hlY2tib3hJdGVtXCIsIFwiXCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGNvbnRlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnbGlzdCcpKSB7XG4gICAgICAgICAgICBuZXdDb250ZW50RWxlbWVudCA9IHRoaXMuZWxlbWVudEZhY3RvcnlTZXJ2aWNlLmNyZWF0ZShcImxpc3RJdGVtXCIsIFwiXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gbmV3Q29udGVudEVsZW1lbnQgPSBjcmVhdGVOZXdEcmFnZ2FibGVQYXJhZ3JhcGhFbGVtZW50KCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBsZXQgcGFyZW50QmxvY2sgPSBudWxsO1xuXG4gICAgICAgIC8vIGlmIChjb250ZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2xpc3QnKSkge1xuXG4gICAgICAgIC8vICAgICBwYXJlbnRCbG9jayA9IGNvbnRlbnRFbGVtZW50O1xuXG4gICAgICAgIC8vICAgICBjb25zdCB0ZXh0Q29udGVudCA9IGFjdGl2ZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpO1xuXG4gICAgICAgIC8vICAgICBpZiAodGV4dENvbnRlbnQgPT09ICcnKSB7XG5cbiAgICAgICAgLy8gICAgICAgICBwYXJlbnRCbG9jayA9IGVsZW1lbnQuY2xvc2VzdCgnLmJsb2NrJyk7XG5cbiAgICAgICAgLy8gICAgICAgICBlbGVtZW50LmNsb3Nlc3QoJy5kZWxldGFibGUnKS5yZW1vdmUoKTtcblxuICAgICAgICAvLyAgICAgICAgIG5ld0NvbnRlbnRFbGVtZW50ID0gY3JlYXRlTmV3RHJhZ2dhYmxlUGFyYWdyYXBoRWxlbWVudCgpO1xuICAgICAgICAvLyAgICAgICAgIHBhcmVudEJsb2NrLmluc2VydEFkamFjZW50RWxlbWVudCgnYWZ0ZXJlbmQnLCBuZXdDb250ZW50RWxlbWVudCk7XG5cbiAgICAgICAgLy8gICAgIH0gZWxzZSB7XG4gICAgICAgIC8vICAgICAgICAgY29uc3QgYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuY2xvc2VzdCgnLmxpc3QtaXRlbScpO1xuICAgICAgICAvLyAgICAgICAgIGFjdGl2ZUVsZW1lbnQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmVuZCcsIG5ld0NvbnRlbnRFbGVtZW50KTtcbiAgICAgICAgLy8gICAgIH1cblxuICAgICAgICAvLyB9IGVsc2Uge1xuICAgICAgICAvLyAgICAgcGFyZW50QmxvY2sgPSBlbGVtZW50LmNsb3Nlc3QoJy5ibG9jaycpO1xuXG4gICAgICAgIC8vICAgICBpZiAocGFyZW50QmxvY2spIHtcbiAgICAgICAgLy8gICAgICAgICBpZiAocGFyZW50QmxvY2submV4dFNpYmxpbmcpIHtcbiAgICAgICAgLy8gICAgICAgICAgICAgcGFyZW50QmxvY2sucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobmV3Q29udGVudEVsZW1lbnQsIHBhcmVudEJsb2NrLm5leHRTaWJsaW5nKTtcbiAgICAgICAgLy8gICAgICAgICB9IGVsc2Uge1xuICAgICAgICAvLyAgICAgICAgICAgICBwYXJlbnRCbG9jay5wYXJlbnROb2RlLmFwcGVuZENoaWxkKG5ld0NvbnRlbnRFbGVtZW50KTtcbiAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH1cblxuICAgICAgICAvLyBmb2N1c09uVGhlRW5kT2ZUaGVUZXh0KG5ld0NvbnRlbnRFbGVtZW50KTtcbiAgICB9XG5cblxuICAgIGNyZWF0ZURlZmF1bHRCbG9jayhldmVudFBhcmFncmFwaDogSFRNTEVsZW1lbnQgfCBudWxsKTogdm9pZCB7XG5cbiAgICAgICAgY29uc3QgbmV3QmxvY2sgPSB0aGlzLmVsZW1lbnRGYWN0b3J5U2VydmljZS5jcmVhdGUoRWxlbWVudEZhY3RvcnlTZXJ2aWNlLkVMRU1FTlRfVFlQRVMuQkxPQ0tfUEFSQUdSQVBILCBcIlwiKTtcblxuICAgICAgICBpZiAoZXZlbnRQYXJhZ3JhcGggJiYgZXZlbnRQYXJhZ3JhcGguY2xvc2VzdCgnLmJsb2NrJykpIHtcbiAgICAgICAgICAgIGNvbnN0IHNpYmxpbmcgPSBldmVudFBhcmFncmFwaC5jbG9zZXN0KCcuYmxvY2snKSE7XG4gICAgICAgICAgICBzaWJsaW5nLmluc2VydEFkamFjZW50RWxlbWVudCgnYWZ0ZXJlbmQnLCBuZXdCbG9jayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2pvaGFubmVzRWRpdG9yIC5jb250ZW50XCIpIS5hcHBlbmRDaGlsZChuZXdCbG9jayk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBmb2N1c2FibGUgPSBuZXdCbG9jay5xdWVyeVNlbGVjdG9yKCcuam9oYW5uZXMtY29udGVudC1lbGVtZW50Jyk7XG4gICAgICAgIC8vIGZvY3VzYWJsZS5mb2N1cygpO1xuXG4gICAgICAgIC8vIGZvY3VzT25UaGVFbmRPZlRoZVRleHQoZm9jdXNhYmxlKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGNvbnN0IEJMT0NLX09QRVJBVElPTlMgPSB7XG4gICAgVFVSTl9JTlRPOiBcInR1cm5JbnRvXCIsXG4gICAgQ1JFQVRFX0RFRkFVTFRfQkxPQ0s6IFwiQ3JlYXRlRGVmYXVsdEJsb2NrXCJcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IEJsb2NrT3BlcmF0aW9uc1NlcnZpY2U7IiwiYWJzdHJhY3QgY2xhc3MgQmFzZVVJQ29tcG9uZW50PFQgZXh0ZW5kcyBIVE1MRWxlbWVudCA9IEhUTUxFbGVtZW50PiB7XHJcblxyXG4gICAgcHJpdmF0ZSBfY2FuSGlkZTogYm9vbGVhbjtcclxuXHJcbiAgICBwcm9wczogUmVjb3JkPHN0cmluZywgYW55PjtcclxuICAgIGh0bWxFbGVtZW50OiBUO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+KSB7XHJcblxyXG4gICAgICAgIHRoaXMucHJvcHMgPSBwcm9wcztcclxuXHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudCA9IHRoaXMuaW5pdCgpIGFzIFQ7XHJcbiAgICAgICAgdGhpcy5fY2FuSGlkZSA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgYWJzdHJhY3QgaW5pdCgpOiBIVE1MRWxlbWVudDtcclxuXHJcbiAgICBhYnN0cmFjdCBkaXNwbGF5OiBzdHJpbmc7XHJcblxyXG4gICAgZG9jdW1lbnRBcHBlbmRUbyhwYXJlbnQ6IEhUTUxFbGVtZW50KTogdm9pZCB7XHJcbiAgICAgICAgcGFyZW50LmFwcGVuZENoaWxkKHRoaXMuaHRtbEVsZW1lbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpc1Zpc2libGUoKSB7XHJcbiAgICAgICAgbGV0IGVsZW1lbnQ6IEhUTUxFbGVtZW50ID0gdGhpcy5odG1sRWxlbWVudDtcclxuXHJcbiAgICAgICAgaWYgKGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnIHx8IGVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9PT0gJ2hpZGRlbicgfHwgIWRvY3VtZW50LmNvbnRhaW5zKGVsZW1lbnQpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHdoaWxlIChlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnIHx8IHN0eWxlLnZpc2liaWxpdHkgPT09ICdoaWRkZW4nKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChlbGVtZW50LnBhcmVudEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvdygpIHtcclxuICAgICAgICB0aGlzLl9jYW5IaWRlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gdGhpcy5kaXNwbGF5O1xyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY2FuSGlkZSA9IHRydWU7XHJcbiAgICAgICAgfSwgMTAwKTtcclxuICAgIH1cclxuXHJcbiAgICBoaWRlKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5fY2FuSGlkZSkge1xyXG5cclxuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiQXR0ZW1wdGVkIHRvIGhpZGUgdGhlIGVsZW1lbnQgYmVmb3JlIDEwMCBtaWxsaXNlY29uZHMgaGF2ZSBwYXNzZWQgc2luY2UgdGhlIGxhc3QgZGlzcGxheS5cIik7XHJcbiAgICAgICAgICAgIC8vIHJldHVybjtcclxuICAgICAgICAgICAgLy8gdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGhpZGUgdGhlIGVsZW1lbnQgYmVmb3JlIDEwMCBtaWxsaXNlY29uZHMgaGF2ZSBwYXNzZWQgc2luY2UgdGhlIGxhc3QgZGlzcGxheS5cIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmh0bWxFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGNhbkhpZGUoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhbkhpZGUgJiYgdGhpcy5pc1Zpc2libGU7XHJcbiAgICB9XHJcblxyXG4gICAgZm9jdXMoKSB7XHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5mb2N1cygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHJlUmVuZGVyKCk6IHZvaWQge1xyXG4gICAgLy8gICAgIGlmICh0aGlzLmlzVmlzaWJsZSkge1xyXG4gICAgLy8gICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgIC8vICAgICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCYXNlVUlDb21wb25lbnQ7IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tICcuLi9jb21tb24vQmFzZVVJQ29tcG9uZW50JztcclxuXHJcbmNsYXNzIFF1aWNrTWVudUVtcHR5IGV4dGVuZHMgQmFzZVVJQ29tcG9uZW50IHtcclxuXHJcbiAgICBkaXNwbGF5OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgICAgIHN1cGVyKHt9KTtcclxuXHJcbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVtcHR5SW5kaWNhdG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG5cclxuICAgICAgICBodG1sRW1wdHlJbmRpY2F0b3IuaW5uZXJUZXh0ID0gJ05vIHJlc3VsdHMnO1xyXG4gICAgICAgIGh0bWxFbXB0eUluZGljYXRvci5jbGFzc0xpc3QuYWRkKCdlbXB0eS1ibG9jay1vcHRpb25zJyk7XHJcbiAgICAgICAgaHRtbEVtcHR5SW5kaWNhdG9yLnN0eWxlLnBhZGRpbmcgPSAnMTBweCc7XHJcbiAgICAgICAgaHRtbEVtcHR5SW5kaWNhdG9yLnN0eWxlLmNvbG9yID0gJ3JnYmEoNTUsIDUzLCA0NywgMC42NSknO1xyXG4gICAgICAgIGh0bWxFbXB0eUluZGljYXRvci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVtcHR5SW5kaWNhdG9yO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBRdWlja01lbnVFbXB0eTsiLCJpbXBvcnQgSk5vZGUgZnJvbSBcIi4vSk5vZGVcIjtcclxuXHJcbmFic3RyYWN0IGNsYXNzIEJhc2VEb3VibHlMaW5rZWRMaXN0PFQ+IHtcclxuXHJcbiAgICBoZWFkOiBKTm9kZTxUPiB8IG51bGwgPSBudWxsO1xyXG4gICAgdGFpbDogSk5vZGU8VD4gfCBudWxsID0gbnVsbDtcclxuXHJcbiAgICBsZW5ndGg6IG51bWJlciA9IDA7XHJcblxyXG4gICAgYWJzdHJhY3QgYXBwZW5kKGVsZW1lbnQ6IFQpOiB2b2lkO1xyXG5cclxuICAgIGdldEZpcnN0KCk6IEpOb2RlPFQ+IHwgbnVsbCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRMYXN0KCk6IEpOb2RlPFQ+IHwgbnVsbCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGFpbDtcclxuICAgIH1cclxuXHJcbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XHJcbiAgICAgICAgbGV0IGN1cnJlbnQgPSB0aGlzLmhlYWQ7XHJcbiAgICAgICAgaWYgKCFjdXJyZW50KSByZXR1cm47XHJcbiAgICAgICAgZG8ge1xyXG4gICAgICAgICAgICB5aWVsZCBjdXJyZW50O1xyXG4gICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5uZXh0Tm9kZTtcclxuICAgICAgICB9IHdoaWxlIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IHRoaXMuaGVhZCk7XHJcbiAgICB9XHJcblxyXG4gICAgZm9yRWFjaChjYWxsYmFjazogKG5vZGU6IFQsIGluZGV4OiBudW1iZXIsIGxpc3Q6IEJhc2VEb3VibHlMaW5rZWRMaXN0PFQ+KSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcclxuICAgICAgICBmb3IgKGxldCBub2RlIG9mIHRoaXMpIHtcclxuICAgICAgICAgICAgY2FsbGJhY2sobm9kZS52YWx1ZSwgaW5kZXgsIHRoaXMpO1xyXG4gICAgICAgICAgICBpbmRleCsrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhbnkocHJlZGljYXRlOiAobm9kZTogVCkgPT4gYm9vbGVhbik6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBjdXJyZW50ID0gdGhpcy5oZWFkO1xyXG4gICAgICAgIHdoaWxlIChjdXJyZW50KSB7XHJcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUoY3VycmVudC52YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHROb2RlO1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudCA9PT0gdGhpcy5oZWFkKSBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGZpbmRGaXJzdChwcmVkaWNhdGU6IChub2RlOiBUKSA9PiBib29sZWFuKTogSk5vZGU8VD4gfCBudWxsIHtcclxuICAgICAgICBpZiAoIXRoaXMuaGVhZCkgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgICAgIGxldCBjdXJyZW50OiBudWxsIHwgSk5vZGU8VD4gPSB0aGlzLmhlYWQ7XHJcbiAgICAgICAgZG8ge1xyXG4gICAgICAgICAgICBpZiAocHJlZGljYXRlKGN1cnJlbnQudmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5uZXh0Tm9kZTtcclxuICAgICAgICB9IHdoaWxlIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IHRoaXMuaGVhZCk7XHJcblxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGZpbmRMYXN0KHByZWRpY2F0ZTogKG5vZGU6IFQpID0+IGJvb2xlYW4pOiBKTm9kZTxUPiB8IG51bGwge1xyXG4gICAgICAgIGlmICghdGhpcy50YWlsKSByZXR1cm4gbnVsbDtcclxuXHJcbiAgICAgICAgbGV0IGN1cnJlbnQ6IG51bGwgfCBKTm9kZTxUPiA9IHRoaXMudGFpbDtcclxuXHJcbiAgICAgICAgZG8ge1xyXG4gICAgICAgICAgICBpZiAocHJlZGljYXRlKGN1cnJlbnQudmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5wcmV2aW91c05vZGU7XHJcbiAgICAgICAgfSB3aGlsZSAoY3VycmVudCAmJiBjdXJyZW50ICE9PSB0aGlzLnRhaWwpO1xyXG5cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBmaW5kKGVsZW1lbnQ6IFQpOiBKTm9kZTxUPiB8IG51bGwge1xyXG5cclxuICAgICAgICBsZXQgY3VycmVudDogSk5vZGU8VD4gfCBudWxsID0gdGhpcy5oZWFkO1xyXG5cclxuICAgICAgICB3aGlsZSAoY3VycmVudCkge1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudC52YWx1ZSA9PSBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubmV4dE5vZGU7XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50ID09PSB0aGlzLmhlYWQpIGJyZWFrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJhc2VEb3VibHlMaW5rZWRMaXN0OyIsImltcG9ydCBCYXNlRG91Ymx5TGlua2VkTGlzdCBmcm9tIFwiLi9CYXNlRG91Ymx5TGlua2VkTGlzdFwiO1xyXG5cclxuY2xhc3MgSk5vZGU8VD4ge1xyXG5cclxuICAgIHBhcmVudExpc3Q6IEJhc2VEb3VibHlMaW5rZWRMaXN0PFQ+O1xyXG5cclxuICAgIHByZXZpb3VzTm9kZTogSk5vZGU8VD4gfCBudWxsO1xyXG4gICAgbmV4dE5vZGU6IEpOb2RlPFQ+IHwgbnVsbDtcclxuICAgIHZhbHVlOiBUO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHZhbHVlOiBULCBwYXJlbnRMaXN0OiBCYXNlRG91Ymx5TGlua2VkTGlzdDxUPikge1xyXG4gICAgICAgIHRoaXMucHJldmlvdXNOb2RlID0gbnVsbDtcclxuICAgICAgICB0aGlzLm5leHROb2RlID0gbnVsbDtcclxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5wYXJlbnRMaXN0ID0gcGFyZW50TGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBzZXROZXh0KG5vZGU6IEpOb2RlPFQ+KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5uZXh0Tm9kZSA9IG5vZGU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0UHJldmlvdXMobm9kZTogSk5vZGU8VD4pOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnByZXZpb3VzTm9kZSA9IG5vZGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TmV4dFNhdGlzZnlpbmcocHJlZGljYXRlOiAobm9kZTogVCkgPT4gYm9vbGVhbik6IEpOb2RlPFQ+IHwgbnVsbCB7XHJcbiAgICAgICAgbGV0IGN1cnJlbnQgPSB0aGlzLm5leHROb2RlO1xyXG4gICAgICAgIGNvbnN0IHN0YXJ0Tm9kZSA9IHRoaXM7XHJcbiAgICAgICAgd2hpbGUgKGN1cnJlbnQpIHtcclxuICAgICAgICAgICAgaWYgKHByZWRpY2F0ZShjdXJyZW50LnZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubmV4dE5vZGU7XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50ID09PSBzdGFydE5vZGUpIHtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFByZXZpb3VzU2F0aXNmeWluZyhwcmVkaWNhdGU6IChub2RlOiBUKSA9PiBib29sZWFuKTogSk5vZGU8VD4gfCBudWxsIHtcclxuICAgICAgICBsZXQgY3VycmVudCA9IHRoaXMucHJldmlvdXNOb2RlO1xyXG4gICAgICAgIGNvbnN0IHN0YXJ0Tm9kZSA9IHRoaXM7XHJcbiAgICAgICAgd2hpbGUgKGN1cnJlbnQgJiYgY3VycmVudCAhPT0gc3RhcnROb2RlKSB7XHJcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUoY3VycmVudC52YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnByZXZpb3VzTm9kZTtcclxuICAgICAgICAgICAgaWYgKGN1cnJlbnQgPT09IHRoaXMpIHtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBKTm9kZTsiLCJpbXBvcnQgQmFzZURvdWJseUxpbmtlZExpc3QgZnJvbSBcIi4vQmFzZURvdWJseUxpbmtlZExpc3RcIjtcclxuaW1wb3J0IEpOb2RlIGZyb20gXCIuL0pOb2RlXCI7XHJcblxyXG5jbGFzcyBDaXJjdWxhckRvdWJseUxpbmtlZExpc3Q8VD4gZXh0ZW5kcyBCYXNlRG91Ymx5TGlua2VkTGlzdDxUPiB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBhcHBlbmQoZWxlbWVudDogVCk6IHZvaWQge1xyXG5cclxuICAgICAgICBjb25zdCBub2RlID0gbmV3IEpOb2RlKGVsZW1lbnQsIHRoaXMpO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuaGVhZCB8fCAhdGhpcy50YWlsKSB7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmhlYWQgPSBub2RlO1xyXG4gICAgICAgICAgICB0aGlzLnRhaWwgPSBub2RlO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5oZWFkLnNldE5leHQodGhpcy50YWlsKTtcclxuICAgICAgICAgICAgdGhpcy5oZWFkLnNldFByZXZpb3VzKHRoaXMudGFpbCk7XHJcblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5vZGUuc2V0UHJldmlvdXModGhpcy50YWlsKTtcclxuICAgICAgICAgICAgbm9kZS5zZXROZXh0KHRoaXMuaGVhZCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnRhaWwuc2V0TmV4dChub2RlKTtcclxuICAgICAgICAgICAgdGhpcy5oZWFkLnNldFByZXZpb3VzKG5vZGUpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy50YWlsID0gbm9kZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMubGVuZ3RoKys7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENpcmN1bGFyRG91Ymx5TGlua2VkTGlzdDsiLCJpbXBvcnQgUXVpY2tNZW51U2VjdGlvbiBmcm9tICcuL1F1aWNrTWVudVNlY3Rpb24nO1xuaW1wb3J0IFF1aWNrTWVudUVtcHR5IGZyb20gJy4vUXVpY2tNZW51RW1wdHknO1xuaW1wb3J0IFF1aWNrTWVudUl0ZW0gZnJvbSAnLi9RdWlja01lbnVJdGVtJztcbmltcG9ydCBCYXNlVUlDb21wb25lbnQgZnJvbSAnLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudCc7XG5pbXBvcnQgQ2lyY3VsYXJEb3VibHlMaW5rZWRMaXN0IGZyb20gJy4uLy4uL2NvbW1vbi9DaXJjdWxhckRvdWJseUxpbmtlZExpc3QnO1xuaW1wb3J0IElCbG9ja09wZXJhdGlvbnNTZXJ2aWNlIGZyb20gJy4uLy4uL3NlcnZpY2VzL2Jsb2NrLW9wZXJhdGlvbnMvSUJsb2NrT3BlcmF0aW9uc1NlcnZpY2UnO1xuaW1wb3J0IEpOb2RlIGZyb20gXCIuLi8uLi9jb21tb24vSk5vZGVcIjtcbmltcG9ydCBTZXJ2aWNlUHJvdmlkZXIgZnJvbSBcIi4uLy4uL3NlcnZpY2VzL3NlcnZpY2UtcHJvdmlkZXIvU2VydmljZVByb3ZpZGVyXCI7XG5cbmNsYXNzIFF1aWNrTWVudSBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XG5cbiAgICBkaXNwbGF5OiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IGJsb2NrT3BlcmF0aW9uc1NlcnZpY2U6IElCbG9ja09wZXJhdGlvbnNTZXJ2aWNlO1xuXG4gICAgcHJpdmF0ZSBjdXJyZW50Rm9jdXNlZE1lbnVJdGVtOiBKTm9kZTxRdWlja01lbnVJdGVtPiB8IG51bGw7XG4gICAgcHJpdmF0ZSBodG1sRm9jdXNlZEVsZW1lbnRCZWZvcmVPcGVuUXVpY2tNZW51OiBIVE1MRWxlbWVudCB8IG51bGw7XG4gICAgcHJpdmF0ZSBtZW51U2VjdGlvbnM6IENpcmN1bGFyRG91Ymx5TGlua2VkTGlzdDxRdWlja01lbnVTZWN0aW9uPjtcbiAgICBwcml2YXRlIHF1aWNrTWVudUVtcHR5OiBRdWlja01lbnVFbXB0eTtcbiAgICBwcml2YXRlIGZpbHRlcklucHV0OiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IFF1aWNrTWVudSB8IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgICAgICBzdXBlcih7fSk7XG5cbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gJ2Jsb2NrJztcblxuICAgICAgICB0aGlzLmJsb2NrT3BlcmF0aW9uc1NlcnZpY2UgPSAgU2VydmljZVByb3ZpZGVyLmdldEluc3RhbmNlKCkuZ2V0SW5zdGFuY2VPZihcIklCbG9ja09wZXJhdGlvbnNTZXJ2aWNlXCIpO1xuICAgICAgICB0aGlzLmN1cnJlbnRGb2N1c2VkTWVudUl0ZW0gPSBudWxsO1xuICAgICAgICB0aGlzLmh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUgPSBudWxsO1xuICAgICAgICB0aGlzLm1lbnVTZWN0aW9ucyA9IG5ldyBDaXJjdWxhckRvdWJseUxpbmtlZExpc3Q8UXVpY2tNZW51U2VjdGlvbj4oKTtcbiAgICAgICAgdGhpcy5xdWlja01lbnVFbXB0eSA9IG5ldyBRdWlja01lbnVFbXB0eSgpO1xuXG4gICAgICAgIGxldCBibG9ja09wdGlvbnMgPSB0aGlzLmh0bWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ibG9jay1vcHRpb25zJykgYXMgSFRNTEVsZW1lbnQ7XG5cbiAgICAgICAgdGhpcy5xdWlja01lbnVFbXB0eS5kb2N1bWVudEFwcGVuZFRvKGJsb2NrT3B0aW9ucyk7XG4gICAgICAgIHRoaXMuYXR0YWNoRXZlbnRzKCk7XG5cbiAgICAgICAgdGhpcy5maWx0ZXJJbnB1dCA9IFwiXCI7XG4gICAgfVxuXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XG5cbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgaHRtbEVsZW1lbnQuaWQgPSAncXVpY2tNZW51JztcblxuICAgICAgICBodG1sRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdibG9jay1vcHRpb25zLXdyYXBwZXInLCAnc29mdC1ib3gtc2hhZG93Jyk7XG4gICAgICAgIGh0bWxFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICAgICAgY29uc3QgYmxvY2tPcHRpb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGJsb2NrT3B0aW9ucy5jbGFzc0xpc3QuYWRkKCdibG9jay1vcHRpb25zJyk7XG4gICAgICAgIGJsb2NrT3B0aW9ucy5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG5cbiAgICAgICAgaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQoYmxvY2tPcHRpb25zKTtcblxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgYXBwZW5kKG1lbnVJdGVtOiBRdWlja01lbnVTZWN0aW9uKTogdm9pZCB7XG4gICAgICAgIHRoaXMubWVudVNlY3Rpb25zLmFwcGVuZChtZW51SXRlbSk7XG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLW9wdGlvbnMnKSEuYXBwZW5kQ2hpbGQobWVudUl0ZW0uaHRtbEVsZW1lbnQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogUXVpY2tNZW51IHtcbiAgICAgICAgaWYgKCFRdWlja01lbnUuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICBRdWlja01lbnUuX2luc3RhbmNlID0gbmV3IFF1aWNrTWVudSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFF1aWNrTWVudS5faW5zdGFuY2U7XG4gICAgfVxuXG4gICAgc3dpdGNoVmlzdWFsRm9jdXMoaXRlbTogSk5vZGU8UXVpY2tNZW51SXRlbT4pOiB2b2lkIHtcblxuICAgICAgICBpZiAodGhpcy5jdXJyZW50Rm9jdXNlZE1lbnVJdGVtID09IGl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRGb2N1c2VkTWVudUl0ZW0pIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEZvY3VzZWRNZW51SXRlbS52YWx1ZS5yZW1vdmVGb2N1cygpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5jdXJyZW50Rm9jdXNlZE1lbnVJdGVtID0gaXRlbTtcbiAgICAgICAgdGhpcy5jdXJyZW50Rm9jdXNlZE1lbnVJdGVtLnZhbHVlLmZvY3VzKCk7XG5cbiAgICAgICAgdGhpcy5odG1sRm9jdXNlZEVsZW1lbnRCZWZvcmVPcGVuUXVpY2tNZW51Py5mb2N1cygpO1xuICAgIH1cblxuICAgIGZvY3VzT25UaGVGaXJzdFZpc2libGVJdGVtKCk6IHZvaWQge1xuXG4gICAgICAgIGNvbnN0IGZpcnN0U2VjdGlvbk5vZGU6IEpOb2RlPFF1aWNrTWVudVNlY3Rpb24+IHwgbnVsbCA9IHRoaXMubWVudVNlY3Rpb25zLmdldEZpcnN0KCk7XG5cbiAgICAgICAgbGV0IGN1cnJlbnRTZWN0aW9uTm9kZTogSk5vZGU8UXVpY2tNZW51U2VjdGlvbj4gfCBudWxsID0gZmlyc3RTZWN0aW9uTm9kZTtcblxuICAgICAgICB3aGlsZSAoY3VycmVudFNlY3Rpb25Ob2RlKSB7XG5cbiAgICAgICAgICAgIGNvbnN0IGl0ZW1Ob2RlOiBKTm9kZTxRdWlja01lbnVJdGVtPiB8IG51bGwgPSBjdXJyZW50U2VjdGlvbk5vZGUudmFsdWUubWVudUl0ZW1zLmZpbmRGaXJzdChpdGVtID0+IGl0ZW0uaXNWaXNpYmxlKTtcblxuICAgICAgICAgICAgaWYgKGl0ZW1Ob2RlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zd2l0Y2hWaXN1YWxGb2N1cyhpdGVtTm9kZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjdXJyZW50U2VjdGlvbk5vZGUgPSBjdXJyZW50U2VjdGlvbk5vZGUubmV4dE5vZGU7XG5cbiAgICAgICAgICAgIGlmIChjdXJyZW50U2VjdGlvbk5vZGUgPT0gZmlyc3RTZWN0aW9uTm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZvY3VzUHJldmlvdXNWaXNpYmxlSXRlbSgpOiB2b2lkIHtcblxuICAgICAgICBsZXQgcHJldmlvdXNWaXNpYmxlSXRlbTogSk5vZGU8UXVpY2tNZW51SXRlbT4gfCBudWxsO1xuXG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRGb2N1c2VkTWVudUl0ZW0pIHtcbiAgICAgICAgICAgIHByZXZpb3VzVmlzaWJsZUl0ZW0gPSB0aGlzLmN1cnJlbnRGb2N1c2VkTWVudUl0ZW0uZ2V0UHJldmlvdXNTYXRpc2Z5aW5nKGl0ZW0gPT4gaXRlbS5pc1Zpc2libGUpO1xuICAgICAgICAgICAgaWYgKCFwcmV2aW91c1Zpc2libGVJdGVtKSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgcHJldmlvdXNWaXNpYmxlU2VjdGlvbk5vZGU6IEpOb2RlPFF1aWNrTWVudVNlY3Rpb24+IHwgbnVsbCA9IHRoaXMubWVudVNlY3Rpb25zLmZpbmQodGhpcy5jdXJyZW50Rm9jdXNlZE1lbnVJdGVtLnZhbHVlLnF1aWNrTWVudVNlY3Rpb25JbnN0YW5jZSkhLmdldFByZXZpb3VzU2F0aXNmeWluZyhzZWN0aW9uID0+IHNlY3Rpb24uaXNWaXNpYmxlKTtcblxuICAgICAgICAgICAgICAgIGlmICghcHJldmlvdXNWaXNpYmxlU2VjdGlvbk5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwcmV2aW91c1Zpc2libGVJdGVtID0gcHJldmlvdXNWaXNpYmxlU2VjdGlvbk5vZGUudmFsdWUubWVudUl0ZW1zLmZpbmRMYXN0KGl0ZW0gPT4gaXRlbS5pc1Zpc2libGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGxhc3RWaXNpYmxlU2VjdGlvbk5vZGU6IEpOb2RlPFF1aWNrTWVudVNlY3Rpb24+IHwgbnVsbCA9IHRoaXMubWVudVNlY3Rpb25zLmZpbmRMYXN0KHNlY3Rpb24gPT4gc2VjdGlvbi5pc1Zpc2libGUpO1xuXG4gICAgICAgICAgICBpZiAoIWxhc3RWaXNpYmxlU2VjdGlvbk5vZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmV2aW91c1Zpc2libGVJdGVtID0gbGFzdFZpc2libGVTZWN0aW9uTm9kZS52YWx1ZS5tZW51SXRlbXMuZmluZExhc3QoaXRlbSA9PiBpdGVtLmlzVmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zd2l0Y2hWaXN1YWxGb2N1cyhwcmV2aW91c1Zpc2libGVJdGVtISk7XG4gICAgfVxuXG4gICAgZm9jdXNOZXh0VmlzaWJsZUl0ZW0oKTogdm9pZCB7XG5cbiAgICAgICAgbGV0IG5leHRWaXNpYmxlSXRlbTogSk5vZGU8UXVpY2tNZW51SXRlbT4gfCBudWxsO1xuXG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRGb2N1c2VkTWVudUl0ZW0pIHtcbiAgICAgICAgICAgIG5leHRWaXNpYmxlSXRlbSA9IHRoaXMuY3VycmVudEZvY3VzZWRNZW51SXRlbS5nZXROZXh0U2F0aXNmeWluZyhpdGVtID0+IGl0ZW0uaXNWaXNpYmxlKTtcbiAgICAgICAgICAgIGlmICghbmV4dFZpc2libGVJdGVtKSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgbmV4dFZpc2libGVTZWN0aW9uTm9kZTogSk5vZGU8UXVpY2tNZW51U2VjdGlvbj4gfCBudWxsID0gdGhpcy5tZW51U2VjdGlvbnMuZmluZCh0aGlzLmN1cnJlbnRGb2N1c2VkTWVudUl0ZW0udmFsdWUucXVpY2tNZW51U2VjdGlvbkluc3RhbmNlKSEuZ2V0TmV4dFNhdGlzZnlpbmcoc2VjdGlvbiA9PiBzZWN0aW9uLmlzVmlzaWJsZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIW5leHRWaXNpYmxlU2VjdGlvbk5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXh0VmlzaWJsZUl0ZW0gPSBuZXh0VmlzaWJsZVNlY3Rpb25Ob2RlLnZhbHVlLm1lbnVJdGVtcy5maW5kRmlyc3QoaXRlbSA9PiBpdGVtLmlzVmlzaWJsZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxldCBmaXJzdFZpc2libGVTZWN0aW9uTm9kZTogbnVsbCB8IEpOb2RlPFF1aWNrTWVudVNlY3Rpb24+ID0gdGhpcy5tZW51U2VjdGlvbnMuZmluZEZpcnN0KHNlY3Rpb24gPT4gc2VjdGlvbi5pc1Zpc2libGUpO1xuICAgICAgICAgICAgaWYgKCFmaXJzdFZpc2libGVTZWN0aW9uTm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHRWaXNpYmxlSXRlbSA9IGZpcnN0VmlzaWJsZVNlY3Rpb25Ob2RlLnZhbHVlLm1lbnVJdGVtcy5maW5kRmlyc3QoaXRlbSA9PiBpdGVtLmlzVmlzaWJsZSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN3aXRjaFZpc3VhbEZvY3VzKG5leHRWaXNpYmxlSXRlbSEpO1xuICAgIH1cblxuICAgIGZpbHRlckl0ZW1zKCk6IHZvaWQge1xuXG4gICAgICAgIHRoaXMubWVudVNlY3Rpb25zLmZvckVhY2goc2VjdGlvbiA9PiB7XG4gICAgICAgICAgICBzZWN0aW9uLmZpbHRlclNlY3Rpb24odGhpcy5maWx0ZXJJbnB1dCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghdGhpcy5tZW51U2VjdGlvbnMuYW55KHNlY3Rpb24gPT4gc2VjdGlvbi5pc1Zpc2libGUpKSB7XG4gICAgICAgICAgICB0aGlzLnF1aWNrTWVudUVtcHR5LnNob3coKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucXVpY2tNZW51RW1wdHkuaGlkZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5mb2N1c09uVGhlRmlyc3RWaXNpYmxlSXRlbSgpO1xuICAgIH1cblxuICAgIHNob3coKSB7XG5cblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcblxuICAgICAgICAgICAgdGhpcy5odG1sRm9jdXNlZEVsZW1lbnRCZWZvcmVPcGVuUXVpY2tNZW51ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudDtcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gY2FwdHVyZSB0aGUgZm9jdXNlZCBlbGVtZW50IGJlZm9yZSBkaXNwbGF5aW5nIHRoZSBRdWlja01lbnUuIEVuc3VyZSBhbiBlbGVtZW50IGlzIGZvY3VzZWQuXCIpO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIGNvbnN0IHJhbmdlID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkhLmdldFJhbmdlQXQoMCk7XG4gICAgICAgICAgICBjb25zdCBjdXJzb3JQb3MgPSByYW5nZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICAgICAgY29uc3QgcmVtU2l6ZSA9IHBhcnNlRmxvYXQoZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmZvbnRTaXplKTtcbiAgICAgICAgICAgIGNvbnN0IG1lbnVXaWR0aCA9IDE5ICogcmVtU2l6ZTtcblxuICAgICAgICAgICAgbGV0IHhQb3NpdGlvbiA9IGN1cnNvclBvcy5yaWdodDtcbiAgICAgICAgICAgIGxldCB5UG9zaXRpb24gPSBjdXJzb3JQb3MuYm90dG9tICsgd2luZG93LnNjcm9sbFk7XG5cbiAgICAgICAgICAgIGNvbnN0IG1hcmdpbiA9IHJlbVNpemUgKiAxLjI1O1xuXG4gICAgICAgICAgICBsZXQgYmxvY2tXaWR0aCA9IHRoaXMuaHRtbEVsZW1lbnQub2Zmc2V0V2lkdGg7XG5cbiAgICAgICAgICAgIGlmICh4UG9zaXRpb24gKyBibG9ja1dpZHRoICsgbWFyZ2luID4gd2luZG93LmlubmVyV2lkdGgpIHtcbiAgICAgICAgICAgICAgICB4UG9zaXRpb24gPSBjdXJzb3JQb3MubGVmdCAtIG1lbnVXaWR0aDtcbiAgICAgICAgICAgICAgICBpZiAoeFBvc2l0aW9uIDwgMCkgeFBvc2l0aW9uID0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS5sZWZ0ID0gYCR7eFBvc2l0aW9ufXB4YDtcbiAgICAgICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuc3R5bGUudG9wID0gYCR7eVBvc2l0aW9ufXB4YDtcblxuICAgICAgICAgICAgc3VwZXIuc2hvdygpO1xuXG5cblxuXG4gICAgICAgICAgICB0aGlzLmZvY3VzT25UaGVGaXJzdFZpc2libGVJdGVtKCk7XG4gICAgICAgICAgICB0aGlzLmh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUuZm9jdXMoKTtcblxuICAgICAgICB9LCAxMCk7XG5cbiAgICB9XG5cbiAgICByZXN0b3JlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmZpbHRlcklucHV0ID0gXCJcIjtcblxuICAgICAgICB0aGlzLm1lbnVTZWN0aW9ucy5mb3JFYWNoKHNlY3Rpb24gPT4ge1xuICAgICAgICAgICAgc2VjdGlvbi5yZXN0b3JlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGhpZGUoKSB7XG5cbiAgICAgICAgdGhpcy5yZXN0b3JlKCk7XG4gICAgICAgIHRoaXMuaHRtbEZvY3VzZWRFbGVtZW50QmVmb3JlT3BlblF1aWNrTWVudT8uZm9jdXMoKTtcblxuICAgICAgICBzdXBlci5oaWRlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhdHRhY2hFdmVudHMoKSB7XG5cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuXG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNWaXNpYmxlICYmIGV2ZW50LmtleSA9PT0gJy8nICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93KCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNWaXNpYmxlICYmIGV2ZW50LmtleSA9PT0gJ0Fycm93TGVmdCcgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzVmlzaWJsZSAmJiBldmVudC5rZXkgPT09ICdBcnJvd1JpZ2h0JyAmJiAhZXZlbnQuY3RybEtleSAmJiAhZXZlbnQuc2hpZnRLZXkgJiYgIWV2ZW50LmFsdEtleSkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLmlzVmlzaWJsZSAmJiBldmVudC5rZXkgPT09ICdBcnJvd0Rvd24nICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmZvY3VzTmV4dFZpc2libGVJdGVtKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNWaXNpYmxlICYmIGV2ZW50LmtleSA9PT0gJ0Fycm93VXAnICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmZvY3VzUHJldmlvdXNWaXNpYmxlSXRlbSgpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzVmlzaWJsZSAmJiAvXlthLXowLTkgXSQvaS50ZXN0KGV2ZW50LmtleSkgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmNhdEZpbHRlcklucHV0KGV2ZW50LmtleSk7XG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJJdGVtcygpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzVmlzaWJsZSAmJiBldmVudC5rZXkgPT09ICdCYWNrc3BhY2UnKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5maWx0ZXJJbnB1dCA9PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlTGFzdEZpbHRlcklucHV0Q2hhcmFjdGVyKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVySXRlbXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNWaXNpYmxlICYmIGV2ZW50LmtleSA9PT0gJ0VzY2FwZScgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInICYmIHRoaXMuaXNWaXNpYmxlICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XG5cbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgICAgICAgICAgbGV0IGRhdGFUeXBlID0gdGhpcy5jdXJyZW50Rm9jdXNlZE1lbnVJdGVtIS52YWx1ZS5odG1sRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGRhdGFUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtSHRtbEZvY3VzZWRFbGVtZW50QmVmb3JlT3BlblF1aWNrTWVudShkYXRhVHlwZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNWaXNpYmxlICYmICEoZXZlbnQudGFyZ2V0ISBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdChgIyR7dGhpcy5odG1sRWxlbWVudC5pZH1gKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG5cbiAgICAgICAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgJiYgdGhpcy5pc1Zpc2libGUpIHtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrVHlwZSA9IHRoaXMuY3VycmVudEZvY3VzZWRNZW51SXRlbT8udmFsdWUuYmxvY2tUeXBlO1xuXG4gICAgICAgICAgICAgICAgaWYgKGJsb2NrVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYW5zZm9ybUh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUoYmxvY2tUeXBlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdHJhbnNmb3JtSHRtbEZvY3VzZWRFbGVtZW50QmVmb3JlT3BlblF1aWNrTWVudShibG9ja1R5cGU6IHN0cmluZyk6IHZvaWQge1xuXG4gICAgICAgIGxldCBlbGVtZW50ID0gdGhpcy5odG1sRm9jdXNlZEVsZW1lbnRCZWZvcmVPcGVuUXVpY2tNZW51Py5jbG9zZXN0KCcuYmxvY2snKSBhcyBIVE1MRWxlbWVudDtcblxuICAgICAgICBpZiAoZWxlbWVudCAmJiBibG9ja1R5cGUpIHtcbiAgICAgICAgICAgIHRoaXMuYmxvY2tPcGVyYXRpb25zU2VydmljZS5mb3JtYXRCbG9jayhlbGVtZW50LCBibG9ja1R5cGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb25jYXRGaWx0ZXJJbnB1dChzdGc6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmZpbHRlcklucHV0ICs9IHN0Zy50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlTGFzdEZpbHRlcklucHV0Q2hhcmFjdGVyKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5maWx0ZXJJbnB1dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlcklucHV0ID0gdGhpcy5maWx0ZXJJbnB1dC5zbGljZSgwLCAtMSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFF1aWNrTWVudTsiLCJpbXBvcnQgQmFzZURvdWJseUxpbmtlZExpc3QgZnJvbSAnLi9CYXNlRG91Ymx5TGlua2VkTGlzdCc7XHJcbmltcG9ydCBKTm9kZSBmcm9tICcuL0pOb2RlJztcclxuXHJcbmNsYXNzIERvdWJseUxpbmtlZExpc3Q8VD4gZXh0ZW5kcyBCYXNlRG91Ymx5TGlua2VkTGlzdDxUPiB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBhcHBlbmQoZWxlbWVudDogVCk6IHZvaWQge1xyXG5cclxuICAgICAgICBjb25zdCBub2RlID0gbmV3IEpOb2RlKGVsZW1lbnQsIHRoaXMpO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuaGVhZCB8fCAhdGhpcy50YWlsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGVhZCA9IG5vZGU7XHJcbiAgICAgICAgICAgIHRoaXMudGFpbCA9IG5vZGU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy50YWlsLnNldE5leHQobm9kZSk7XHJcbiAgICAgICAgICAgIG5vZGUuc2V0UHJldmlvdXModGhpcy50YWlsKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMudGFpbCA9IG5vZGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmxlbmd0aCsrO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBEb3VibHlMaW5rZWRMaXN0OyIsImltcG9ydCBRdWlja01lbnUgZnJvbSAnLi9RdWlja01lbnUnO1xyXG5pbXBvcnQgUXVpY2tNZW51SXRlbSBmcm9tIFwiLi9RdWlja01lbnVJdGVtXCI7XHJcbmltcG9ydCBEb3VibHlMaW5rZWRMaXN0IGZyb20gJy4uLy4uL2NvbW1vbi9Eb3VibHlMaW5rZWRMaXN0JztcclxuaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tICcuLi9jb21tb24vQmFzZVVJQ29tcG9uZW50JztcclxuXHJcbmNsYXNzIFF1aWNrTWVudVNlY3Rpb24gZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuXHJcbiAgICBxdWlja01lbnVJbnN0YW5jZTogUXVpY2tNZW51O1xyXG5cclxuICAgIG1lbnVJdGVtcyA9IG5ldyBEb3VibHlMaW5rZWRMaXN0PFF1aWNrTWVudUl0ZW0+KCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocXVpY2tNZW51SW5zdGFuY2U6IFF1aWNrTWVudSwgdGl0bGU6IHN0cmluZywgY2xhc3NMaXN0OiBzdHJpbmcpIHtcclxuXHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICB0aXRsZTogdGl0bGUsXHJcbiAgICAgICAgICAgIGNsYXNzTGlzdDogY2xhc3NMaXN0XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMucXVpY2tNZW51SW5zdGFuY2UgPSBxdWlja01lbnVJbnN0YW5jZTtcclxuXHJcbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJyk7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLnByb3BzLmNsYXNzTGlzdCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgICAgIGhlYWRpbmcudGV4dENvbnRlbnQgPSB0aGlzLnByb3BzLnRpdGxlO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZChoZWFkaW5nKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGh0bWxFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGFwcGVuZFF1aWNrTWVudUl0ZW1zKG1lbnVJdGVtczogUXVpY2tNZW51SXRlbVtdKTogdm9pZCB7XHJcblxyXG4gICAgICAgIG1lbnVJdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG5cclxuICAgICAgICAgICAgdGhpcy5hcHBlbmRRdWlja01lbnVJdGVtKGl0ZW0pXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXBwZW5kUXVpY2tNZW51SXRlbShtZW51SXRlbTogUXVpY2tNZW51SXRlbSk6IHZvaWQge1xyXG5cclxuICAgICAgICB0aGlzLm1lbnVJdGVtcy5hcHBlbmQobWVudUl0ZW0pO1xyXG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQobWVudUl0ZW0uaHRtbEVsZW1lbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGZpbHRlclNlY3Rpb24odGV4dDogc3RyaW5nKTogdm9pZCB7XHJcblxyXG4gICAgICAgIHRoaXMucmVzdG9yZSgpO1xyXG5cclxuICAgICAgICBpZiAodGV4dCAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICB0aGlzLm1lbnVJdGVtcy5mb3JFYWNoKG1lbnVJdGVtID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoIShtZW51SXRlbS5maWx0ZXJWYWx1ZS50b0xvY2FsZUxvd2VyQ2FzZSgpLmluY2x1ZGVzKHRleHQpKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1lbnVJdGVtLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgYXRMZWFkT25lSXRlbSA9IHRoaXMubWVudUl0ZW1zLmFueShpdGVtID0+IGl0ZW0uZmlsdGVyVmFsdWUudG9Mb2NhbGVMb3dlckNhc2UoKS5pbmNsdWRlcyh0ZXh0KSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIWF0TGVhZE9uZUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlc3RvcmUoKSB7XHJcbiAgICAgICAgdGhpcy5zaG93KCk7XHJcblxyXG4gICAgICAgIHRoaXMubWVudUl0ZW1zLmZvckVhY2gobWVudUl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBtZW51SXRlbS5zaG93KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFF1aWNrTWVudVNlY3Rpb247IiwiLy8gaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi9CYXNlVUlDb21wb25lbnRcIjtcclxuXHJcbmltcG9ydCBCYXNlVUlDb21wb25lbnQgZnJvbSBcIi4vQmFzZVVJQ29tcG9uZW50XCI7XHJcblxyXG5jbGFzcyBTVkdJY29uIGV4dGVuZHMgQmFzZVVJQ29tcG9uZW50IHtcclxuXHJcbiAgICBkaXNwbGF5OiBzdHJpbmc7XHJcblxyXG4gICAgdXNlRWxlbWVudDogU1ZHVXNlRWxlbWVudDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihocmVmVXNlSWQ6IHN0cmluZywgd2lkdGggPSBcIjE2XCIsIGhlaWdodCA9IFwiMTZcIikge1xyXG5cclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGhyZWZVc2VJZDogaHJlZlVzZUlkLFxyXG4gICAgICAgICAgICB3aWR0aDogd2lkdGgsXHJcbiAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0LFxyXG5cclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgdGhpcy51c2VFbGVtZW50ID0gdGhpcy5odG1sRWxlbWVudC5xdWVyeVNlbGVjdG9yKCd1c2UnKSBhcyBTVkdVc2VFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogSFRNTEVsZW1lbnQge1xyXG5cclxuICAgICAgICBjb25zdCBodG1sRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwic3ZnXCIpO1xyXG5cclxuICAgICAgICBsZXQgdXNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ1c2VcIik7XHJcbiAgICAgICAgdXNlLnNldEF0dHJpYnV0ZU5TKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCBcImhyZWZcIiwgYCMke3RoaXMucHJvcHMuaHJlZlVzZUlkfWApO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZCh1c2UpO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnNldEF0dHJpYnV0ZSgnd2lkdGgnLCB0aGlzLnByb3BzLndpZHRoKTtcclxuICAgICAgICBodG1sRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIHRoaXMucHJvcHMuaGVpZ2h0KTtcclxuICAgICAgICBodG1sRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnY3VycmVudENvbG9yJyk7XHJcblxyXG4gICAgICAgIHJldHVybiBodG1sRWxlbWVudCBhcyB1bmtub3duIGFzIEhUTUxFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGNsb25lKCk6IFNWR0ljb24ge1xyXG4gICAgICAgIHJldHVybiBuZXcgU1ZHSWNvbih0aGlzLnByb3BzLmhyZWZVc2VJZCwgdGhpcy5wcm9wcy53aWR0aCwgdGhpcy5wcm9wcy5oZWlnaHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTVkdJY29uOyIsImltcG9ydCBTVkdJY29uIGZyb20gJy4uL2NvbW1vbi9TVkdJY29uJztcclxuaW1wb3J0IFF1aWNrTWVudVNlY3Rpb24gZnJvbSAnLi9RdWlja01lbnVTZWN0aW9uJztcclxuaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tICcuLi9jb21tb24vQmFzZVVJQ29tcG9uZW50JztcclxuaW1wb3J0IEpOb2RlIGZyb20gXCIuLi8uLi9jb21tb24vSk5vZGVcIjtcclxuXHJcbmNsYXNzIFF1aWNrTWVudUl0ZW0gZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuXHJcbiAgICByZWFkb25seSBibG9ja1R5cGU6IHN0cmluZztcclxuXHJcbiAgICByZWFkb25seSB0aXRsZTogc3RyaW5nO1xyXG4gICAgcmVhZG9ubHkgZmlsdGVyVmFsdWU6IHN0cmluZztcclxuICAgIHJlYWRvbmx5IGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcblxyXG4gICAgcXVpY2tNZW51U2VjdGlvbkluc3RhbmNlOiBRdWlja01lbnVTZWN0aW9uO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHF1aWNrTWVudVNlY3Rpb25JbnN0YW5jZTogUXVpY2tNZW51U2VjdGlvbiwgdGl0bGU6IHN0cmluZywgZGVzY3JpcHRpb246IHN0cmluZywgU1ZHSHJlZlVzZUlkOiBzdHJpbmcsIGJsb2NrVHlwZTogc3RyaW5nLCBmaWx0ZXJWYWx1ZTogc3RyaW5nKSB7XHJcblxyXG4gICAgICAgIHN1cGVyKHtcclxuICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sXHJcbiAgICAgICAgICAgIFNWR0hyZWZVc2VJZDogU1ZHSHJlZlVzZUlkXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzcGxheSA9ICdmbGV4JztcclxuXHJcbiAgICAgICAgdGhpcy5ibG9ja1R5cGUgPSBibG9ja1R5cGU7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcclxuICAgICAgICB0aGlzLmZpbHRlclZhbHVlID0gZmlsdGVyVmFsdWU7XHJcblxyXG4gICAgICAgIHRoaXMucXVpY2tNZW51U2VjdGlvbkluc3RhbmNlID0gcXVpY2tNZW51U2VjdGlvbkluc3RhbmNlO1xyXG5cclxuICAgICAgICB0aGlzLmJsb2NrVHlwZSA9IGJsb2NrVHlwZTtcclxuXHJcbiAgICAgICAgdGhpcy5hdHRhY2hFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBodG1sRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdvcHRpb24nLCAnb3B0aW9uLWhvdmVyJywgJ2Jsb2NrLW9wZXJhdGlvbicpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYmxvY2stb3BlcmF0aW9uJywgJ2FwcGx5LXNlbGVjdGVkLWJsb2NrLXR5cGUnKTtcclxuICAgICAgICBodG1sRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJzAnKTtcclxuICAgICAgICBodG1sRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnb3B0aW9uJyk7XHJcblxyXG5cclxuICAgICAgICBjb25zdCBvcHRpb25JbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIG9wdGlvbkltYWdlLmNsYXNzTGlzdC5hZGQoJ29wdGlvbi1pbWFnZScpO1xyXG5cclxuICAgICAgICBjb25zdCBzdmcgPSBuZXcgU1ZHSWNvbih0aGlzLnByb3BzLlNWR0hyZWZVc2VJZCwgJzEwMCUnLCAnMTAwJScpO1xyXG5cclxuICAgICAgICBvcHRpb25JbWFnZS5hcHBlbmRDaGlsZChzdmcuaHRtbEVsZW1lbnQpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZChvcHRpb25JbWFnZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG9wdGlvblRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBvcHRpb25UZXh0LmNsYXNzTGlzdC5hZGQoJ29wdGlvbi10ZXh0Jyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGJsb2NrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgYmxvY2tUaXRsZS5jbGFzc0xpc3QuYWRkKCdibG9jay10aXRsZScpO1xyXG4gICAgICAgIGJsb2NrVGl0bGUuaW5uZXJUZXh0ID0gdGhpcy5wcm9wcy50aXRsZTtcclxuXHJcbiAgICAgICAgb3B0aW9uVGV4dC5hcHBlbmRDaGlsZChibG9ja1RpdGxlKTtcclxuXHJcbiAgICAgICAgY29uc3QgYmxvY2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgICAgICBibG9ja0Rlc2NyaXB0aW9uLmNsYXNzTGlzdC5hZGQoJ2Jsb2NrLWRlc2NyaXB0aW9uJyk7XHJcbiAgICAgICAgYmxvY2tEZXNjcmlwdGlvbi5pbm5lclRleHQgPSB0aGlzLnByb3BzLmRlc2NyaXB0aW9uO1xyXG5cclxuXHJcbiAgICAgICAgb3B0aW9uVGV4dC5hcHBlbmRDaGlsZChibG9ja0Rlc2NyaXB0aW9uKTtcclxuXHJcbiAgICAgICAgaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQob3B0aW9uVGV4dCk7XHJcblxyXG4gICAgICAgIHJldHVybiBodG1sRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBmb2N1cygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmh0bWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Jsb2NrLW9wdGlvbnMtZm9jdXNlZCcpO1xyXG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuZm9jdXMoKTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVGb2N1cygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmh0bWxFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Jsb2NrLW9wdGlvbnMtZm9jdXNlZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGF0dGFjaEV2ZW50cygpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCAoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBub2RlOiBKTm9kZTxRdWlja01lbnVJdGVtPiA9IHRoaXMucXVpY2tNZW51U2VjdGlvbkluc3RhbmNlLm1lbnVJdGVtcy5maW5kKHRoaXMpITtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucXVpY2tNZW51U2VjdGlvbkluc3RhbmNlLnF1aWNrTWVudUluc3RhbmNlLnN3aXRjaFZpc3VhbEZvY3VzKG5vZGUhKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucXVpY2tNZW51U2VjdGlvbkluc3RhbmNlLnF1aWNrTWVudUluc3RhbmNlLnRyYW5zZm9ybUh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUodGhpcy5ibG9ja1R5cGUpO1xyXG5cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUXVpY2tNZW51SXRlbTsiLCJpbXBvcnQgUXVpY2tNZW51IGZyb20gXCIuLi9jb21wb25lbnRzL3F1aWNrLW1lbnUvUXVpY2tNZW51XCI7XHJcbmltcG9ydCBRdWlja01lbnVTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL3F1aWNrLW1lbnUvUXVpY2tNZW51U2VjdGlvblwiO1xyXG5pbXBvcnQgUXVpY2tNZW51SXRlbSBmcm9tIFwiLi4vY29tcG9uZW50cy9xdWljay1tZW51L1F1aWNrTWVudUl0ZW1cIjtcclxuaW1wb3J0IEVsZW1lbnRGYWN0b3J5U2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvZWxlbWVudC1mYWN0b3J5L0VsZW1lbnRGYWN0b3J5U2VydmljZVwiO1xyXG4vLyBpbXBvcnQgeyBFTEVNRU5UX1RZUEVTIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2VsZW1lbnQtZmFjdG9yeS9FbGVtZW50RmFjdG9yeVNlcnZpY2VcIjtcclxuXHJcbmNsYXNzIFF1aWNrTWVudUJ1aWxkZXIge1xyXG5cclxuICAgIHN0YXRpYyBidWlsZCgpOiBRdWlja01lbnUge1xyXG5cclxuICAgICAgICBjb25zdCBxdWlja01lbnU6IFF1aWNrTWVudSA9IG5ldyBRdWlja01lbnUoKTtcclxuXHJcbiAgICAgICAgY29uc3QgYmFzaWNCbG9ja3NTZWN0aW9uOiBRdWlja01lbnVTZWN0aW9uID0gbmV3IFF1aWNrTWVudVNlY3Rpb24ocXVpY2tNZW51LCAnQmFzaWMgYmxvY2tzJywgJ2Jhc2ljLXNlY3Rpb24nKTtcclxuXHJcbiAgICAgICAgYmFzaWNCbG9ja3NTZWN0aW9uLmFwcGVuZFF1aWNrTWVudUl0ZW1zKFtcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0oYmFzaWNCbG9ja3NTZWN0aW9uLCAnUGFyYWdyYXBoJywgJ0p1c3Qgc3RhcnQgd3JpdGluZyB3aXRoIHBsYWluIHRleHQuJywgJ2ljb24td29yZHByZXNzLXBhcmFncmFwaCcsIEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLlBBUkFHUkFQSCwgXCJwYXJhZ3JhcGggdGV4dCBwXCIpLFxyXG4gICAgICAgICAgICBuZXcgUXVpY2tNZW51SXRlbShiYXNpY0Jsb2Nrc1NlY3Rpb24sICdJbWFnZScsICdKdXN0IHN0YXJ0IHdyaXRpbmcgd2l0aCBwbGFpbiB0ZXh0LicsICdpY29uLXdvcmRwcmVzcy1wYXJhZ3JhcGgnLCAnaW1hZ2UnLCBcImltYWdlIGZpZ3VyZSBwaG90byBpbGx1c3RyYXRpb24gcGljdHVyZSBcIiksXHJcbiAgICAgICAgICAgIG5ldyBRdWlja01lbnVJdGVtKGJhc2ljQmxvY2tzU2VjdGlvbiwgJ0J1bGxldGVkIGxpc3QnLCAnT3JnYW5pemUgaXRlbXMgd2l0aCBidWxsZXQgcG9pbnRzLicsICdpY29uLXdvcmRwcmVzcy1idWxsZXRlZC1saXN0JywgJ2J1bGxldGVkLWxpc3QnLCBcImJ1bGxldGVkIGxpc3QgdW5vcmRlcmVkIGxpc3QgdWxcIiksXHJcbiAgICAgICAgICAgIG5ldyBRdWlja01lbnVJdGVtKGJhc2ljQmxvY2tzU2VjdGlvbiwgJ051bWJlcmVkIGxpc3QnLCAnTGlzdCBpdGVtcyBpbiBhIG51bWJlcmVkIGZvcm1hdC4nLCAnaWNvbi13b3JkcHJlc3MtbnVtYmVyZWQtbGlzdCcsICdudW1iZXJlZC1saXN0JywgXCJudW1iZXJlZCBsaXN0IG51bWJlciBsaXN0IHNlcXVlbnRpYWwgbGlzdCBvbCBlbnVtZXJhdGVkIGxpc3Qgb3JkZXJlZCBsaXN0XCIpLFxyXG4gICAgICAgICAgICBuZXcgUXVpY2tNZW51SXRlbShiYXNpY0Jsb2Nrc1NlY3Rpb24sICdDb2RlJywgJ0luc2VydCBjb2RlIHNuaXBwZXRzIHdpdGggc3ludGF4IGhpZ2hsaWdodGluZy4nLCAnaWNvbi13b3JkcHJlc3MtY29kZS1tYXJrJywgJ2NvZGUnLCBcImNvZGUgc2NyaXB0IHNvdXJjZSBtYXJrdXBcIiksXHJcbiAgICAgICAgICAgIG5ldyBRdWlja01lbnVJdGVtKGJhc2ljQmxvY2tzU2VjdGlvbiwgJ1F1b3RlJywgJ0hpZ2hsaWdodCB0ZXh0IGFzIGEgc2lnbmlmaWNhbnQgcXVvdGUuJywgJ2ljb24td29yZHByZXNzLXF1b3RlJywgJ3F1b3RlJywgXCJxdW90ZSBibG9ja3F1b3RlIGNpdGF0aW9uIHF1b3RhdGlvblwiKSxcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0oYmFzaWNCbG9ja3NTZWN0aW9uLCAnSGVhZGluZyAyJywgJ01lZGl1bSBoZWFkZXIgZm9yIHN1YnNlY3Rpb25zLicsICdpY29uLWp1bGlhLWhlYWQtMicsIEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkhFQURFUl8yLCBcImhlYWRlciAyIGhlYWRpbmcgMiBoMlwiKSxcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0oYmFzaWNCbG9ja3NTZWN0aW9uLCAnSGVhZGluZyAzJywgJ1NtYWxsIGhlYWRlciBmb3IgZGV0YWlsZWQgc2VjdGlvbnMuJywgJ2ljb24tanVsaWEtaGVhZC0yJywgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLkVMRU1FTlRfVFlQRVMuSEVBREVSXzMsIFwiaGVhZGVyIDMgaGVhZGluZyAzIGgzXCIpLFxyXG4gICAgICAgICAgICBuZXcgUXVpY2tNZW51SXRlbShiYXNpY0Jsb2Nrc1NlY3Rpb24sICdTZXBhcmF0b3InLCAnVmlzdWFsbHkgZGl2aWRlIGJsb2Nrcy4nLCAnaWNvbi13b3JkcHJlc3Mtc2VwYXJhdG9yJywgJ3NlcGFyYXRvcicsIFwic2VwYXJhdG9yIGRpdmlkZXIgcnVsZSBsaW5lXCIpXHJcbiAgICAgICAgXSk7XHJcblxyXG4gICAgICAgIHF1aWNrTWVudS5hcHBlbmQoYmFzaWNCbG9ja3NTZWN0aW9uKTtcclxuXHJcbiAgICAgICAgY29uc3QgaGVhZGluZ0Jsb2Nrc1NlY3Rpb24gPSBuZXcgUXVpY2tNZW51U2VjdGlvbihxdWlja01lbnUsICdIZWFkaW5nJywgJ2hlYWRpbmctc2VjdGlvbicpO1xyXG5cclxuICAgICAgICBoZWFkaW5nQmxvY2tzU2VjdGlvbi5hcHBlbmRRdWlja01lbnVJdGVtcyhbXHJcbiAgICAgICAgICAgIG5ldyBRdWlja01lbnVJdGVtKGhlYWRpbmdCbG9ja3NTZWN0aW9uLCAnSGVhZGluZyAxJywgJ0xhcmdlIGhlYWRlciB0byBvcmdhbml6ZSBjb250ZW50LicsICdpY29uLWp1bGlhLWhlYWQtMScsIEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkJMT0NLX0hFQURFUl8xLCBcImhlYWRlciAxIGhlYWRpbmcgMSBoMVwiKSxcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0oaGVhZGluZ0Jsb2Nrc1NlY3Rpb24sICdIZWFkaW5nIDInLCAnTWVkaXVtIGhlYWRlciBmb3Igc3Vic2VjdGlvbnMuJywgJ2ljb24tanVsaWEtaGVhZC0yJywgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLkVMRU1FTlRfVFlQRVMuSEVBREVSXzIsIFwiaGVhZGVyIDIgaGVhZGluZyAyIGgyXCIpLFxyXG4gICAgICAgICAgICBuZXcgUXVpY2tNZW51SXRlbShoZWFkaW5nQmxvY2tzU2VjdGlvbiwgJ0hlYWRpbmcgMycsICdTbWFsbCBoZWFkZXIgZm9yIGRldGFpbGVkIHNlY3Rpb25zLicsICdpY29uLWp1bGlhLWhlYWQtMycsIEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkhFQURFUl8zLCBcImhlYWRlciAzIGhlYWRpbmcgMyBoM1wiKSxcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0oaGVhZGluZ0Jsb2Nrc1NlY3Rpb24sICdIZWFkaW5nIDQnLCAnU21hbGwgaGVhZGVyIGZvciBkZXRhaWxlZCBzZWN0aW9ucy4nLCAnaWNvbi1qdWxpYS1oZWFkLTQnLCBFbGVtZW50RmFjdG9yeVNlcnZpY2UuRUxFTUVOVF9UWVBFUy5IRUFERVJfNCwgXCJoZWFkZXIgNCBoZWFkaW5nIDQgaDRcIiksXHJcbiAgICAgICAgICAgIG5ldyBRdWlja01lbnVJdGVtKGhlYWRpbmdCbG9ja3NTZWN0aW9uLCAnSGVhZGluZyA1JywgJ1NtYWxsIGhlYWRlciBmb3IgZGV0YWlsZWQgc2VjdGlvbnMuJywgJ2ljb24tanVsaWEtaGVhZC01JywgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLkVMRU1FTlRfVFlQRVMuSEVBREVSXzUsIFwiaGVhZGVyIDUgaGVhZGluZyA1IGg1XCIpLFxyXG4gICAgICAgICAgICBuZXcgUXVpY2tNZW51SXRlbShoZWFkaW5nQmxvY2tzU2VjdGlvbiwgJ0hlYWRpbmcgNicsICdTbWFsbCBoZWFkZXIgZm9yIGRldGFpbGVkIHNlY3Rpb25zLicsICdpY29uLWp1bGlhLWhlYWQtNicsIEVsZW1lbnRGYWN0b3J5U2VydmljZS5FTEVNRU5UX1RZUEVTLkhFQURFUl82LCBcImhlYWRlciA2IGhlYWRpbmcgNiBoNlwiKSxcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgcXVpY2tNZW51LmFwcGVuZChoZWFkaW5nQmxvY2tzU2VjdGlvbik7XHJcblxyXG5cclxuICAgICAgICBjb25zdCBsaXN0QmxvY2tzU2VjdGlvbiA9IG5ldyBRdWlja01lbnVTZWN0aW9uKHF1aWNrTWVudSwgJ0xpc3QnLCAnbGlzdC1zZWN0aW9uJyk7XHJcblxyXG4gICAgICAgIGxpc3RCbG9ja3NTZWN0aW9uLmFwcGVuZFF1aWNrTWVudUl0ZW1zKFtcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0obGlzdEJsb2Nrc1NlY3Rpb24sICdUb2RvIGxpc3QnLCAnT3JnYW5pemUgaXRlbXMgd2l0aCBidWxsZXQgcG9pbnRzLicsICdpY29uLW1hdGVyaWFsLWNoZWNrLWxpc3QnLCAndG9kby1saXN0JywgXCJ0b2RvIGxpc3QgdGFzayBsaXN0IGNoZWNrbGlzdFwiKSxcclxuICAgICAgICAgICAgbmV3IFF1aWNrTWVudUl0ZW0obGlzdEJsb2Nrc1NlY3Rpb24sICdCdWxsZXRlZCBsaXN0JywgJ09yZ2FuaXplIGl0ZW1zIHdpdGggYnVsbGV0IHBvaW50cy4nLCAnaWNvbi13b3JkcHJlc3MtYnVsbGV0ZWQtbGlzdCcsICdidWxsZXRlZC1saXN0JywgXCJidWxsZXRlZCBsaXN0IHVub3JkZXJlZCBsaXN0IHVsXCIpLFxyXG4gICAgICAgICAgICBuZXcgUXVpY2tNZW51SXRlbShsaXN0QmxvY2tzU2VjdGlvbiwgJ051bWJlcmVkIGxpc3QnLCAnTGlzdCBpdGVtcyBpbiBhIG51bWJlcmVkIGZvcm1hdC4nLCAnaWNvbi13b3JkcHJlc3MtbnVtYmVyZWQtbGlzdCcsICdudW1iZXJlZC1saXN0JywgXCJudW1iZXJlZCBsaXN0IG51bWJlciBsaXN0IHNlcXVlbnRpYWwgbGlzdCBvbCBlbnVtZXJhdGVkIGxpc3Qgb3JkZXJlZCBsaXN0XCIpXHJcbiAgICAgICAgXSk7XHJcblxyXG4gICAgICAgIHF1aWNrTWVudS5hcHBlbmQobGlzdEJsb2Nrc1NlY3Rpb24pO1xyXG5cclxuXHJcbiAgICAgICAgcmV0dXJuIHF1aWNrTWVudTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUXVpY2tNZW51QnVpbGRlcjsiLCJpbXBvcnQgQmFzZVVJQ29tcG9uZW50IGZyb20gXCIuLi8uLi9jb21tb24vQmFzZVVJQ29tcG9uZW50XCI7XHJcbmltcG9ydCBmbG9hdGluZ1Rvb2xiYXJCdXR0b24gZnJvbSBcIi4vRHJvcGRvd25NZW51QnV0dG9uXCI7XHJcbmltcG9ydCBEcm9wZG93bk1lbnVMaXN0IGZyb20gXCIuL0Ryb3Bkb3duTWVudUxpc3RcIjtcclxuXHJcbmNsYXNzIERyb3Bkb3duTWVudSBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG5cclxuICAgIGRyb3Bkb3duQnV0dG9uOiBmbG9hdGluZ1Rvb2xiYXJCdXR0b247XHJcbiAgICBkcm9wZG93bkxpc3Q6IERyb3Bkb3duTWVudUxpc3Q7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYnV0dG9uOiBmbG9hdGluZ1Rvb2xiYXJCdXR0b24sIGRyb3Bkb3duTGlzdDogRHJvcGRvd25NZW51TGlzdCkge1xyXG5cclxuICAgICAgICBzdXBlcih7fSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzcGxheSA9ICdibG9jayc7XHJcblxyXG4gICAgICAgIC8vYWRkIHZhbGlkYXRpb24gdGhhdCB2ZXJpZnkgaWYgdGhlIGFyaWFsIHRhcmdldCBmcm9tIGJ1dHRvbiBlcXVhbHMgdG8gaWQgZHJvcGRvd24gbGlzdFxyXG5cclxuICAgICAgICB0aGlzLmRyb3Bkb3duQnV0dG9uID0gYnV0dG9uO1xyXG4gICAgICAgIHRoaXMuZHJvcGRvd25MaXN0ID0gZHJvcGRvd25MaXN0O1xyXG5cclxuXHJcbiAgICAgICAgYnV0dG9uLmRvY3VtZW50QXBwZW5kVG8odGhpcy5odG1sRWxlbWVudCk7XHJcbiAgICAgICAgZHJvcGRvd25MaXN0LmRvY3VtZW50QXBwZW5kVG8odGhpcy5odG1sRWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XHJcblxyXG4gICAgICAgIGNvbnN0IGh0bWxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICBodG1sRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2VsZWN0LXdyYXBwZXJcIik7XHJcblxyXG4gICAgICAgIHJldHVybiBodG1sRWxlbWVudDtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25NZW51OyIsImltcG9ydCBCYXNlVUlDb21wb25lbnQgZnJvbSBcIi4uLy4uL2NvbW1vbi9CYXNlVUlDb21wb25lbnRcIjtcclxuXHJcbmNsYXNzIElucHV0TGlua0JveCBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKHt9KTtcclxuXHJcbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcblxyXG4gICAgICAgIGh0bWxFbGVtZW50LmlkID0gXCJsaW5rQm94SW5wdXRcIjtcclxuICAgICAgICBodG1sRWxlbWVudC50eXBlID0gXCJ1cmxcIjtcclxuICAgICAgICBodG1sRWxlbWVudC5wbGFjZWhvbGRlciA9IFwiUGFzdGUgb3IgdHlwZSBhIGxpbmsuLi5cIjtcclxuXHJcbiAgICAgICAgcmV0dXJuIGh0bWxFbGVtZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbnB1dExpbmtCb3g7IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiO1xyXG5pbXBvcnQgSW5wdXRMaW5rQm94IGZyb20gXCIuL0lucHV0TGlua0JveFwiO1xyXG5cclxuY2xhc3MgSW5wdXRMaW5rQm94V3JhcHBlciBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG4gICAgaW5wdXRMaW5rQm94OiBJbnB1dExpbmtCb3g7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgY29uc3QgaW5wdXRMaW5rQm94ID0gbmV3IElucHV0TGlua0JveCgpO1xyXG5cclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGlucHV0TGlua0JveDogaW5wdXRMaW5rQm94XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICB0aGlzLmlucHV0TGlua0JveCA9IGlucHV0TGlua0JveDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5pZCA9IFwibGlua0JveFwiO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICBodG1sRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZGVwZW5kZW50LWJveFwiKTtcclxuXHJcbiAgICAgICAgaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5wcm9wcy5pbnB1dExpbmtCb3guaHRtbEVsZW1lbnQpO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IElucHV0TGlua0JveFdyYXBwZXI7IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tICcuLi9jb21tb24vQmFzZVVJQ29tcG9uZW50JztcclxuaW1wb3J0IERyb3Bkb3duTWVudSBmcm9tICcuL2Ryb3Bkb3duLXRvb2wvRHJvcGRvd25NZW51JztcclxuaW1wb3J0IEZsb2F0aW5nVG9vbGJhclNlcGFyYXRvciBmcm9tICcuL3NlcGFyYXRvci9GbG9hdGluZ1Rvb2xiYXJTZXBhcmF0b3InO1xyXG5pbXBvcnQgZmxvYXRpbmdUb29sYmFyVG9vbEJhciBmcm9tICcuL2dyb3VwLWJ1dHRvbi9Hcm91cEJ1dHRvbic7XHJcbmltcG9ydCBJbnB1dExpbmtCb3hXcmFwcGVyIGZyb20gJy4vbGluay1ib3gvSW5wdXRMaW5rQm94V3JhcHBlcic7XHJcblxyXG5jbGFzcyBGbG9hdGluZ1Rvb2xiYXIgZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuICAgIGRyb3Bkb3duczogRHJvcGRvd25NZW51W107XHJcbiAgICBjdXJyZW50U2VsZWN0aW9uUmFuZ2U6IFJhbmdlIHwgbnVsbDtcclxuICAgIGlucHV0TGlua0JveFdyYXBwZXI6IElucHV0TGlua0JveFdyYXBwZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IGlucHV0TGlua0JveFdyYXBwZXIgPSBuZXcgSW5wdXRMaW5rQm94V3JhcHBlcigpO1xyXG5cclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGlucHV0TGlua0JveFdyYXBwZXI6IGlucHV0TGlua0JveFdyYXBwZXJcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgICAgIHRoaXMuaW5wdXRMaW5rQm94V3JhcHBlciA9IGlucHV0TGlua0JveFdyYXBwZXI7XHJcbiAgICAgICAgdGhpcy5hdHRhY2hFdmVudHMoKTtcclxuICAgICAgICB0aGlzLmRyb3Bkb3ducyA9IFtdO1xyXG4gICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvblJhbmdlID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHJcbiAgICAgICAgaHRtbEVsZW1lbnQuaWQgPSAnZmxvYXRpbmdUb29sYmFyJztcclxuICAgICAgICBodG1sRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NvZnQtYm94LXNoYWRvdycpO1xyXG5cclxuICAgICAgICBjb25zdCBzZWxlY3RXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgc2VsZWN0V3JhcHBlci5jbGFzc0xpc3QuYWRkKCdzZWxlY3Qtd3JhcHBlcicpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZChzZWxlY3RXcmFwcGVyKTtcclxuXHJcbiAgICAgICAgY29uc3QgZWRpdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJqb2hhbm5lc0VkaXRvclwiKTtcclxuXHJcbiAgICAgICAgZWRpdG9yPy5hcHBlbmRDaGlsZCh0aGlzLnByb3BzLmlucHV0TGlua0JveFdyYXBwZXIuaHRtbEVsZW1lbnQpO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvdygpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIXNlbGVjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvblJhbmdlID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgcmFuZ2UgPSBzZWxlY3Rpb24hLmdldFJhbmdlQXQoMCk7XHJcbiAgICAgICAgICAgIGxldCByZWN0ID0gcmFuZ2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmh0bWxFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICAgICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuc3R5bGUubGVmdCA9IGAke3JlY3QubGVmdCArIHdpbmRvdy5zY3JvbGxYIC0gNTB9cHhgO1xyXG4gICAgICAgICAgICB0aGlzLmh0bWxFbGVtZW50LnN0eWxlLnRvcCA9IGAke3JlY3QudG9wICsgd2luZG93LnNjcm9sbFkgLSB0aGlzLmh0bWxFbGVtZW50Lm9mZnNldEhlaWdodCAtIDEwfXB4YDtcclxuXHJcbiAgICAgICAgICAgIHN1cGVyLnNob3coKTtcclxuICAgICAgICB9LCAxMCk7XHJcbiAgICB9XHJcblxyXG4gICAgaGlkZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmN1cnJlbnRTZWxlY3Rpb25SYW5nZSA9IG51bGw7XHJcbiAgICAgICAgc3VwZXIuaGlkZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFwcGVuZERyb3Bkb3duKGRyb3Bkb3duOiBEcm9wZG93bk1lbnUpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmRyb3Bkb3ducy5wdXNoKGRyb3Bkb3duKVxyXG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQoZHJvcGRvd24uaHRtbEVsZW1lbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGFwcGVuZFNlcGFyYXRvcihzZXBhcmF0b3I6IEZsb2F0aW5nVG9vbGJhclNlcGFyYXRvcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQoc2VwYXJhdG9yLmh0bWxFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBhcHBlbmRUZXh0VG9vbGJhcih0b29sYmFyOiBmbG9hdGluZ1Rvb2xiYXJUb29sQmFyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5hcHBlbmRDaGlsZCh0b29sYmFyLmh0bWxFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBhbnlEcm9wZG93blZpc2libGUoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgZm9yIChjb25zdCBkcm9wZG93biBvZiB0aGlzLmRyb3Bkb3ducykge1xyXG4gICAgICAgICAgICBpZiAoZHJvcGRvd24uZHJvcGRvd25MaXN0LmlzVmlzaWJsZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBhdHRhY2hFdmVudHMoKSB7XHJcblxyXG4gICAgICAgIC8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdGlvbkNoYW5nZUFmdGVyRXhlY0NvbW1hbmQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAvLyAgICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uUmFuZ2UgPSBnZXRTZWxlY3Rpb24oKT8uZ2V0UmFuZ2VBdCgwKSB8fCBudWxsO1xyXG4gICAgICAgIC8vIH0pO1xyXG5cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICgoZXZlbnQua2V5ID09PSAnRXNjYXBlJyB8fCBldmVudC5rZXkgPT09ICdEZWxldGUnKSAmJiB0aGlzLmlzVmlzaWJsZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCJTaGlmdFwiIHx8IGV2ZW50LmtleSA9PT0gXCJDb250cm9sXCIpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LmdldFNlbGVjdGlvbigpIS50b1N0cmluZygpLnRyaW0oKSAhPT0gJycpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LCAxMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNWaXNpYmxlICYmICEoZXZlbnQudGFyZ2V0ISBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdChgIyR7dGhpcy5odG1sRWxlbWVudC5pZH1gKSAmJiAhdGhpcy5hbnlEcm9wZG93blZpc2libGUoKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5pc1Zpc2libGUgJiYgIShldmVudC50YXJnZXQhIGFzIEhUTUxFbGVtZW50KS5jbG9zZXN0KGAjJHt0aGlzLmh0bWxFbGVtZW50LmlkfWApKSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKT8ucmVtb3ZlQWxsUmFuZ2VzKCk7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKT8uYWRkUmFuZ2UodGhpcy5jdXJyZW50U2VsZWN0aW9uUmFuZ2UhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5pc1Zpc2libGUpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LmdldFNlbGVjdGlvbigpIS50b1N0cmluZygpLnRyaW0oKSAhPT0gJycpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LCAxMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYmxvY2tGb3JtYXR0ZWQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNhbkhpZGUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGbG9hdGluZ1Rvb2xiYXI7IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiO1xyXG5pbXBvcnQgQ2lyY3VsYXJEb3VibHlMaW5rZWRMaXN0IGZyb20gXCIuLi8uLi8uLi9jb21tb24vQ2lyY3VsYXJEb3VibHlMaW5rZWRMaXN0XCI7XHJcbmltcG9ydCBEcm9wZG93bk1lbnVMaXN0SXRlbSBmcm9tIFwiLi9Ecm9wZG93bk1lbnVMaXN0SXRlbVwiO1xyXG5cclxuY2xhc3MgRHJvcGRvd25NZW51TGlzdCBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG4gICAgZHJvcGRvd25JdGVtczogQ2lyY3VsYXJEb3VibHlMaW5rZWRMaXN0PERyb3Bkb3duTWVudUxpc3RJdGVtPjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpZDogc3RyaW5nLCB0aXRsZTogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICBpZDogaWQsXHJcbiAgICAgICAgICAgIHRpdGxlOiB0aXRsZVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXkgPSAnZmxleCc7XHJcblxyXG4gICAgICAgIHRoaXMuZHJvcGRvd25JdGVtcyA9IG5ldyBDaXJjdWxhckRvdWJseUxpbmtlZExpc3Q8RHJvcGRvd25NZW51TGlzdEl0ZW0+KCk7XHJcblxyXG4gICAgICAgIHRoaXMuYXR0YWNoRXZlbnRzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XHJcblxyXG4gICAgICAgIGNvbnN0IGh0bWxFbGVtZW50OiBIVE1MVUxpc3RFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcclxuICAgICAgICBodG1sRWxlbWVudC5pZCA9IHRoaXMucHJvcHMuaWQ7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc2V0QXR0cmlidXRlKCduYW1lJywgJ2Jsb2NrLXR5cGUnKTtcclxuICAgICAgICBodG1sRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NvZnQtYm94LXNoYWRvdycsICdkZXBlbmRlbnQtYm94JywgJ2NoZWNrYWJsZS1pdGVtcycpO1xyXG5cclxuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XHJcbiAgICAgICAgdGl0bGUuaW5uZXJUZXh0ID0gdGhpcy5wcm9wcy50aXRsZTtcclxuICAgICAgICB0aXRsZS5zdHlsZS5tYXJnaW5MZWZ0ID0gJzVweCc7XHJcblxyXG4gICAgICAgIGh0bWxFbGVtZW50LmFwcGVuZENoaWxkKHRpdGxlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGh0bWxFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGFwcGVuZChkcm9wZG93bkl0ZW06IERyb3Bkb3duTWVudUxpc3RJdGVtKTogdm9pZCB7XHJcblxyXG4gICAgICAgIHRoaXMuZHJvcGRvd25JdGVtcy5hcHBlbmQoZHJvcGRvd25JdGVtKTtcclxuICAgICAgICB0aGlzLmh0bWxFbGVtZW50LmFwcGVuZENoaWxkKGRyb3Bkb3duSXRlbS5odG1sRWxlbWVudClcclxuICAgIH1cclxuXHJcbiAgICBhdHRhY2hFdmVudHMoKTogdm9pZCB7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNhbkhpZGUgJiYgIShldmVudC50YXJnZXQhIGFzIEhUTUxFbGVtZW50KS5jbG9zZXN0KGAjJHt0aGlzLmh0bWxFbGVtZW50LmlkfWApKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25NZW51TGlzdDsiLCJpbXBvcnQgSUNvbW1hbmQgZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2VzL2NvbW1vbi9JQ29tbWFuZFwiO1xyXG5pbXBvcnQgQmFzZVVJQ29tcG9uZW50IGZyb20gXCIuLi8uLi9jb21tb24vQmFzZVVJQ29tcG9uZW50XCI7XHJcbmltcG9ydCBEcm9wZG93bk1lbnVMaXN0IGZyb20gXCIuL0Ryb3Bkb3duTWVudUxpc3RcIjtcclxuXHJcbmNsYXNzIERyb3Bkb3duTWVudUxpc3RJdGVtIGV4dGVuZHMgQmFzZVVJQ29tcG9uZW50IHtcclxuXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9jb21tYW5kU2VydmljZTogSUNvbW1hbmQ7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9jb21tYW5kOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF92YWx1ZTogc3RyaW5nIHwgbnVsbDtcclxuXHJcbiAgICBwYXJlbnREcm9wZG93bk1lbnVMaXN0OiBEcm9wZG93bk1lbnVMaXN0O1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnREcm9wZG93bk1lbnVMaXN0OiBEcm9wZG93bk1lbnVMaXN0LCBjb21tYW5kU2VydmljZTogSUNvbW1hbmQsIGNvbW1hbmQ6IHN0cmluZywgdmFsdWU6IHN0cmluZyB8IG51bGwsIGxlZnRJY29uOiBIVE1MRWxlbWVudCB8IFNWR0VsZW1lbnQsIHRpdGxlOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGxlZnRJY29uOiBsZWZ0SWNvbixcclxuICAgICAgICAgICAgdGl0bGU6IHRpdGxlXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgICAgdGhpcy5fY29tbWFuZCA9IGNvbW1hbmQ7XHJcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLl9jb21tYW5kU2VydmljZSA9IGNvbW1hbmRTZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMucGFyZW50RHJvcGRvd25NZW51TGlzdCA9IHBhcmVudERyb3Bkb3duTWVudUxpc3Q7XHJcblxyXG4gICAgICAgIHRoaXMuYXR0YWNoRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ29wdGlvbicsICdvcHRpb24taG92ZXInLCAnYmxvY2stb3BlcmF0aW9uJyk7XHJcbiAgICAgICAgLy8gaHRtbEVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLXR5cGUnLCB0aGlzLnByb3BzLmRhdGFUeXBlKTtcclxuICAgICAgICBodG1sRWxlbWVudC50YWJJbmRleCA9IDI7XHJcblxyXG4gICAgICAgIGNvbnN0IHRleHRPcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICB0ZXh0T3B0aW9uLmNsYXNzTGlzdC5hZGQoJ3RleHQtb3B0aW9uJyk7XHJcblxyXG4gICAgICAgIHRleHRPcHRpb24uYXBwZW5kQ2hpbGQodGhpcy5wcm9wcy5sZWZ0SWNvbik7XHJcblxyXG4gICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgc3Bhbi5pbm5lclRleHQgPSB0aGlzLnByb3BzLnRpdGxlO1xyXG5cclxuICAgICAgICB0ZXh0T3B0aW9uLmFwcGVuZENoaWxkKHNwYW4pO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZCh0ZXh0T3B0aW9uKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGh0bWxFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGF0dGFjaEV2ZW50KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuX2NvbW1hbmRTZXJ2aWNlLmV4ZWNDb21tYW5kKHRoaXMuX2NvbW1hbmQsIHRoaXMuX3ZhbHVlKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zdCBzZWxlY3Rpb25FdmVudCA9IG5ldyBDdXN0b21FdmVudCgnc2VsZWN0aW9uQ2hhbmdlQWZ0ZXJFeGVjQ29tbWFuZCcsIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICBkZXRhaWw6IHsgbWVzc2FnZTogJ3NlbGVjdGlvbkNoYW5nZUFmdGVyRXhlY0NvbW1hbmQnIH0sXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgYnViYmxlczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIC8vICAgICBjYW5jZWxhYmxlOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAvLyB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KHNlbGVjdGlvbkV2ZW50KTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmVudERyb3Bkb3duTWVudUxpc3QuaGlkZSgpO1xyXG5cclxuICAgICAgICAgICAgfSwgMTApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBEcm9wZG93bk1lbnVMaXN0SXRlbTsiLCJpbXBvcnQgQmFzZVVJQ29tcG9uZW50IGZyb20gXCIuLi8uLi9jb21tb24vQmFzZVVJQ29tcG9uZW50XCI7XHJcblxyXG5jbGFzcyBGbG9hdGluZ1Rvb2xiYXJTZXBhcmF0b3IgZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAgICAgc3VwZXIoe30pO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XHJcblxyXG4gICAgICAgIGNvbnN0IGh0bWxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuXHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gXCIyNHB4XCI7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc3R5bGUud2lkdGggPSBcIjFweFwiO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnN0eWxlLmJvcmRlclJpZ2h0ID0gXCIxcHggc29saWQgI2QwZDBkMFwiO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnN0eWxlLm1hcmdpbiA9IFwiYXV0byA2cHhcIjtcclxuXHJcbiAgICAgICAgcmV0dXJuIGh0bWxFbGVtZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGbG9hdGluZ1Rvb2xiYXJTZXBhcmF0b3I7IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiO1xyXG4vLyBpbXBvcnQgZmxvYXRpbmdUb29sYmFyVG9vbGJhckJ1dHRvbiBmcm9tIFwiLi9Hcm91cGVkQnV0dG9uXCI7XHJcblxyXG5jbGFzcyBHcm91cEJ1dHRvbiBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgICAgICBzdXBlcih7fSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICAvLyB0aGlzLmF0dGFjaEV2ZW50cygpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogSFRNTEVsZW1lbnQge1xyXG5cclxuICAgICAgICBjb25zdCBodG1sRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIml0ZW1cIik7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc3R5bGUubWFyZ2luTGVmdCA9IFwiMTBweFwiO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnN0eWxlLm1hcmdpblJpZ2h0ID0gXCIxMHB4XCI7XHJcblxyXG4gICAgICAgIHJldHVybiBodG1sRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBhcHBlbmQodG9vbEJ1dHRvbjogZmxvYXRpbmdUb29sYmFyVG9vbGJhckJ1dHRvbik6IHZvaWQge1xyXG4gICAgLy8gICAgIC8vY3JlYXRlIGEgZGF0YSBzdHJ1Y3R1cmUgdG8gc3RvcmUgdGhlIGRvbSBub2RlIGVsZW1lbnRcclxuICAgIC8vICAgICB0aGlzLmh0bWxFbGVtZW50LmFwcGVuZENoaWxkKHRvb2xCdXR0b24uaHRtbEVsZW1lbnQpO1xyXG4gICAgLy8gfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgR3JvdXBCdXR0b247IiwiaW1wb3J0IFNWR0ljb24gZnJvbSBcIi4uLy4uL2NvbW1vbi9TVkdJY29uXCI7XHJcbmltcG9ydCBCYXNlVUlDb21wb25lbnQgZnJvbSBcIi4uLy4uL2NvbW1vbi9CYXNlVUlDb21wb25lbnRcIjtcclxuaW1wb3J0IElDb21tYW5kIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9jb21tb24vSUNvbW1hbmRcIjtcclxuXHJcbmNsYXNzIEdyb3VwZWRCdXR0b24gZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIHByaXZhdGUgcmVhZG9ubHkgX2NvbW1hbmRTZXJ2aWNlOiBJQ29tbWFuZDtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgX2NvbW1hbmQ6IHN0cmluZztcclxuXHJcbiAgICBkaXNwbGF5OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29tbWFuZFNlcnZpY2U6IElDb21tYW5kLCBjb21tYW5kOiBzdHJpbmcsIHRpdGxlOiBzdHJpbmcsIHN2Z1VzZUhyZWY6IHN0cmluZykge1xyXG5cclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcclxuICAgICAgICAgICAgc3ZnVXNlSHJlZjogc3ZnVXNlSHJlZlxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgdGhpcy5fY29tbWFuZFNlcnZpY2UgPSBjb21tYW5kU2VydmljZTtcclxuICAgICAgICB0aGlzLl9jb21tYW5kID0gY29tbWFuZDtcclxuXHJcbiAgICAgICAgdGhpcy5hdHRhY2hFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5yb2xlID0gXCJidXR0b25cIjtcclxuICAgICAgICBodG1sRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZW50cnlcIiwgXCJidXR0b24tcmVzZXRcIiwgXCJ0ZXh0LWZvcm1hdHRpbmctb3BlcmF0aW9uXCIsIFwib3B0aW9uLWhvdmVyXCIpO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnRpdGxlID0gdGhpcy5wcm9wcy50aXRsZTtcclxuICAgICAgICBodG1sRWxlbWVudC50YWJJbmRleCA9IDE7XHJcblxyXG4gICAgICAgIG5ldyBTVkdJY29uKHRoaXMucHJvcHMuc3ZnVXNlSHJlZiwgXCIyMlwiLCBcIjIyXCIpLmRvY3VtZW50QXBwZW5kVG8oaHRtbEVsZW1lbnQpO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGF0dGFjaEV2ZW50cygpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBlZGl0YWJsZUVsZW1lbnQgPSB0aGlzLmdldFBhcmVudEVkaXRhYmxlKCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9jb21tYW5kU2VydmljZS5leGVjQ29tbWFuZCh0aGlzLl9jb21tYW5kKTtcclxuXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZWRpdGFibGVFbGVtZW50Py5ub3JtYWxpemUoKTtcclxuICAgICAgICAgICAgfSwgMTApO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCAoZXZlbnQpID0+IHtcclxuXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICghc2VsZWN0aW9uPy5pc0NvbGxhcHNlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jb21tYW5kU2VydmljZS5xdWVyeUNvbW1hbmRTdGF0ZSh0aGlzLl9jb21tYW5kKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmh0bWxFbGVtZW50LnN0eWxlLmNvbG9yID0gXCIjMjM4MmUyXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5odG1sRWxlbWVudC5zdHlsZS5jb2xvciA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCAxMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UGFyZW50RWRpdGFibGUoKSB7XHJcblxyXG4gICAgICAgIGxldCBjdXJyZW50QmxvY2tSYW5nZSA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKSEuZ2V0UmFuZ2VBdCgwKTtcclxuXHJcbiAgICAgICAgbGV0IGNvbW1vbkFuY2VzdG9yID0gY3VycmVudEJsb2NrUmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XHJcblxyXG4gICAgICAgIGlmIChjb21tb25BbmNlc3Rvci5ub2RlVHlwZSA9PT0gMykge1xyXG4gICAgICAgICAgICBjb21tb25BbmNlc3RvciA9IGNvbW1vbkFuY2VzdG9yLnBhcmVudE5vZGUhO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgY3VycmVudEJsb2NrID0gKGNvbW1vbkFuY2VzdG9yIGFzIEhUTUxFbGVtZW50KS5jbG9zZXN0KCcuZWRpdGFibGUnKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRCbG9jaztcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdyb3VwZWRCdXR0b247IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiOztcclxuXHJcbmNsYXNzIENvbG9ySWNvbiBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbG9yOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGNvbG9yOiBjb2xvclxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XHJcblxyXG4gICAgICAgIGNvbnN0IGh0bWxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuXHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc3R5bGUud2lkdGggPSBcIjIwcHhcIjtcclxuICAgICAgICBodG1sRWxlbWVudC5zdHlsZS5oZWlnaHQgPSBcIjIwcHhcIjtcclxuICAgICAgICBodG1sRWxlbWVudC5zdHlsZS5ib3JkZXJSYWRpdXMgPSBcIjUwJVwiO1xyXG4gICAgICAgIGh0bWxFbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMucHJvcHMuY29sb3I7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWQgI2QwZDBkMFwiO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb2xvckljb247IiwiaW1wb3J0IElUZXh0T3BlcmF0aW9uU2VydmljZSBmcm9tIFwiLi9JVGV4dE9wZXJhdGlvblNlcnZpY2VcIjtcblxudHlwZSBUYXJnZXROb2RlID0ge1xuICAgIG5vZGVUeXBlOiBzdHJpbmc7XG4gICAgY2xhc3Nlcz86IHN0cmluZ1tdO1xufTtcblxuY2xhc3MgVGV4dE9wZXJhdGlvblNlcnZpY2UgaW1wbGVtZW50cyBJVGV4dE9wZXJhdGlvblNlcnZpY2Uge1xuXG4gICAgLy8gc2VsZWN0ZWROb2RlczogTm9kZVtdIHwgbnVsbDsgLy9tdWl0byBwcm92YXZsZW1lbnRlIGV1IHZvdSB0ZXIgcXVlIHF1ZWJyYXIgZW0gbiBhcnJheXMgdW0gcGFyYSBjYWRhIG5vIGRlIGJsb2NvIFxuICAgIC8vIHRhcmdldDogVGFyZ2V0Tm9kZSB8IG51bGw7ICAgIC8vbXVpdG8gcHJvdmF2ZWxtZW50ZSBldSB2b3UgdGVyIHVtIHRhcmdldCBwYXJhIGNhZGEgbsOzIGRlIGJsb2NvXG4gICAgLy8gaW50ZW50aW9uOiBzdHJpbmcgfCBudWxsOyAgICAgLy9lIHVtIGludGVudGlvbiBwYXJhIGNhZGEgbsOzIGRlIGJsb2NvLlxuXG5cbiAgICAvLyBjb21tYW5kOiBzdHJpbmc7XG4gICAgLy8gdmFsdWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogVGV4dE9wZXJhdGlvblNlcnZpY2U7XG5cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvLyB0aGlzLnNlbGVjdGVkTm9kZXMgPSBudWxsO1xuICAgICAgICAvLyB0aGlzLnRhcmdldCA9IG51bGw7XG4gICAgICAgIC8vIHRoaXMuaW50ZW50aW9uID0gbnVsbDtcblxuICAgICAgICAvLyB0aGlzLmNvbW1hbmQgPSBjb21tYW5kO1xuICAgICAgICAvLyB0aGlzLnZhbHVlID0gdmFsdWU7XG5cbiAgICAgICAgaWYgKFRleHRPcGVyYXRpb25TZXJ2aWNlLl9pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogVGV4dE9wZXJhdGlvblNlcnZpY2Uge1xuXG5cbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgVGV4dE9wZXJhdGlvblNlcnZpY2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcbiAgICB9XG5cbiAgICBleGVjQ29tbWFuZChjb21tYW5kOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgfCBudWxsKTogYm9vbGVhbiB7XG5cbiAgICAgICAgbGV0IHY6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHZhbHVlIHx8IHVuZGVmaW5lZDtcblxuXG5cbiAgICAgICAgaWYgKGNvbW1hbmQgPT0gXCJsaW5rXCIpIHtcblxuICAgICAgICAgICAgYWxlcnQoXCJkZWxldGVcIik7XG5cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbW1hbmQgPT0gXCJkZWxldGVcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibW92ZSB0byBCbG9jayBvcGVyYXRpb25zIGV4Y2VwdGlvblwiKTtcblxuICAgICAgICAgICAgYWxlcnQoXCJkZWxldGVcIik7XG5cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbW1hbmQgPT0gXCJkdXBsaWNhdGVcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibW92ZSB0byBCbG9jayBvcGVyYXRpb25zIGV4Y2VwdGlvblwiKTtcblxuICAgICAgICAgICAgYWxlcnQoXCJkdXBsaWNhdGVcIik7XG5cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmV4ZWNDb21tYW5kKGNvbW1hbmQsIGZhbHNlLCB2KTtcbiAgICB9XG5cbiAgICAvLyBleGVjQ29tbWFuZDIoKTogYm9vbGVhbiB7XG5cblxuICAgIC8vICAgICBpZiAodGhpcy5jb21tYW5kID09IFwibGlua1wiKSB7XG4gICAgLy8gICAgICAgICBhbGVydChcImRlbGV0ZVwiKTtcblxuICAgIC8vICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgLy8gICAgIH1cblxuICAgIC8vICAgICBpZiAodGhpcy5jb21tYW5kID09IFwiZGVsZXRlXCIpIHtcbiAgICAvLyAgICAgICAgIGFsZXJ0KFwiZGVsZXRlXCIpO1xuXG4gICAgLy8gICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIGlmICh0aGlzLmNvbW1hbmQgPT0gXCJkdXBsaWNhdGVcIikge1xuICAgIC8vICAgICAgICAgYWxlcnQoXCJkdXBsaWNhdGVcIik7XG5cbiAgICAvLyAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vICAgICB9XG5cblxuICAgIC8vICAgICByZXR1cm4gZG9jdW1lbnQuZXhlY0NvbW1hbmQodGhpcy5jb21tYW5kLCBmYWxzZSwgdGhpcy52YWx1ZSk7XG4gICAgLy8gfVxuXG4gICAgcXVlcnlDb21tYW5kU3RhdGUoY29tbWFuZDogc3RyaW5nLCB2YWx1ZTogc3RyaW5nIHwgbnVsbCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUoY29tbWFuZCk7XG4gICAgfVxuXG5cblxuXG4gICAgLy8gcXVlcnlDb21tYW5kU3RhdGUoKTogYm9vbGVhbiB7XG4gICAgLy8gICAgIGNvbnN0IHZhbHVlID0gZG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUodGhpcy5jb21tYW5kKTtcblxuICAgIC8vICAgICByZXR1cm4gdmFsdWU7XG4gICAgLy8gfVxuXG4gICAgLy8gcXVlcnlDb21tYW5kU3RhdGUyKCk6IGJvb2xlYW4ge1xuICAgIC8vICAgICBsZXQgYWEgPSBkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZSh0aGlzLmNvbW1hbmQpO1xuICAgIC8vICAgICByZXR1cm4gYWE7XG4gICAgLy8gfVxuXG4gICAgLy8gZXhlY0NvbW1hbmQoKTogYm9vbGVhbiB7XG5cbiAgICAvLyAgICAgaWYgKHRoaXMuY29tbWFuZCA9PSBcImxpbmtcIikge1xuICAgIC8vICAgICAgICAgYWxlcnQoXCJkZWxldGVcIik7XG5cbiAgICAvLyAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vICAgICB9XG5cbiAgICAvLyAgICAgaWYgKHRoaXMuY29tbWFuZCA9PSBcImRlbGV0ZVwiKSB7XG4gICAgLy8gICAgICAgICBhbGVydChcImRlbGV0ZVwiKTtcblxuICAgIC8vICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgLy8gICAgIH1cblxuICAgIC8vICAgICBpZiAodGhpcy5jb21tYW5kID09IFwiZHVwbGljYXRlXCIpIHtcbiAgICAvLyAgICAgICAgIGFsZXJ0KFwiZHVwbGljYXRlXCIpO1xuXG4gICAgLy8gICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIHJldHVybiBkb2N1bWVudC5leGVjQ29tbWFuZCh0aGlzLmNvbW1hbmQsIGZhbHNlLCB0aGlzLnZhbHVlKTtcbiAgICAvLyB9XG5cbiAgICAvLyBleGVjQ29tbWFuZDIoKTogYm9vbGVhbiB7XG5cblxuICAgIC8vICAgICBpZiAodGhpcy5jb21tYW5kID09IFwibGlua1wiKSB7XG4gICAgLy8gICAgICAgICBhbGVydChcImRlbGV0ZVwiKTtcblxuICAgIC8vICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgLy8gICAgIH1cblxuICAgIC8vICAgICBpZiAodGhpcy5jb21tYW5kID09IFwiZGVsZXRlXCIpIHtcbiAgICAvLyAgICAgICAgIGFsZXJ0KFwiZGVsZXRlXCIpO1xuXG4gICAgLy8gICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIGlmICh0aGlzLmNvbW1hbmQgPT0gXCJkdXBsaWNhdGVcIikge1xuICAgIC8vICAgICAgICAgYWxlcnQoXCJkdXBsaWNhdGVcIik7XG5cbiAgICAvLyAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vICAgICB9XG5cblxuICAgIC8vICAgICByZXR1cm4gZG9jdW1lbnQuZXhlY0NvbW1hbmQodGhpcy5jb21tYW5kLCBmYWxzZSwgdGhpcy52YWx1ZSk7XG4gICAgLy8gfVxuXG5cbiAgICAvLyBleGVjQ29tbWFuZChjb21tYW5kOiBzdHJpbmcsIHNob3dVST86IGJvb2xlYW4sIHZhbHVlPzogYW55KTogYm9vbGVhbiB7XG5cbiAgICAvLyAgICAgdGhpcy5zZWxlY3RlZE5vZGVzID0gdGhpcy5nZXRTZWxlY3RlZFRleHROb2RlcygpO1xuICAgIC8vICAgICB0aGlzLnRhcmdldCA9IHsgbm9kZVR5cGU6IGNvbW1hbmQsIGNsYXNzZXM6IHZhbHVlIH07XG4gICAgLy8gICAgIHRoaXMuc2V0SW50ZW50aW9uKHRoaXMuc2VsZWN0ZWROb2Rlc1swXSwgdGhpcy50YXJnZXQpO1xuXG5cbiAgICAvLyAgICAgdGhpcy5zZWxlY3RlZE5vZGVzLmZvckVhY2gobm9kZSA9PiB7XG5cbiAgICAvLyAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlICE9PSBOb2RlLlRFWFRfTk9ERSkge1xuICAgIC8vICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbm9kZSB0eXBlZFwiKTtcbiAgICAvLyAgICAgICAgIH1cblxuICAgIC8vICAgICAgICAgaWYgKHRoaXMuaW50ZW50aW9uID09IFwiYWRkXCIpIHtcblxuICAgIC8vICAgICAgICAgICAgIGxldCBhbHJlYWR5QXBwbGllZFN0eWxlID0gdGhpcy5maW5kQ2xvc2VzdE1hdGNoaW5nUGFyZW50KG5vZGUsIHRoaXMudGFyZ2V0ISk7XG5cbiAgICAvLyAgICAgICAgICAgICBpZiAoIWFscmVhZHlBcHBsaWVkU3R5bGUpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgdGhpcy5pbnNlcnROZXdDb250ZW50KG5vZGUpO1xuICAgIC8vICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgLy8gICAgICAgICAgICAgICAgIC8vIG7Do28gZmHDp2EgbmFkYSBwb3IgZW5xdWFudG9cbiAgICAvLyAgICAgICAgICAgICB9XG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgIH0pO1xuXG5cbiAgICAvLyAgICAgcmV0dXJuIHRydWU7XG4gICAgLy8gfVxuXG5cbiAgICAvLyBpbnNlcnROZXdDb250ZW50KG5vZGU6IE5vZGUpOiB2b2lkIHtcbiAgICAvLyAgICAgaWYgKG5vZGUubm9kZVR5cGUgIT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgLy8gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb2RlIG11c3QgYmUgYSB0ZXh0IG5vZGUuXCIpO1xuICAgIC8vICAgICB9XG5cbiAgICAvLyAgICAgLy8gR2V0IHRoZSBjdXJyZW50IHNlbGVjdGlvblxuICAgIC8vICAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCkhO1xuXG4gICAgLy8gICAgIC8vIENoZWNrIGlmIHRoZSBzZWxlY3Rpb24gaXMgd2l0aGluIHRoZSBub2RlXG4gICAgLy8gICAgIGlmICghc2VsZWN0aW9uLmNvbnRhaW5zTm9kZShub2RlLCB0cnVlKSkge1xuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coXCJObyB0ZXh0IHNlbGVjdGVkIG9yIHNlbGVjdGlvbiBkb2VzIG5vdCBpbnRlcnNlY3Qgd2l0aCB0aGUgZ2l2ZW4gbm9kZS5cIik7XG4gICAgLy8gICAgICAgICByZXR1cm47XG4gICAgLy8gICAgIH1cblxuICAgIC8vICAgICAvLyBHZXQgdGhlIHJhbmdlIG9mIHRoZSBzZWxlY3Rpb25cbiAgICAvLyAgICAgY29uc3QgcmFuZ2UgPSBzZWxlY3Rpb24uZ2V0UmFuZ2VBdCgwKTtcblxuICAgIC8vICAgICAvLyBDaGVjayBpZiB0aGUgc2VsZWN0ZWQgcmFuZ2UgaXMgd2l0aGluIHRoZSB0ZXh0IG5vZGVcbiAgICAvLyAgICAgaWYgKHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyICE9PSBub2RlKSB7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhcIlNlbGVjdGlvbiBkb2VzIG5vdCBmdWxseSBlbmNvbXBhc3MgdGhlIHRleHQgbm9kZS5cIik7XG4gICAgLy8gICAgICAgICByZXR1cm47XG4gICAgLy8gICAgIH1cblxuICAgIC8vICAgICAvLyBFeHRyYWN0IHBhcnRzIG9mIHRoZSB0ZXh0IG5vZGUgYmFzZWQgb24gdGhlIHNlbGVjdGlvblxuICAgIC8vICAgICBjb25zdCBzdGFydE9mZnNldCA9IHJhbmdlLnN0YXJ0T2Zmc2V0O1xuICAgIC8vICAgICBjb25zdCBlbmRPZmZzZXQgPSByYW5nZS5lbmRPZmZzZXQ7XG5cbiAgICAvLyAgICAgY29uc3QgYmVmb3JlVGV4dCA9IG5vZGUudGV4dENvbnRlbnQuc3Vic3RyaW5nKDAsIHN0YXJ0T2Zmc2V0KTtcbiAgICAvLyAgICAgY29uc3Qgc2VsZWN0ZWRUZXh0ID0gcmFuZ2UudG9TdHJpbmcoKTtcbiAgICAvLyAgICAgY29uc3QgYWZ0ZXJUZXh0ID0gbm9kZS50ZXh0Q29udGVudC5zdWJzdHJpbmcoZW5kT2Zmc2V0KTtcblxuICAgIC8vICAgICAvLyBDcmVhdGUgdGhlIHdyYXBwZXIgZWxlbWVudCBmb3IgdGhlIHNlbGVjdGVkIHRleHRcbiAgICAvLyAgICAgY29uc3Qgd3JhcHBlckVsZW1lbnQgPSB0aGlzLmNyZWF0ZVdyYXBwZXJFbGVtZW50KCk7XG4gICAgLy8gICAgIHdyYXBwZXJFbGVtZW50LnRleHRDb250ZW50ID0gc2VsZWN0ZWRUZXh0O1xuXG4gICAgLy8gICAgIC8vIENyZWF0ZSBkb2N1bWVudCBmcmFnbWVudCB0byBob2xkIHRoZSBuZXcgc3RydWN0dXJlXG4gICAgLy8gICAgIGxldCBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcblxuICAgIC8vICAgICBpZiAoYmVmb3JlVGV4dCkge1xuICAgIC8vICAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYmVmb3JlVGV4dCkpO1xuICAgIC8vICAgICB9XG5cbiAgICAvLyAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQod3JhcHBlckVsZW1lbnQpO1xuXG4gICAgLy8gICAgIGlmIChhZnRlclRleHQpIHtcbiAgICAvLyAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGFmdGVyVGV4dCkpO1xuICAgIC8vICAgICB9XG5cbiAgICAvLyAgICAgLy8gUmVwbGFjZSB0aGUgb3JpZ2luYWwgbm9kZSB3aXRoIHRoZSBmcmFnbWVudFxuICAgIC8vICAgICBpZiAobm9kZS5wYXJlbnROb2RlKSB7XG4gICAgLy8gICAgICAgICBub2RlLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGZyYWdtZW50LCBub2RlKTtcbiAgICAvLyAgICAgfVxuICAgIC8vIH1cblxuXG5cbiAgICAvLyBjcmVhdGVXcmFwcGVyRWxlbWVudCh0ZXh0Tm9kZTogTm9kZSk6IEhUTUxFbGVtZW50IHtcbiAgICAvLyAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGhpcy50YXJnZXQhLm5vZGVUeXBlKTtcbiAgICAvLyAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKC4uLnRoaXMudGFyZ2V0IS5jbGFzc2VzISk7XG4gICAgLy8gICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLmV4dHJhY3RTZWxlY3RlZFRleHQodGV4dE5vZGUpO1xuICAgIC8vICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAvLyB9XG5cblxuICAgIC8vIHNldEludGVudGlvbihmaXJzdE5vZGU6IE5vZGUsIHRhcmdldE5vZGU6IFRhcmdldE5vZGUpOiBzdHJpbmcge1xuXG4gICAgLy8gICAgIGxldCBoYXNUYXJnZXQgPSB0aGlzLmZpbmRDbG9zZXN0TWF0Y2hpbmdQYXJlbnQoZmlyc3ROb2RlLCB0YXJnZXROb2RlKTtcblxuICAgIC8vICAgICBpZiAoIWhhc1RhcmdldCkge1xuICAgIC8vICAgICAgICAgcmV0dXJuIHRoaXMuaW50ZW50aW9uID0gXCJhZGRcIjtcbiAgICAvLyAgICAgfVxuXG4gICAgLy8gICAgIHJldHVybiBcInJlbW92ZVwiO1xuICAgIC8vIH1cblxuXG4gICAgZ2V0VGFyZ2V0RWxlbWVudE1hcChjb21tYW5kOiBzdHJpbmcpOiBrZXlvZiBIVE1MRWxlbWVudFRhZ05hbWVNYXAge1xuICAgICAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcblxuICAgICAgICAgICAgY2FzZSBcInN0cm9uZ1wiOlxuICAgICAgICAgICAgY2FzZSBcImJvbGRcIjpcbiAgICAgICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdzdHJvbmcnO1xuXG4gICAgICAgICAgICBjYXNlIFwiaXRhbGljXCI6XG4gICAgICAgICAgICBjYXNlIFwiaVwiOlxuICAgICAgICAgICAgY2FzZSBcImVtXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiZW1cIjtcblxuICAgICAgICAgICAgY2FzZSBcInVuZGVybGluZVwiOlxuICAgICAgICAgICAgY2FzZSBcInVcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ1XCI7XG5cbiAgICAgICAgICAgIGNhc2UgXCJzdHJpa2V0aHJvdWdoXCI6XG4gICAgICAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiAncyc7XG5cbiAgICAgICAgICAgIGNhc2UgXCJiYWNrZ3JvdW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3BhblwiO1xuXG4gICAgICAgICAgICBjYXNlIFwiY29sb3JcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJzcGFuXCI7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIGdldFNlbGVjdGVkVGV4dE5vZGVzKCk6IE5vZGVbXSB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcbiAgICAgICAgaWYgKCFzZWxlY3Rpb24gfHwgc2VsZWN0aW9uLnJhbmdlQ291bnQgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRleHROb2RlczogTm9kZVtdID0gW107XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxlY3Rpb24ucmFuZ2VDb3VudDsgKytpKSB7XG4gICAgICAgICAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZUF0KGkpO1xuICAgICAgICAgICAgY29uc3Qgbm9kZUl0ZXJhdG9yID0gZG9jdW1lbnQuY3JlYXRlTm9kZUl0ZXJhdG9yKFxuICAgICAgICAgICAgICAgIHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyLFxuICAgICAgICAgICAgICAgIE5vZGVGaWx0ZXIuU0hPV19URVhULFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWNjZXB0Tm9kZShub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2UuaW50ZXJzZWN0c05vZGUobm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTm9kZUZpbHRlci5GSUxURVJfQUNDRVBUO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE5vZGVGaWx0ZXIuRklMVEVSX1JFSkVDVDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGxldCBub2RlO1xuICAgICAgICAgICAgd2hpbGUgKChub2RlID0gbm9kZUl0ZXJhdG9yLm5leHROb2RlKCkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVSYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVSYW5nZS5zZWxlY3ROb2RlQ29udGVudHMobm9kZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29tcGFyZUJvdW5kYXJ5UG9pbnRzKFJhbmdlLkVORF9UT19TVEFSVCwgbm9kZVJhbmdlKSA9PT0gLTEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbXBhcmVCb3VuZGFyeVBvaW50cyhSYW5nZS5TVEFSVF9UT19FTkQsIG5vZGVSYW5nZSkgPT09IDFcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0Tm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0ZXh0Tm9kZXM7XG4gICAgfVxuXG4gICAgZmluZENsb3Nlc3RNYXRjaGluZ1BhcmVudChlbGVtZW50OiBOb2RlIHwgbnVsbCwgdGFyZ2V0OiBUYXJnZXROb2RlKTogRWxlbWVudCB8IG51bGwge1xuICAgICAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50Lm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSkge1xuICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIHdoaWxlIChlbGVtZW50ICYmIGVsZW1lbnQgIT09IGRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW0gPSBlbGVtZW50IGFzIEVsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW0udGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSB0YXJnZXQubm9kZVR5cGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRhcmdldC5jbGFzc2VzIHx8IHRhcmdldC5jbGFzc2VzLmV2ZXJ5KGNscyA9PiBlbGVtLmNsYXNzTGlzdC5jb250YWlucyhjbHMpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5wYXJlbnRFbGVtZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGV4dHJhY3RTZWxlY3RlZFRleHQodGV4dE5vZGU6IE5vZGUpOiBzdHJpbmcge1xuICAgICAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG5cbiAgICAgICAgaWYgKCFzZWxlY3Rpb24gfHwgc2VsZWN0aW9uLnJhbmdlQ291bnQgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcmFuZ2UgPSBzZWxlY3Rpb24uZ2V0UmFuZ2VBdCgwKTtcblxuICAgICAgICBpZiAodGV4dE5vZGUubm9kZVR5cGUgIT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRleHRDb250ZW50ID0gdGV4dE5vZGUudGV4dENvbnRlbnQgfHwgXCJcIjtcblxuICAgICAgICBsZXQgc3RhcnQgPSAwO1xuICAgICAgICBsZXQgZW5kID0gdGV4dENvbnRlbnQubGVuZ3RoO1xuXG4gICAgICAgIGlmICghcmFuZ2UuaW50ZXJzZWN0c05vZGUodGV4dE5vZGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChyYW5nZS5zdGFydENvbnRhaW5lciA9PT0gdGV4dE5vZGUpIHtcbiAgICAgICAgICAgIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRPZmZzZXQ7XG4gICAgICAgIH0gZWxzZSBpZiAocmFuZ2Uuc3RhcnRDb250YWluZXIuY29udGFpbnModGV4dE5vZGUpKSB7XG4gICAgICAgICAgICBzdGFydCA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocmFuZ2UuZW5kQ29udGFpbmVyID09PSB0ZXh0Tm9kZSkge1xuICAgICAgICAgICAgZW5kID0gcmFuZ2UuZW5kT2Zmc2V0O1xuICAgICAgICB9IGVsc2UgaWYgKHJhbmdlLmVuZENvbnRhaW5lci5jb250YWlucyh0ZXh0Tm9kZSkpIHtcbiAgICAgICAgICAgIGVuZCA9IHRleHRDb250ZW50Lmxlbmd0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzdGFydCA8IGVuZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRleHRDb250ZW50LnN1YnN0cmluZyhzdGFydCwgZW5kKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGV4dE9wZXJhdGlvblNlcnZpY2U7XG4iLCJpbXBvcnQgU1ZHSWNvbiBmcm9tIFwiLi4vLi4vY29tbW9uL1NWR0ljb25cIjtcclxuaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiO1xyXG5pbXBvcnQgRHJvcGRvd25NZW51TGlzdCBmcm9tIFwiLi9Ecm9wZG93bk1lbnVMaXN0XCI7XHJcblxyXG5jbGFzcyBEcm9wZG93bk1lbnVCdXR0b24gZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuICAgIGRyb3Bkb3duTGlzdDogRHJvcGRvd25NZW51TGlzdDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpZDogc3RyaW5nLCB0aXRsZTogc3RyaW5nIHwgSFRNTEVsZW1lbnQsIGRyb3Bkb3duTGlzdDogRHJvcGRvd25NZW51TGlzdCwgaW5jbHVkZUNoZXZyb25JY29uOiBib29sZWFuID0gdHJ1ZSkge1xyXG5cclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGlkOiBpZCxcclxuICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxyXG4gICAgICAgICAgICBkcm9wZG93bkxpc3Q6IGRyb3Bkb3duTGlzdCxcclxuICAgICAgICAgICAgaW5jbHVkZUNoZXZyb25JY29uOiBpbmNsdWRlQ2hldnJvbkljb25cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgIHRoaXMuZHJvcGRvd25MaXN0ID0gZHJvcGRvd25MaXN0O1xyXG5cclxuICAgICAgICB0aGlzLmF0dGFjaEV2ZW50cygpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTogSFRNTEVsZW1lbnQge1xyXG5cclxuICAgICAgICBjb25zdCBodG1sRWxlbWVudDogSFRNTEJ1dHRvbkVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBodG1sRWxlbWVudC5pZCA9IHRoaXMucHJvcHMuaWQ7XHJcbiAgICAgICAgLy8gaHRtbEVsZW1lbnQudGl0bGUgPSB0aGlzLnByb3BzLnRpdGxlXHJcbiAgICAgICAgaHRtbEVsZW1lbnQucm9sZSA9IFwiYnV0dG9uXCI7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImJ1dHRvbi1yZXNldFwiLCBcInRleHQtZm9ybWF0dGluZy1zZWxlY3QtYnV0dG9uXCIsIFwidGV4dC1mb3JtYXR0aW5nLW9wZXJhdGlvblwiLCBcIm9wdGlvbi1ob3ZlclwiKTtcclxuICAgICAgICBodG1sRWxlbWVudC50YWJJbmRleCA9IDE7XHJcbiAgICAgICAgaHRtbEVsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1jb250cm9sc1wiLCB0aGlzLnByb3BzLmRyb3Bkb3duTGlzdC5odG1sRWxlbWVudC5pZCk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5wcm9wcy50aXRsZSA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgICAgICBzcGFuLnRleHRDb250ZW50ID0gdGhpcy5wcm9wcy50aXRsZTtcclxuICAgICAgICAgICAgaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQoc3Bhbik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaHRtbEVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5wcm9wcy50aXRsZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5pbmNsdWRlQ2hldnJvbkljb24pIHtcclxuICAgICAgICAgICAgY29uc3Qgc3ZnID0gbmV3IFNWR0ljb24oXCJpY29uLXdvcmRwcmVzcy1jaGV2cm9uLWRvd25cIik7XHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50LmFwcGVuZENoaWxkKHN2Zy5odG1sRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgYXR0YWNoRXZlbnRzKCk6IHZvaWQge1xyXG5cclxuICAgICAgICB0aGlzLmh0bWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5kcm9wZG93bkxpc3QuaXNWaXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRyb3Bkb3duTGlzdC5zaG93KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duTWVudUJ1dHRvbjsiLCJpbXBvcnQgRHJvcGRvd25NZW51IGZyb20gXCIuLi9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvZHJvcGRvd24tdG9vbC9Ecm9wZG93bk1lbnVcIjtcclxuaW1wb3J0IEZsb2F0aW5nVG9vbGJhciBmcm9tIFwiLi4vY29tcG9uZW50cy9mbG9hdGluZy10b29sYmFyL0Zsb2F0aW5nVG9vbGJhclwiO1xyXG5pbXBvcnQgRHJvcGRvd25NZW51TGlzdCBmcm9tIFwiLi4vY29tcG9uZW50cy9mbG9hdGluZy10b29sYmFyL2Ryb3Bkb3duLXRvb2wvRHJvcGRvd25NZW51TGlzdFwiO1xyXG5pbXBvcnQgRHJvcGRvd25NZW51TGlzdEl0ZW0gZnJvbSBcIi4uL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9kcm9wZG93bi10b29sL0Ryb3Bkb3duTWVudUxpc3RJdGVtXCI7XHJcbmltcG9ydCBTVkdJY29uIGZyb20gXCIuLi9jb21wb25lbnRzL2NvbW1vbi9TVkdJY29uXCI7XHJcbmltcG9ydCBGbG9hdGluZ1Rvb2xiYXJTZXBhcmF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9zZXBhcmF0b3IvRmxvYXRpbmdUb29sYmFyU2VwYXJhdG9yXCI7XHJcbmltcG9ydCBHcm91cEJ1dHRvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9mbG9hdGluZy10b29sYmFyL2dyb3VwLWJ1dHRvbi9Hcm91cEJ1dHRvblwiO1xyXG5pbXBvcnQgR3JvdXBlZEJ1dHRvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9mbG9hdGluZy10b29sYmFyL2dyb3VwLWJ1dHRvbi9Hcm91cGVkQnV0dG9uXCI7XHJcbmltcG9ydCBDb2xvckljb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9kcm9wZG93bi10b29sL0NvbG9ySWNvblwiO1xyXG5pbXBvcnQgVGV4dE9wZXJhdGlvblNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL3RleHQtb3BlcmF0aW9ucy9UZXh0T3BlcmF0aW9uU2VydmljZVwiO1xyXG5pbXBvcnQgRWxlbWVudEZhY3RvcnlTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9lbGVtZW50LWZhY3RvcnkvRWxlbWVudEZhY3RvcnlTZXJ2aWNlXCI7XHJcbmltcG9ydCBEcm9wZG93bk1lbnVCdXR0b24gZnJvbSBcIi4uL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9kcm9wZG93bi10b29sL0Ryb3Bkb3duTWVudUJ1dHRvblwiO1xyXG5pbXBvcnQgQmxvY2tPcGVyYXRpb25zU2VydmljZSwgeyBCTE9DS19PUEVSQVRJT05TIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2Jsb2NrLW9wZXJhdGlvbnMvQmxvY2tPcGVyYXRpb25zU2VydmljZVwiO1xyXG5cclxuY2xhc3MgRmxvYXRpbmdUb29sYmFyQnVpbGRlciB7XHJcblxyXG4gICAgc3RhdGljIGJ1aWxkKCk6IEZsb2F0aW5nVG9vbGJhciB7XHJcblxyXG4gICAgICAgIGNvbnN0IGZsb2F0aW5nQmFyID0gbmV3IEZsb2F0aW5nVG9vbGJhcigpO1xyXG5cclxuICAgICAgICBmbG9hdGluZ0Jhci5hcHBlbmREcm9wZG93bihGbG9hdGluZ1Rvb2xiYXJCdWlsZGVyLnR1cm5JbnRvRHJvcGRvd24oKSk7XHJcbiAgICAgICAgZmxvYXRpbmdCYXIuYXBwZW5kU2VwYXJhdG9yKEZsb2F0aW5nVG9vbGJhckJ1aWxkZXIuc2VwYXJhdG9yKCkpO1xyXG4gICAgICAgIGZsb2F0aW5nQmFyLmFwcGVuZFNlcGFyYXRvcihGbG9hdGluZ1Rvb2xiYXJCdWlsZGVyLmdyb3VwQnV0dG9uKCkpO1xyXG4gICAgICAgIGZsb2F0aW5nQmFyLmFwcGVuZERyb3Bkb3duKEZsb2F0aW5nVG9vbGJhckJ1aWxkZXIuY29sb3JEcm9wZG93bigpKTtcclxuICAgICAgICBmbG9hdGluZ0Jhci5hcHBlbmRTZXBhcmF0b3IoRmxvYXRpbmdUb29sYmFyQnVpbGRlci5zZXBhcmF0b3IoKSk7XHJcbiAgICAgICAgZmxvYXRpbmdCYXIuYXBwZW5kRHJvcGRvd24oRmxvYXRpbmdUb29sYmFyQnVpbGRlci5tb3JlT3B0aW9uc0Ryb3Bkb3duKCkpO1xyXG5cclxuICAgICAgICByZXR1cm4gZmxvYXRpbmdCYXI7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHR1cm5JbnRvRHJvcGRvd24oKTogRHJvcGRvd25NZW51IHtcclxuXHJcbiAgICAgICAgY29uc3QgdHVybkludG9CYXJMaXN0ID0gbmV3IERyb3Bkb3duTWVudUxpc3QoXCJ0dXJuSW50b1NlbGVjdFwiLCBcIlR1cm4gaW50b1wiKTtcclxuICAgICAgICBjb25zdCB0dXJuSW50b0JhckJ1dHRvbiA9IG5ldyBEcm9wZG93bk1lbnVCdXR0b24oXCJ0dXJuSW50b0J1dHRvblwiLCBcIlRleHRcIiwgdHVybkludG9CYXJMaXN0KTtcclxuICAgICAgICBjb25zdCB0dXJuSW50b0Ryb3Bkb3duID0gbmV3IERyb3Bkb3duTWVudSh0dXJuSW50b0JhckJ1dHRvbiwgdHVybkludG9CYXJMaXN0KTtcclxuXHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwicFwiLCBudWxsLCBTVkdJY29ucy5wYXJhZ3JhcGguaHRtbEVsZW1lbnQsIFwiVGV4dFwiKSk7XHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiYnVsbGV0ZWQtbGlzdFwiLCBudWxsLCBTVkdJY29ucy5iX2xpc3QuaHRtbEVsZW1lbnQsIFwiQnVsbGV0ZWQgbGlzdFwiKSk7XHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwibnVtYmVyZWQtbGlzdFwiLCBudWxsLCBTVkdJY29ucy5uX2xpc3QuaHRtbEVsZW1lbnQsIFwiTnVtYmVyZWQgbGlzdFwiKSk7XHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksXCJjb2RlXCIsIG51bGwsIFNWR0ljb25zLmNvZGUuaHRtbEVsZW1lbnQsIFwiQ29kZVwiKSk7XHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwicXVvdGVcIiwgbnVsbCwgU1ZHSWNvbnMucXVvdGUuaHRtbEVsZW1lbnQsIFwiUXVvdGVcIikpO1xyXG4gICAgICAgIHR1cm5JbnRvQmFyTGlzdC5hcHBlbmQobmV3IERyb3Bkb3duTWVudUxpc3RJdGVtKHR1cm5JbnRvQmFyTGlzdCwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImgxXCIsIG51bGwsIFNWR0ljb25zLmhlYWQxLmh0bWxFbGVtZW50LCBcIkhlYWRpbmcgMVwiKSk7XHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiaDJcIiwgbnVsbCwgU1ZHSWNvbnMuaGVhZDIuaHRtbEVsZW1lbnQsIFwiSGVhZGluZyAyXCIpKTtcclxuICAgICAgICB0dXJuSW50b0Jhckxpc3QuYXBwZW5kKG5ldyBEcm9wZG93bk1lbnVMaXN0SXRlbSh0dXJuSW50b0Jhckxpc3QsIEJsb2NrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0SW5zdGFuY2UoKSwgXCJoM1wiLCBudWxsLCBTVkdJY29ucy5oZWFkMy5odG1sRWxlbWVudCwgXCJIZWFkaW5nIDNcIikpO1xyXG4gICAgICAgIHR1cm5JbnRvQmFyTGlzdC5hcHBlbmQobmV3IERyb3Bkb3duTWVudUxpc3RJdGVtKHR1cm5JbnRvQmFyTGlzdCwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImg0XCIsIG51bGwsIFNWR0ljb25zLmhlYWQ0Lmh0bWxFbGVtZW50LCBcIkhlYWRpbmcgNFwiKSk7XHJcbiAgICAgICAgdHVybkludG9CYXJMaXN0LmFwcGVuZChuZXcgRHJvcGRvd25NZW51TGlzdEl0ZW0odHVybkludG9CYXJMaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiaDVcIiwgbnVsbCwgU1ZHSWNvbnMuaGVhZDUuaHRtbEVsZW1lbnQsIFwiSGVhZGluZyA1XCIpKTtcclxuICAgICAgICB0dXJuSW50b0Jhckxpc3QuYXBwZW5kKG5ldyBEcm9wZG93bk1lbnVMaXN0SXRlbSh0dXJuSW50b0Jhckxpc3QsIEJsb2NrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0SW5zdGFuY2UoKSwgXCJoNlwiLCBudWxsLCBTVkdJY29ucy5oZWFkNi5odG1sRWxlbWVudCwgXCJIZWFkaW5nIDZcIikpO1xyXG5cclxuICAgICAgICByZXR1cm4gdHVybkludG9Ecm9wZG93bjtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgc2VwYXJhdG9yKCk6IEZsb2F0aW5nVG9vbGJhclNlcGFyYXRvciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBGbG9hdGluZ1Rvb2xiYXJTZXBhcmF0b3IoKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ3JvdXBCdXR0b24oKTogR3JvdXBCdXR0b24ge1xyXG5cclxuICAgICAgICBjb25zdCBncm91cEJ1dHRvbiA9IG5ldyBHcm91cEJ1dHRvbigpO1xyXG5cclxuICAgICAgICBuZXcgR3JvdXBlZEJ1dHRvbihUZXh0T3BlcmF0aW9uU2VydmljZS5nZXRJbnN0YW5jZSgpLFwibGlua1wiLCBcIkxpbmtcIiwgXCJpY29uLW1hdGVyaWFsLWxpbmtcIikuZG9jdW1lbnRBcHBlbmRUbyhncm91cEJ1dHRvbi5odG1sRWxlbWVudCk7XHJcbiAgICAgICAgbmV3IEdyb3VwZWRCdXR0b24oVGV4dE9wZXJhdGlvblNlcnZpY2UuZ2V0SW5zdGFuY2UoKSwgXCJib2xkXCIsIFwiQm9sZFwiLCBcImljb24td29yZHByZXNzLWJvbGRcIikuZG9jdW1lbnRBcHBlbmRUbyhncm91cEJ1dHRvbi5odG1sRWxlbWVudCk7XHJcbiAgICAgICAgbmV3IEdyb3VwZWRCdXR0b24oVGV4dE9wZXJhdGlvblNlcnZpY2UuZ2V0SW5zdGFuY2UoKSwgXCJpdGFsaWNcIiwgXCJJdGFsaWNcIiwgXCJpY29uLW1hdGVyaWFsLWl0YWxpY1wiKS5kb2N1bWVudEFwcGVuZFRvKGdyb3VwQnV0dG9uLmh0bWxFbGVtZW50KTtcclxuICAgICAgICBuZXcgR3JvdXBlZEJ1dHRvbihUZXh0T3BlcmF0aW9uU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcInVuZGVybGluZVwiLCBcIlVuZGVybGluZVwiLCBcImljb24tbWF0ZXJpYWwtdW5kZXJsaW5lXCIpLmRvY3VtZW50QXBwZW5kVG8oZ3JvdXBCdXR0b24uaHRtbEVsZW1lbnQpO1xyXG4gICAgICAgIG5ldyBHcm91cGVkQnV0dG9uKFRleHRPcGVyYXRpb25TZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiY29weVwiLCBcIkNvZGVcIiwgXCJpY29uLXdvcmRwcmVzcy1jb2RlLW1hcmtcIikuZG9jdW1lbnRBcHBlbmRUbyhncm91cEJ1dHRvbi5odG1sRWxlbWVudCk7XHJcbiAgICAgICAgbmV3IEdyb3VwZWRCdXR0b24oVGV4dE9wZXJhdGlvblNlcnZpY2UuZ2V0SW5zdGFuY2UoKSwgXCJzdHJpa2VUaHJvdWdoXCIsIFwiU3RyaWtlLXRocm91Z2hcIiwgXCJpY29uLXdvcmRwcmVzcy1zdHJpa2UtdGhyb3VnaFwiKS5kb2N1bWVudEFwcGVuZFRvKGdyb3VwQnV0dG9uLmh0bWxFbGVtZW50KTtcclxuICAgICAgICBuZXcgR3JvdXBlZEJ1dHRvbihUZXh0T3BlcmF0aW9uU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImNvcHlcIiwgXCJFcXVhdGlvblwiLCBcImljb24td29yZHByZXNzLWVxdWF0aW9uLW1hcmtcIikuZG9jdW1lbnRBcHBlbmRUbyhncm91cEJ1dHRvbi5odG1sRWxlbWVudCk7XHJcblxyXG4gICAgICAgIHJldHVybiBncm91cEJ1dHRvbjtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgY29sb3JEcm9wZG93bigpOiBEcm9wZG93bk1lbnUge1xyXG5cclxuICAgICAgICBjb25zdCBjb2xvckRyb3Bkb3duTGlzdCA9IG5ldyBEcm9wZG93bk1lbnVMaXN0KFwiY29sb3JUZXh0T3B0aW9uU2VsZWN0XCIsIFwiQmFja2dyb3VuZFwiKTtcclxuICAgICAgICBjb25zdCBjb2xvckJ1dHRvbiA9IG5ldyBEcm9wZG93bk1lbnVCdXR0b24oXCJjb2xvclRleHRCdXR0b25cIiwgbmV3IENvbG9ySWNvbihcIiNGQUY0RDFcIikuaHRtbEVsZW1lbnQsIGNvbG9yRHJvcGRvd25MaXN0KTtcclxuICAgICAgICBjb25zdCBjb2xvckRyb3Bkb3duID0gbmV3IERyb3Bkb3duTWVudShjb2xvckJ1dHRvbiwgY29sb3JEcm9wZG93bkxpc3QpO1xyXG5cclxuICAgICAgICBjb2xvckRyb3Bkb3duTGlzdC5hcHBlbmQobmV3IERyb3Bkb3duTWVudUxpc3RJdGVtKGNvbG9yRHJvcGRvd25MaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiaGlsaXRlQ29sb3JcIiwgXCIjRkRERURFXCIsIG5ldyBDb2xvckljb24oXCIjRkRERURFXCIpLmh0bWxFbGVtZW50LCBcIlJlZFwiKSk7XHJcbiAgICAgICAgY29sb3JEcm9wZG93bkxpc3QuYXBwZW5kKG5ldyBEcm9wZG93bk1lbnVMaXN0SXRlbShjb2xvckRyb3Bkb3duTGlzdCwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImhpbGl0ZUNvbG9yXCIsIFwiI0Q3RjdEQ1wiLCBuZXcgQ29sb3JJY29uKFwiI0Q3RjdEQ1wiKS5odG1sRWxlbWVudCwgXCJHcmVlblwiKSk7XHJcbiAgICAgICAgY29sb3JEcm9wZG93bkxpc3QuYXBwZW5kKG5ldyBEcm9wZG93bk1lbnVMaXN0SXRlbShjb2xvckRyb3Bkb3duTGlzdCwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImhpbGl0ZUNvbG9yXCIsIFwiI0Q5RURGNlwiLCBuZXcgQ29sb3JJY29uKFwiI0Q5RURGNlwiKS5odG1sRWxlbWVudCwgXCJCbHVlXCIpKTtcclxuICAgICAgICBjb2xvckRyb3Bkb3duTGlzdC5hcHBlbmQobmV3IERyb3Bkb3duTWVudUxpc3RJdGVtKGNvbG9yRHJvcGRvd25MaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiaGlsaXRlQ29sb3JcIiwgXCIjRkFGNEQxXCIsIG5ldyBDb2xvckljb24oXCIjRkFGNEQxXCIpLmh0bWxFbGVtZW50LCBcIlllbGxvd1wiKSk7XHJcbiAgICAgICAgY29sb3JEcm9wZG93bkxpc3QuYXBwZW5kKG5ldyBEcm9wZG93bk1lbnVMaXN0SXRlbShjb2xvckRyb3Bkb3duTGlzdCwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImhpbGl0ZUNvbG9yXCIsIFwiI0UxRTBFMFwiLCBuZXcgQ29sb3JJY29uKFwiI0UxRTBFMFwiKS5odG1sRWxlbWVudCwgXCJHcmV5XCIpKTtcclxuICAgICAgICBjb2xvckRyb3Bkb3duTGlzdC5hcHBlbmQobmV3IERyb3Bkb3duTWVudUxpc3RJdGVtKGNvbG9yRHJvcGRvd25MaXN0LCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlLmdldEluc3RhbmNlKCksIFwiaGlsaXRlQ29sb3JcIiwgXCJ0cmFuc3BhcmVudFwiLCBuZXcgQ29sb3JJY29uKFwidHJhbnNwYXJlbnRcIikuaHRtbEVsZW1lbnQsIFwiTm9uZVwiKSk7XHJcblxyXG4gICAgICAgIHJldHVybiBjb2xvckRyb3Bkb3duO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBtb3JlT3B0aW9uc0Ryb3Bkb3duKCk6IERyb3Bkb3duTWVudSB7XHJcblxyXG4gICAgICAgIGNvbnN0IGljb24gPSBuZXcgU1ZHSWNvbihcImljb24tbWF0ZXJpYWwtbW9yZVwiLCBcIjI0XCIsIFwiMjRcIik7XHJcblxyXG4gICAgICAgIGNvbnN0IG1vcmVPcHRpb25zTGlzdCA9IG5ldyBEcm9wZG93bk1lbnVMaXN0KFwibW9yZVRleHRPcHRpb25TZWxlY3RcIiwgXCJNb3JlIG9wdGlvbnNcIik7XHJcbiAgICAgICAgY29uc3QgbW9yZU9wdGlvbnNCdXR0b24gPSBuZXcgRHJvcGRvd25NZW51QnV0dG9uKFwibW9yZVRleHRPcHRpb25CdXR0b25cIiwgaWNvbi5odG1sRWxlbWVudCwgbW9yZU9wdGlvbnNMaXN0LCBmYWxzZSk7XHJcbiAgICAgICAgY29uc3QgbW9yZU9wdGlvbnNEcm9wZG93biA9IG5ldyBEcm9wZG93bk1lbnUobW9yZU9wdGlvbnNCdXR0b24sIG1vcmVPcHRpb25zTGlzdCk7XHJcblxyXG4gICAgICAgIG1vcmVPcHRpb25zTGlzdC5hcHBlbmQobmV3IERyb3Bkb3duTWVudUxpc3RJdGVtKG1vcmVPcHRpb25zTGlzdCwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpLCBcImR1cGxpY2F0ZVwiLCBudWxsLCBTVkdJY29ucy5kdXBsaWNhdGUuaHRtbEVsZW1lbnQsIFwiRHVwbGljYXRlXCIpKTtcclxuICAgICAgICBtb3JlT3B0aW9uc0xpc3QuYXBwZW5kKG5ldyBEcm9wZG93bk1lbnVMaXN0SXRlbShtb3JlT3B0aW9uc0xpc3QsIEJsb2NrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0SW5zdGFuY2UoKSwgXCJkZWxldGVcIiwgbnVsbCwgU1ZHSWNvbnMuZGVsZXRlLmh0bWxFbGVtZW50LCBcIkRlbGV0ZVwiKSk7XHJcblxyXG4gICAgICAgIHJldHVybiBtb3JlT3B0aW9uc0Ryb3Bkb3duO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBTVkdJY29uczogYW55ID0ge1xyXG5cclxuICAgIHBhcmFncmFwaDogbmV3IFNWR0ljb24oXCJpY29uLXdvcmRwcmVzcy1wYXJhZ3JhcGhcIiwgXCIyMlwiLCBcIjIyXCIpLFxyXG4gICAgYl9saXN0OiBuZXcgU1ZHSWNvbihcImljb24td29yZHByZXNzLWJ1bGxldGVkLWxpc3RcIiwgXCIyMlwiLCBcIjIyXCIpLFxyXG4gICAgbl9saXN0OiBuZXcgU1ZHSWNvbihcImljb24td29yZHByZXNzLW51bWJlcmVkLWxpc3RcIiwgXCIyMlwiLCBcIjIyXCIpLFxyXG4gICAgY29kZTogbmV3IFNWR0ljb24oXCJpY29uLXdvcmRwcmVzcy1udW1iZXJlZC1saXN0XCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIHF1b3RlOiBuZXcgU1ZHSWNvbihcImljb24td29yZHByZXNzLXF1b3RlXCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGhlYWQxOiBuZXcgU1ZHSWNvbihcImljb24tanVsaWEtaGVhZC0xXCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGhlYWQyOiBuZXcgU1ZHSWNvbihcImljb24tanVsaWEtaGVhZC0yXCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGhlYWQzOiBuZXcgU1ZHSWNvbihcImljb24tanVsaWEtaGVhZC0zXCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGhlYWQ0OiBuZXcgU1ZHSWNvbihcImljb24tanVsaWEtaGVhZC00XCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGhlYWQ1OiBuZXcgU1ZHSWNvbihcImljb24tanVsaWEtaGVhZC01XCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGhlYWQ2OiBuZXcgU1ZHSWNvbihcImljb24tanVsaWEtaGVhZC02XCIsIFwiMjJcIiwgXCIyMlwiKSxcclxuICAgIGR1cGxpY2F0ZTogbmV3IFNWR0ljb24oXCJpY29uLW1hdGVyaWFsLWR1cGxpY2F0ZVwiLCBcIjIyXCIsIFwiMjJcIiksXHJcbiAgICBkZWxldGU6IG5ldyBTVkdJY29uKFwiaWNvbi1tYXRlcmlhbC10cmFzaFwiLCBcIjIyXCIsIFwiMjJcIiksXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZsb2F0aW5nVG9vbGJhckJ1aWxkZXI7IiwiaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiO1xyXG5pbXBvcnQgU1ZHSWNvbiBmcm9tIFwiLi4vY29tbW9uL1NWR0ljb25cIjtcclxuaW1wb3J0IHsgQkxPQ0tfT1BFUkFUSU9OUyB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9ibG9jay1vcGVyYXRpb25zL0Jsb2NrT3BlcmF0aW9uc1NlcnZpY2VcIjtcclxuaW1wb3J0IElCbG9ja09wZXJhdGlvbnNTZXJ2aWNlIGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9ibG9jay1vcGVyYXRpb25zL0lCbG9ja09wZXJhdGlvbnNTZXJ2aWNlXCI7XHJcbmltcG9ydCBTZXJ2aWNlUHJvdmlkZXIgZnJvbSBcIi4uLy4uL3NlcnZpY2VzL3NlcnZpY2UtcHJvdmlkZXIvU2VydmljZVByb3ZpZGVyXCI7XHJcblxyXG5jbGFzcyBBZGRCbG9ja0J1dHRvbiBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBibG9ja09wZXJhdGlvbnNTZXJ2aWNlOiBJQmxvY2tPcGVyYXRpb25zU2VydmljZTtcclxuXHJcbiAgICBkaXNwbGF5OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoe30pO1xyXG4gICAgICAgIHRoaXMuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICB0aGlzLmJsb2NrT3BlcmF0aW9uc1NlcnZpY2UgPSBTZXJ2aWNlUHJvdmlkZXIuZ2V0SW5zdGFuY2UoKS5nZXRJbnN0YW5jZU9mKFwiSUJsb2NrT3BlcmF0aW9uc1NlcnZpY2VcIik7XHJcbiAgICAgICAgdGhpcy5hdHRhY2hFdmVudHMoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuICAgICAgICBjb25zdCBodG1sRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcblxyXG4gICAgICAgIGh0bWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJhZGQtYmxvY2tcIiwgXCJibG9jay1vcGVyYXRpb25cIik7XHJcblxyXG4gICAgICAgIGNvbnN0IHN2ZyA9IG5ldyBTVkdJY29uKFwiaWNvbi1hZGQtYmxvY2tcIiwgXCIyNFwiLCBcIjI0XCIpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZChzdmcuaHRtbEVsZW1lbnQpO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgYXR0YWNoRXZlbnRzKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaHRtbEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5ibG9ja09wZXJhdGlvbnNTZXJ2aWNlLmV4ZWNDb21tYW5kKEJMT0NLX09QRVJBVElPTlMuQ1JFQVRFX0RFRkFVTFRfQkxPQ0spO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFkZEJsb2NrQnV0dG9uOyIsImltcG9ydCBJQmxvY2tPcGVyYXRpb25zU2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYmxvY2stb3BlcmF0aW9ucy9JQmxvY2tPcGVyYXRpb25zU2VydmljZVwiO1xyXG5pbXBvcnQgQmFzZVVJQ29tcG9uZW50IGZyb20gXCIuLi9jb21tb24vQmFzZVVJQ29tcG9uZW50XCI7XHJcbmltcG9ydCBBZGRCbG9ja0J1dHRvbiBmcm9tIFwiLi9BZGRCbG9ja0J1dHRvblwiO1xyXG5cclxuY2xhc3MgQWRkQmxvY2sgZXh0ZW5kcyBCYXNlVUlDb21wb25lbnQge1xyXG5cclxuICAgIGRpc3BsYXk6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAgICAgc3VwZXIoe30pO1xyXG5cclxuICAgICAgICB0aGlzLmRpc3BsYXkgPSBcImJsb2NrXCJcclxuICAgIH1cclxuXHJcbiAgICBpbml0KCk6IEhUTUxFbGVtZW50IHtcclxuXHJcbiAgICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiYWRkLWJsb2NrLXdyYXBwZXJcIik7XHJcblxyXG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IG5ldyBBZGRCbG9ja0J1dHRvbigpO1xyXG5cclxuICAgICAgICBodG1sRWxlbWVudC5hcHBlbmRDaGlsZChidXR0b24uaHRtbEVsZW1lbnQpO1xyXG5cclxuICAgICAgICByZXR1cm4gaHRtbEVsZW1lbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFkZEJsb2NrOyIsImltcG9ydCBFbGVtZW50RmFjdG9yeVNlcnZpY2UgZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2VsZW1lbnQtZmFjdG9yeS9FbGVtZW50RmFjdG9yeVNlcnZpY2VcIjtcclxuaW1wb3J0IEJhc2VVSUNvbXBvbmVudCBmcm9tIFwiLi4vY29tbW9uL0Jhc2VVSUNvbXBvbmVudFwiO1xyXG5pbXBvcnQgSUVsZW1lbnRGYWN0b3J5U2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZWxlbWVudC1mYWN0b3J5L0lFbGVtZW50RmFjdG9yeVNlcnZpY2VcIjtcclxuaW1wb3J0IFNlcnZpY2VQcm92aWRlciBmcm9tIFwiLi4vLi4vc2VydmljZXMvc2VydmljZS1wcm92aWRlci9TZXJ2aWNlUHJvdmlkZXJcIjtcclxuXHJcbmNsYXNzIEVkaXRvciBleHRlbmRzIEJhc2VVSUNvbXBvbmVudCB7XHJcblxyXG4gICAgZGlzcGxheTogc3RyaW5nO1xyXG4gICAgZWRpdG9ySWQ6IHN0cmluZyA9IFwiam9oYW5uZXNFZGl0b3JcIjtcclxuXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnRGYWN0b3J5U2VydmljZTogSUVsZW1lbnRGYWN0b3J5U2VydmljZTtcclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogRWRpdG9yO1xyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgICAgIGlmIChFZGl0b3IuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVXNlIEJsb2NrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0SW5zdGFuY2UoKSB0byBnZXQgaW5zdGFuY2UuXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZWRpdG9ySWQgPSBcImpvaGFubmVzRWRpdG9yXCI7XHJcblxyXG4gICAgICAgIHN1cGVyKHtcclxuICAgICAgICAgICAgZWRpdG9ySWQ6IGVkaXRvcklkXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuZWxlbWVudEZhY3RvcnlTZXJ2aWNlID0gU2VydmljZVByb3ZpZGVyLmdldEluc3RhbmNlKCkuZ2V0SW5zdGFuY2VPZihcIklFbGVtZW50RmFjdG9yeVNlcnZpY2VcIik7XHJcbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgIHRoaXMuYXR0YWNoRXZlbnRzKCk7XHJcblxyXG4gICAgICAgIEVkaXRvci5pbnN0YW5jZSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiBIVE1MRWxlbWVudCB7XHJcblxyXG4gICAgICAgIGNvbnN0IGh0bWxFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5wcm9wcy5lZGl0b3JJZCkgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuXHJcbiAgICAgICAgaWYgKGh0bWxFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50Py5jbGFzc0xpc3QuYWRkKFwiam9oYW5uZXMtZWRpdG9yXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGh0bWxFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcclxuXHJcbiAgICAgICAgaWYgKCFFZGl0b3IuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgRWRpdG9yLmluc3RhbmNlID0gbmV3IEVkaXRvcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIEVkaXRvci5pbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBhdHRhY2hFdmVudHMoKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZWRpdG9ySWQpO1xyXG5cclxuICAgICAgICBjb250YWluZXI/LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIChldmVudCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IChldmVudC50YXJnZXQgYXMgSFRNTEVsZW1lbnQpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xvc2VzdCgnLmJsb2NrJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXBwZW5kRHJhZ0hhbmRsZXIoZWxlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgIC8vRm9jdXMgb24gdGhlIGZpcnN0IHBhcmFncmFwaFxyXG4gICAgICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnbG9hZGluZycpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0UGFyYWdyYXBoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNqb2hhbm5lc0VkaXRvciA+IC5jb250ZW50IC5ibG9jayBwXCIpIGFzIEhUTUxFbGVtZW50O1xyXG4gICAgICAgICAgICAgICAgaWYgKGZpcnN0UGFyYWdyYXBoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlyc3RQYXJhZ3JhcGguZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgZmlyc3RQYXJhZ3JhcGggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2pvaGFubmVzRWRpdG9yID4gLmNvbnRlbnQgLmJsb2NrIHBcIikgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGlmIChmaXJzdFBhcmFncmFwaCkge1xyXG4gICAgICAgICAgICAgICAgZmlyc3RQYXJhZ3JhcGguZm9jdXMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhcHBlbmREcmFnSGFuZGxlcihlbGVtZW50OiBIVE1MRWxlbWVudCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHBhcmVudCA9IGVsZW1lbnQuY2xvc2VzdCgnLmJsb2NrJyk7XHJcbiAgICAgICAgbGV0IGRyYWdIYW5kbGVyID0gcGFyZW50Py5xdWVyeVNlbGVjdG9yKFwiLmRyYWctaGFuZGxlclwiKTtcclxuXHJcbiAgICAgICAgaWYgKCFkcmFnSGFuZGxlciAmJiBwYXJlbnQpIHtcclxuICAgICAgICAgICAgZHJhZ0hhbmRsZXIgPSB0aGlzLmVsZW1lbnRGYWN0b3J5U2VydmljZS5jcmVhdGUoRWxlbWVudEZhY3RvcnlTZXJ2aWNlLkVMRU1FTlRfVFlQRVMuRFJBR19IQU5ETEVfQlVUVE9OKTtcclxuICAgICAgICAgICAgcGFyZW50LnByZXBlbmQoZHJhZ0hhbmRsZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVEcmFnSGFuZGxlcihlbGVtZW50OiBIVE1MRWxlbWVudCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHBhcmVudCA9IGVsZW1lbnQuY2xvc2VzdCgnLmJsb2NrJyk7XHJcblxyXG4gICAgICAgIGlmIChwYXJlbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgZHJhZ0hhbmRsZXIgPSBwYXJlbnQucXVlcnlTZWxlY3RvcihcIi5kcmFnLWhhbmRsZXJcIik7XHJcbiAgICAgICAgICAgIGRyYWdIYW5kbGVyPy5yZW1vdmUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXh0cmFjdENvbnRlbnQoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIEV4Y2VwdGlvblwiKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRWRpdG9yOyIsImltcG9ydCBFZGl0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvZWRpdG9yL0VkaXRvclwiO1xyXG5pbXBvcnQgRWxlbWVudEZhY3RvcnlTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9lbGVtZW50LWZhY3RvcnkvRWxlbWVudEZhY3RvcnlTZXJ2aWNlXCI7XHJcbmltcG9ydCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9ibG9jay1vcGVyYXRpb25zL0Jsb2NrT3BlcmF0aW9uc1NlcnZpY2VcIjtcclxuaW1wb3J0IFNlcnZpY2VQcm92aWRlciBmcm9tIFwiLi4vc2VydmljZXMvc2VydmljZS1wcm92aWRlci9TZXJ2aWNlUHJvdmlkZXJcIjtcclxuaW1wb3J0IFRleHRPcGVyYXRpb25TZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy90ZXh0LW9wZXJhdGlvbnMvVGV4dE9wZXJhdGlvblNlcnZpY2VcIjtcclxuaW1wb3J0IFF1aWNrTWVudUJ1aWxkZXIgZnJvbSBcIi4vUXVpY2tNZW51QnVpbGRlclwiO1xyXG5pbXBvcnQgRmxvYXRpbmdUb29sYmFyQnVpbGRlciBmcm9tIFwiLi9GbG9hdGluZ1Rvb2xiYXJCdWlsZGVyXCI7XHJcbmltcG9ydCBGbG9hdGluZ1Rvb2xiYXIgZnJvbSBcIi4uL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci9GbG9hdGluZ1Rvb2xiYXJcIjtcclxuaW1wb3J0IFF1aWNrTWVudSBmcm9tIFwiLi4vY29tcG9uZW50cy9xdWljay1tZW51L1F1aWNrTWVudVwiO1xyXG5pbXBvcnQgQWRkQmxvY2sgZnJvbSBcIi4uL2NvbXBvbmVudHMvYWRkLWJsb2NrL0FkZEJsb2NrXCI7XHJcblxyXG5jbGFzcyBVSUJ1aWxkZXIge1xyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBVSUJ1aWxkZXI7XHJcblxyXG4gICAgcHJpdmF0ZSBlZGl0b3I6IEVkaXRvcjtcclxuICAgIHByaXZhdGUgYWRkQmxvY2s6IEFkZEJsb2NrO1xyXG4gICAgcHJpdmF0ZSBmbG9hdGluZ1Rvb2xiYXI6IEZsb2F0aW5nVG9vbGJhcjtcclxuICAgIHByaXZhdGUgcXVpY2tNZW51OiBRdWlja01lbnU7XHJcblxyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoXHJcblxyXG4gICAgICAgIGVkaXRvcjogRWRpdG9yLFxyXG4gICAgICAgIGFkZEJvY2s6IEFkZEJsb2NrLFxyXG4gICAgICAgIGZsb2F0aW5nVG9vbGJhcjogRmxvYXRpbmdUb29sYmFyLFxyXG4gICAgICAgIHF1aWNrTWVudTogUXVpY2tNZW51KSB7XHJcblxyXG4gICAgICAgIGlmIChVSUJ1aWxkZXIuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmVkaXRvciA9IGVkaXRvcjtcclxuICAgICAgICB0aGlzLmFkZEJsb2NrID0gYWRkQm9jaztcclxuICAgICAgICB0aGlzLmZsb2F0aW5nVG9vbGJhciA9IGZsb2F0aW5nVG9vbGJhcjtcclxuICAgICAgICB0aGlzLnF1aWNrTWVudSA9IHF1aWNrTWVudTtcclxuXHJcbiAgICAgICAgVUlCdWlsZGVyLmluc3RhbmNlID0gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYnVpbGQoc2VydmljZXM/OiBNYXA8c3RyaW5nLCBhbnk+KTogVUlCdWlsZGVyIHtcclxuXHJcbiAgICAgICAgaWYgKFVJQnVpbGRlci5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gVUlCdWlsZGVyLmluc3RhbmNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgc2VydmljZVByb3ZpZGVyID0gU2VydmljZVByb3ZpZGVyLmdldEluc3RhbmNlKCk7XHJcblxyXG4gICAgICAgIC8vIEluaXRpYWxpemVyIGFsbCBzZXJ2aWNlIGJlZm9yZSBhbnkgY29tcG9uZW50XHJcbiAgICAgICAgaWYgKHNlcnZpY2VzKSB7XHJcbiAgICAgICAgICAgIHNlcnZpY2VQcm92aWRlci5yZXNldCgpO1xyXG4gICAgICAgICAgICBzZXJ2aWNlUHJvdmlkZXIucmVnaXN0ZXJTZXJ2aWNlcyhzZXJ2aWNlcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgIC8vUmVnaXN0ZXJpbmcgYWxsIGF2YWlsYWJsZSBzZXJ2aWNlc1xyXG4gICAgICAgICAgICBzZXJ2aWNlUHJvdmlkZXIucmVnaXN0ZXJTZXJ2aWNlKFwiSUJsb2NrT3BlcmF0aW9uc1NlcnZpY2VcIiwgQmxvY2tPcGVyYXRpb25zU2VydmljZS5nZXRJbnN0YW5jZSgpKTtcclxuICAgICAgICAgICAgc2VydmljZVByb3ZpZGVyLnJlZ2lzdGVyU2VydmljZShcIklFbGVtZW50RmFjdG9yeVNlcnZpY2VcIiwgRWxlbWVudEZhY3RvcnlTZXJ2aWNlLmdldEluc3RhbmNlKCkpO1xyXG4gICAgICAgICAgICBzZXJ2aWNlUHJvdmlkZXIucmVnaXN0ZXJTZXJ2aWNlKFwiSVRleHRPcGVyYXRpb25TZXJ2aWNlXCIsIFRleHRPcGVyYXRpb25TZXJ2aWNlLmdldEluc3RhbmNlKCkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZWRpdG9yID0gRWRpdG9yLmdldEluc3RhbmNlKCk7XHJcbiAgICAgICAgY29uc3QgYWRkQmxvY2sgPSBuZXcgQWRkQmxvY2soKTtcclxuICAgICAgICBjb25zdCBmbG9hdGluZ1Rvb2xiYXIgPSBGbG9hdGluZ1Rvb2xiYXJCdWlsZGVyLmJ1aWxkKCk7XHJcbiAgICAgICAgY29uc3QgcXVpY2tNZW51ID0gUXVpY2tNZW51QnVpbGRlci5idWlsZCgpO1xyXG5cclxuICAgICAgICBjb25zdCBidWlsZGVyID0gbmV3IFVJQnVpbGRlcihlZGl0b3IsIGFkZEJsb2NrLCBmbG9hdGluZ1Rvb2xiYXIsIHF1aWNrTWVudSk7XHJcblxyXG4gICAgICAgIHJldHVybiBidWlsZGVyO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KCk6IEVkaXRvciB7XHJcblxyXG4gICAgICAgIHRoaXMuZWRpdG9yLmh0bWxFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuYWRkQmxvY2suaHRtbEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuZWRpdG9yLmh0bWxFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuZmxvYXRpbmdUb29sYmFyLmh0bWxFbGVtZW50KTtcclxuICAgICAgICB0aGlzLmVkaXRvci5odG1sRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLnF1aWNrTWVudS5odG1sRWxlbWVudCk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmVkaXRvcjtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVUlCdWlsZGVyOyIsImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdIZWFkaW5nRWxlbWVudChudW1iZXIgPSAyKSB7XG5cbiAgICBsZXQgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGgke251bWJlcn1gKTtcbiAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10eXBlJywgYGgke251bWJlcn1gKTtcbiAgICBuZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2pvaGFubmVzLWNvbnRlbnQtZWxlbWVudCcpO1xuICAgIG5ld0VsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc3dpdHRhYmxlJyk7XG4gICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdmb2N1c2FibGUnKTtcbiAgICBuZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2ZvY3VzJyk7XG4gICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdrZXktdHJpZ2dlcicpO1xuXG4gICAgbmV3RWxlbWVudC5jb250ZW50RWRpdGFibGUgPSB0cnVlO1xuXG4gICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtcGxhY2Vob2xkZXInLCBgSGVhZGluZyAke251bWJlcn1gKTtcblxuICAgIHJldHVybiBuZXdFbGVtZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmV3UGFyYWdyYXBoRWxlbWVudCh0ZXh0KSB7XG5cbiAgICBsZXQgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10eXBlJywgJ3AnKTtcbiAgICBuZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2pvaGFubmVzLWNvbnRlbnQtZWxlbWVudCcpO1xuICAgIG5ld0VsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc3dpdHRhYmxlJyk7XG4gICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdmb2N1c2FibGUnKTtcbiAgICBuZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2tleS10cmlnZ2VyJyk7XG5cbiAgICBuZXdFbGVtZW50LmNvbnRlbnRFZGl0YWJsZSA9IHRydWU7XG5cbiAgICBuZXdFbGVtZW50LmlubmVyVGV4dCA9IHRleHQgfHwgXCJcIjtcblxuICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLXBsYWNlaG9sZGVyJywgJ1dyaXRlIHNvbWV0aGluZyBvciB0eXBlIC8gKHNsYXNoKSB0byBjaG9vc2UgYSBibG9jay4uLicpO1xuXG4gICAgcmV0dXJuIG5ld0VsZW1lbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdEcmFnZ2FibGVQYXJhZ3JhcGhFbGVtZW50KCkge1xuXG4gICAgbGV0IG5ld0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxldCBuZXdFbGVtZW50ID0gY3JlYXRlTmV3UGFyYWdyYXBoRWxlbWVudCgpO1xuXG4gICAgbGV0IG5ld0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIG5ld0J1dHRvbi5pbm5lckhUTUwgPSAnPHN2ZyB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiBmaWxsPVwiY3VycmVudENvbG9yXCI+PHVzZSBocmVmPVwiI2ljb24tbWF0ZXJpYWwtZHJhZ1wiPjwvdXNlPjwvc3ZnPic7XG5cbiAgICBuZXdEaXYuYXBwZW5kQ2hpbGQobmV3QnV0dG9uKTtcbiAgICBuZXdEaXYuYXBwZW5kQ2hpbGQobmV3RWxlbWVudCk7XG5cbiAgICBuZXdEaXYuY2xhc3NMaXN0LmFkZCgnYmxvY2snKTtcbiAgICBuZXdEaXYuY2xhc3NMaXN0LmFkZCgnZGVsZXRhYmxlJyk7XG4gICAgbmV3QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2RyYWctaGFuZGxlcicpO1xuICAgIG5ld0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdidXR0b24tcmVzZXQnKTtcbiAgICBuZXdCdXR0b24uZHJhZ2dhYmxlID0gdHJ1ZTtcblxuICAgIHJldHVybiBuZXdEaXY7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdMaXN0RWxlbWVudCh0ZXh0LCB0eXBlID0gJ3VsJykge1xuICAgIGNvbnN0IG5ld0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xuICAgIG5ld0xpc3QuY2xhc3NMaXN0LmFkZCgnam9oYW5uZXMtY29udGVudC1lbGVtZW50Jyk7XG4gICAgbmV3TGlzdC5jbGFzc0xpc3QuYWRkKCdzd2l0dGFibGUnKTtcbiAgICBuZXdMaXN0LmNsYXNzTGlzdC5hZGQoJ2xpc3QnKTtcblxuICAgIGlmICh0eXBlID09ICd1bCcpIHtcbiAgICAgICAgbmV3TGlzdC5zZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScsICdidWxsZXRlZC1saXN0Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbmV3TGlzdC5zZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScsICdudW1iZXJlZC1saXN0Jyk7XG4gICAgfVxuXG4gICAgY29uc3QgaW5pdGlhbEl0ZW0gPSBjcmVhdGVOZXdMaUVsZW1lbnQodGV4dCk7XG5cbiAgICBuZXdMaXN0LmFwcGVuZENoaWxkKGluaXRpYWxJdGVtKTtcblxuICAgIHJldHVybiBuZXdMaXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmV3VG9kb0xpc3RFbGVtZW50KHRleHQsIHR5cGUgPSAndWwnKSB7XG4gICAgY29uc3QgbmV3TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodHlwZSk7XG4gICAgbmV3TGlzdC5jbGFzc0xpc3QuYWRkKCdqb2hhbm5lcy1jb250ZW50LWVsZW1lbnQnKTtcbiAgICBuZXdMaXN0LmNsYXNzTGlzdC5hZGQoJ2NoZWNrYm94LWxpc3QnKTtcbiAgICBuZXdMaXN0LmNsYXNzTGlzdC5hZGQoJ2xpc3QnKTtcbiAgICBuZXdMaXN0LnNldEF0dHJpYnV0ZSgnZGF0YS10eXBlJywgJ3RvZG8tbGlzdCcpO1xuXG4gICAgY29uc3QgaW5pdGlhbEl0ZW0gPSBjcmVhdGVOZXdDaGVja2JveExpRWxlbWVudCh0ZXh0KTtcblxuICAgIG5ld0xpc3QuYXBwZW5kQ2hpbGQoaW5pdGlhbEl0ZW0pO1xuXG4gICAgcmV0dXJuIG5ld0xpc3Q7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5ld0xpRWxlbWVudCh0ZXh0ID0gJycpIHtcblxuICAgIGxldCBpbml0aWFsSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG5cbiAgICBpbml0aWFsSXRlbS5jbGFzc0xpc3QuYWRkKCdmb2N1c2FibGUnKTtcbiAgICBpbml0aWFsSXRlbS5jbGFzc0xpc3QuYWRkKCdkZWxldGFibGUnKTtcbiAgICBpbml0aWFsSXRlbS5jbGFzc0xpc3QuYWRkKCdlZGl0YWJsZScpO1xuICAgIGluaXRpYWxJdGVtLmNsYXNzTGlzdC5hZGQoJ2ZvY3VzJyk7XG4gICAgaW5pdGlhbEl0ZW0uY2xhc3NMaXN0LmFkZCgna2V5LXRyaWdnZXInKTtcbiAgICBpbml0aWFsSXRlbS5jbGFzc0xpc3QuYWRkKCdsaXN0LWl0ZW0nKTtcblxuICAgIGluaXRpYWxJdGVtLmlubmVyVGV4dCA9IHRleHQ7XG5cbiAgICBpbml0aWFsSXRlbS5jb250ZW50RWRpdGFibGUgPSB0cnVlO1xuICAgIGluaXRpYWxJdGVtLnNldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicsICdJdGVtJyk7XG5cbiAgICByZXR1cm4gaW5pdGlhbEl0ZW07XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5ld0NoZWNrYm94TGlFbGVtZW50KHRleHQgPSAnJykge1xuXG4gICAgbGV0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICBsaS5jbGFzc0xpc3QuYWRkKCdkZWxldGFibGUnKTtcbiAgICBsaS5jbGFzc0xpc3QuYWRkKCdsaXN0LWl0ZW0nKTtcblxuICAgIGluaXRpYWxJdGVtLmNsYXNzTGlzdC5hZGQoJ2tleS10cmlnZ2VyJyk7XG5cbiAgICBsZXQgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGNoZWNrYm94LnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuXG4gICAgbGV0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgc3Bhbi50ZXh0Q29udGVudCA9IHRleHQgfHwgXCJcIjtcbiAgICBzcGFuLnNldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicsICdUby1kbycpO1xuICAgIHNwYW4uY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcblxuICAgIHNwYW4uY2xhc3NMaXN0LmFkZCgnZm9jdXNhYmxlJyk7XG4gICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCdlZGl0YWJsZScpO1xuICAgIHNwYW4uY2xhc3NMaXN0LmFkZCgnZm9jdXMnKTtcblxuICAgIGxpLmFwcGVuZENoaWxkKGNoZWNrYm94KTtcbiAgICBsaS5hcHBlbmRDaGlsZChzcGFuKTtcblxuICAgIHJldHVybiBsaTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5ld1NlcGFyYXRvckVsZW1lbnQoKSB7XG4gICAgbGV0IG5ld0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdocicpO1xuICAgIHJldHVybiBuZXdFbGVtZW50O1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdRdW90ZUVsZW1lbnQodGV4dCkge1xuXG4gICAgY29uc3QgcXVvdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdibG9ja3F1b3RlJyk7XG4gICAgcXVvdGUuY2xhc3NMaXN0LmFkZCgnc3dpdHRhYmxlJyk7XG4gICAgcXVvdGUuY2xhc3NMaXN0LmFkZCgnam9oYW5uZXMtY29udGVudC1lbGVtZW50Jyk7XG4gICAgcXVvdGUuc2V0QXR0cmlidXRlKCdkYXRhLXR5cGUnLCAncXVvdGUnKTtcblxuICAgIGNvbnN0IHAgPSBjcmVhdGVOZXdOb1N3aXR0YWJsZVBhcmFncmFwaEVsZW1lbnQodGV4dCk7XG4gICAgY29uc3QgY2l0ZSA9IGNyZWF0ZU5ld05vU3dpdHRhYmxlQ2l0ZUVsZW1lbnQoKTtcblxuICAgIHF1b3RlLmFwcGVuZENoaWxkKHApO1xuICAgIHF1b3RlLmFwcGVuZENoaWxkKGNpdGUpO1xuXG4gICAgcmV0dXJuIHF1b3RlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVOZXdOb1N3aXR0YWJsZVBhcmFncmFwaEVsZW1lbnQodGV4dCkge1xuXG4gICAgbGV0IG5ld0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdmb2N1cycpO1xuICAgIG5ld0VsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZm9jdXNhYmxlJyk7XG4gICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdlZGl0YWJsZScpO1xuICAgIG5ld0VsZW1lbnQuY2xhc3NMaXN0LmFkZCgna2V5LXRyaWdnZXInKTtcblxuICAgIG5ld0VsZW1lbnQuY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcblxuICAgIG5ld0VsZW1lbnQuaW5uZXJUZXh0ID0gdGV4dCB8fCBcIlwiO1xuXG4gICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtcGxhY2Vob2xkZXInLCAn4oCdVG8gYmUsIG9yIG5vdCB0byBiZSwgdGhhdCBpcyB0aGUgcXVlc3Rpb27igJ0nKTtcblxuICAgIHJldHVybiBuZXdFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVOZXdOb1N3aXR0YWJsZUNpdGVFbGVtZW50KHRleHQpIHtcblxuICAgIGxldCBuZXdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2l0ZScpO1xuICAgIG5ld0VsZW1lbnQuY2xhc3NMaXN0LmFkZCgnam9oYW5uZXMtY29udGVudC1lbGVtZW50Jyk7XG4gICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdmb2N1c2FibGUnKTtcbiAgICBuZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2RlbGV0YWJsZScpO1xuICAgIG5ld0VsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZWRpdGFibGUnKTtcblxuICAgIG5ld0VsZW1lbnQuY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcblxuICAgIG5ld0VsZW1lbnQuaW5uZXJUZXh0ID0gdGV4dCB8fCBcIlwiO1xuXG4gICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtcGxhY2Vob2xkZXInLCAn4oCUIFNvY3JhdGVzJyk7XG5cbiAgICByZXR1cm4gbmV3RWxlbWVudDtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2hlY2tlZFNWRygpIHtcbiAgICBsZXQgc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJzdmdcIik7XG4gICAgc3ZnLmNsYXNzTGlzdC5hZGQoJ2NoZWNrZWQtc3ZnJyk7XG4gICAgbGV0IHVzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidXNlXCIpO1xuICAgIHVzZS5zZXRBdHRyaWJ1dGVOUyhcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwgXCJocmVmXCIsIFwiI2ljb24tbWF0ZXJpYWwtc21hbGwtY2hlY2tcIik7XG5cbiAgICBzdmcuYXBwZW5kQ2hpbGQodXNlKTtcbiAgICBzdmcuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxNicpO1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxNicpO1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnY3VycmVudENvbG9yJyk7XG5cbiAgICByZXR1cm4gc3ZnO1xufSIsIi8vVE9ETyB1c2UgY29tbWFuZHNcbmltcG9ydCBCbG9ja09wZXJhdGlvbnNTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL2Jsb2NrLW9wZXJhdGlvbnMvQmxvY2tPcGVyYXRpb25zU2VydmljZSc7XG5pbXBvcnQgRWxlbWVudEZhY3RvcnlTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL2VsZW1lbnQtZmFjdG9yeS9FbGVtZW50RmFjdG9yeVNlcnZpY2UnO1xuaW1wb3J0IFF1aWNrTWVudUJ1aWxkZXIgZnJvbSBcIi4uL2J1aWxkZXJzL1F1aWNrTWVudUJ1aWxkZXJcIjtcbmltcG9ydCBGbG9hdGluZ1Rvb2xiYXJCdWlsZGVyIGZyb20gXCIuLi9idWlsZGVycy9GbG9hdGluZ1Rvb2xiYXJCdWlsZGVyXCI7XG5pbXBvcnQgQWRkQmxvY2sgZnJvbSBcIi4uL2NvbXBvbmVudHMvYWRkLWJsb2NrL0FkZEJsb2NrXCI7XG5pbXBvcnQgaWNvbnNTVkcgZnJvbSAnLi4vYXNzZXRzL2ltZy9pY29ucy5zdmcnO1xuXG5pbXBvcnQgVUlCdWlsZGVyIGZyb20gXCIuLi9idWlsZGVycy9VSUJ1aWxkZXJcIjtcblxuXG4vL0ZvY3VzIG9uIFAgd2hlbiBsb2FkXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGVkaXRvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qb2hhbm5lcy1lZGl0b3InKTtcblxuICAgIGlmIChlZGl0b3IpIHtcbiAgICAgICAgbGV0IGJsb2NrcyA9IGVkaXRvci5xdWVyeVNlbGVjdG9yQWxsKCcuYmxvY2snKTtcblxuICAgICAgICBpZiAoYmxvY2tzLmxlbmd0aCA9PSAxKSB7XG5cbiAgICAgICAgICAgIGNvbnN0IHAgPSBibG9ja3NbMF0ucXVlcnlTZWxlY3RvcignLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCcpO1xuICAgICAgICAgICAgaWYgKHAuaW5uZXJUZXh0ID09ICcnKSB7XG4gICAgICAgICAgICAgICAgcC5mb2N1cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSk7XG5cbi8vIENsZWFyIHRleHQgd2hlbiBwYXN0ZVxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcblxuICAgIGNvbnN0IGVkaXRvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qb2hhbm5lcy1lZGl0b3InKTtcblxuICAgIGlmIChlZGl0b3IpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJykgPT09ICd0cnVlJykge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0ZXh0ID0gKGUuY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YSkuZ2V0RGF0YSgndGV4dC9wbGFpbicpO1xuICAgICAgICAgICAgICAgIGluc2VydFRleHRBdEN1cnNvcih0ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgdHJ1ZSk7XG5cbiAgICAgICAgZnVuY3Rpb24gaW5zZXJ0VGV4dEF0Q3Vyc29yKHRleHQpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlbCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcbiAgICAgICAgICAgIGlmIChzZWwucmFuZ2VDb3VudCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCByYW5nZSA9IHNlbC5nZXRSYW5nZUF0KDApO1xuICAgICAgICAgICAgICAgIHJhbmdlLmRlbGV0ZUNvbnRlbnRzKCk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpO1xuICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUodGV4dE5vZGUpO1xuXG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlcih0ZXh0Tm9kZSk7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kQWZ0ZXIodGV4dE5vZGUpO1xuICAgICAgICAgICAgICAgIHNlbC5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgICAgICAgICBzZWwuYWRkUmFuZ2UocmFuZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSk7XG5cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBVSUJ1aWxkZXIuYnVpbGQoKS5zdGFydCgpO1xufSk7XG5cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzdmdDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzdmdDb250YWluZXIuaW5uZXJIVE1MID0gaWNvbnNTVkc7XG5cbiAgICBzdmdDb250YWluZXIuY2xhc3NOYW1lID0gJ3N2Zy1pY29ucy1jb250YWluZXInO1xuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzdmdDb250YWluZXIpO1xufSk7IiwiZXhwb3J0IGxldCBzYXZlZFJhbmdlID0gbnVsbDtcblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVTZWxlY3Rpb24oKSB7XG4gICAgaWYgKHdpbmRvdy5nZXRTZWxlY3Rpb24pIHtcbiAgICAgICAgY29uc3Qgc2VsID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICAgICAgICBpZiAoc2VsLnJhbmdlQ291bnQgPiAwKSB7XG4gICAgICAgICAgICBzYXZlZFJhbmdlID0gc2VsLmdldFJhbmdlQXQoMCkuY2xvbmVSYW5nZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdGVtcG9yYXJ5U2VsZWN0Q29udGVudEZyb21DdXJyZW50U2VsZWN0aW9uKCkge1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3QgYWxsIGNvbnRlbnQgdGVtcG9yYXJybHknKVxuICAgICAgICBpZiAod2luZG93LmdldFNlbGVjdGlvbikge1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuXG4gICAgICAgICAgICBpZiAoc2VsZWN0aW9uLnJhbmdlQ291bnQgPiAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSBzYXZlZFJhbmdlIHx8IHNlbGVjdGlvbi5nZXRSYW5nZUF0KDApO1xuICAgICAgICAgICAgICAgIGxldCBjb250YWluZXIgPSByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcblxuICAgICAgICAgICAgICAgIGlmIChjb250YWluZXIubm9kZVR5cGUgIT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyID0gY29udGFpbmVyLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudEVsZW1lbnQgPSBjb250YWluZXIuY2xvc2VzdCgnLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCcpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNvbnRlbnRFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdSYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIG5ld1JhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhjb250ZW50RWxlbWVudCk7XG5cbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uLmFkZFJhbmdlKG5ld1JhbmdlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk5lbmh1bSBlbGVtZW50byAnLmNvbnRlbnQnIGVudm9sdmVuZG8gYSBzZWxlw6fDo28gYXR1YWwgZm9pIGVuY29udHJhZG8uXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIDExKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlc3RvcmVTZWxlY3Rpb24oKSB7XG5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ3Jlc3RvcmUgc2VsZWN0aW9uJyk7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICAgICAgICBpZiAoc2F2ZWRSYW5nZSkge1xuICAgICAgICAgICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgICAgc2VsZWN0aW9uLmFkZFJhbmdlKHNhdmVkUmFuZ2UpO1xuICAgICAgICB9XG4gICAgfSwgMTApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2F2ZWRSYW5nZSgpIHtcbiAgICByZXR1cm4gc2F2ZWRSYW5nZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQWxsU2VsZWN0aW9uKCkge1xuICAgIHNhdmVkUmFuZ2UgPSBudWxsO1xuICAgIHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5yZW1vdmVBbGxSYW5nZXMoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVNhdmVkU2VsZWN0aW9uKCkge1xuICAgIHNhdmVkUmFuZ2UgPSBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3VycmVudERyYWdnYWJsZUJsb2NrRm9jdXNlZCgpIHtcblxuICAgIGxldCBjdXJyZW50QmxvY2tSYW5nZSA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5nZXRSYW5nZUF0KDApO1xuXG4gICAgbGV0IGNvbW1vbkFuY2VzdG9yID0gY3VycmVudEJsb2NrUmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG5cbiAgICBpZiAoY29tbW9uQW5jZXN0b3Iubm9kZVR5cGUgPT09IDMpIHsgLy8qIHRleHQgbm9kZSAqL1xuICAgICAgICBjb21tb25BbmNlc3RvciA9IGNvbW1vbkFuY2VzdG9yLnBhcmVudE5vZGU7XG4gICAgfVxuXG4gICAgY29uc3QgY3VycmVudEJsb2NrID0gY29tbW9uQW5jZXN0b3IuY2xvc2VzdCgnLmJsb2NrJyk7XG5cbiAgICByZXR1cm4gY3VycmVudEJsb2NrO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNTZWxlY3Rpb24oKSB7XG4gICAgc2F2ZWRSYW5nZSAhPSBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNSYW5nZUNvdmVyaW5nRWxlbWVudChlbGVtZW50LCByYW5nZSkge1xuICAgIGNvbnN0IHRleHROb2RlcyA9IGdldFRleHROb2RlcyhlbGVtZW50KTtcblxuICAgIGlmICh0ZXh0Tm9kZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBmaXJzdE5vZGUgPSB0ZXh0Tm9kZXNbMF07XG4gICAgaWYgKHJhbmdlLnN0YXJ0Q29udGFpbmVyICE9PSBmaXJzdE5vZGUgfHwgcmFuZ2Uuc3RhcnRPZmZzZXQgIT09IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGxhc3ROb2RlID0gdGV4dE5vZGVzW3RleHROb2Rlcy5sZW5ndGggLSAxXTtcbiAgICBpZiAocmFuZ2UuZW5kQ29udGFpbmVyICE9PSBsYXN0Tm9kZSB8fCByYW5nZS5lbmRPZmZzZXQgIT09IGxhc3ROb2RlLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGdldFRleHROb2Rlcyhub2RlKSB7XG4gICAgbGV0IHRleHROb2RlcyA9IFtdO1xuICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSkge1xuICAgICAgICB0ZXh0Tm9kZXMucHVzaChub2RlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLmNoaWxkTm9kZXMuZm9yRWFjaChjaGlsZCA9PiB7XG4gICAgICAgICAgICB0ZXh0Tm9kZXMgPSB0ZXh0Tm9kZXMuY29uY2F0KGdldFRleHROb2RlcyhjaGlsZCkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRleHROb2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNlbGVjdGVkQ2xvc2VzdEVsZW1lbnRBY2NlcHRpbmdDbG9zZXN0KCkge1xuICAgIGxldCBjdXJyZW50UmFuZ2UgPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCkuZ2V0UmFuZ2VBdCgwKTtcbiAgICBpZiAoIWN1cnJlbnRSYW5nZSB8fCBjdXJyZW50UmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ05vIHZhbGlkIHNlbGVjdGlvbiBmb3VuZC4nKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgbGV0IGNvbW1vbkFuY2VzdG9yID0gY3VycmVudFJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyO1xuXG4gICAgd2hpbGUgKGNvbW1vbkFuY2VzdG9yLm5vZGVUeXBlICE9PSAxKSB7XG4gICAgICAgIGNvbW1vbkFuY2VzdG9yID0gY29tbW9uQW5jZXN0b3IucGFyZW50Tm9kZTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29tbW9uQW5jZXN0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDbG9zZXN0Q29udGVudEVkaXRhYmxlKCkge1xuICAgIHJldHVybiBnZXRTZWxlY3RlZENsb3Nlc3RFbGVtZW50QWNjZXB0aW5nQ2xvc2VzdCgpLmNsb3Nlc3QoJy5lZGl0YWJsZScpO1xufSIsIlxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlQmxvY2tPcHRpb25zKCkge1xuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbG9zZVRleHRGb3JtYXR0aW5nQmFyKCkge1xuICAgIHRleHRGb3JtYXR0aW5nQmFyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGZvY3VzT25UaGVFbmRPZlRoZVRleHQoY29udGVudEJsb2NrKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuXG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhjb250ZW50QmxvY2spO1xuXG4gICAgICAgIGxldCBsYXN0Q2hpbGQgPSBjb250ZW50QmxvY2s7XG4gICAgICAgIHdoaWxlIChsYXN0Q2hpbGQubGFzdENoaWxkICYmIGxhc3RDaGlsZC5sYXN0Q2hpbGQubm9kZVR5cGUgPT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICAgICAgICBsYXN0Q2hpbGQgPSBsYXN0Q2hpbGQubGFzdENoaWxkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsYXN0Q2hpbGQubGFzdENoaWxkKSB7XG4gICAgICAgICAgICBsYXN0Q2hpbGQgPSBsYXN0Q2hpbGQubGFzdENoaWxkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmFuZ2Uuc2V0RW5kKGxhc3RDaGlsZCwgbGFzdENoaWxkLnRleHRDb250ZW50Lmxlbmd0aCk7XG4gICAgICAgIHJhbmdlLmNvbGxhcHNlKGZhbHNlKTtcblxuICAgICAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XG5cbiAgICAgICAgY29udGVudEJsb2NrLmZvY3VzKCk7XG4gICAgfSwgMTApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9jdXNPblRoZVN0YXJ0T2ZUaGVUZXh0KGNvbnRlbnRCbG9jaykge1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuXG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhjb250ZW50QmxvY2spO1xuICAgICAgICByYW5nZS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICBzZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpO1xuXG4gICAgICAgIGNvbnRlbnRCbG9jay5mb2N1cygpO1xuICAgIH0sIDEwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvY3VzT25OZXh0KGFjdHVhbEVsZW1lbnQsIHBvc2l0aW9uKSB7XG4gICAgbGV0IHRhZyA9IGFjdHVhbEVsZW1lbnQudGFnTmFtZS50b1VwcGVyQ2FzZSgpO1xuICAgIGxldCBmb2N1c2VkRWxlbWVudCA9IG51bGw7XG5cbiAgICBpZiAodGFnID09PSAnTEknKSB7XG4gICAgICAgIGxldCBuZXh0RWxlbWVudCA9IGFjdHVhbEVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nO1xuXG4gICAgICAgIGlmIChuZXh0RWxlbWVudCAmJiBuZXh0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZvY3VzYWJsZScpKSB7XG4gICAgICAgICAgICBmb2N1c2VkRWxlbWVudCA9IG5leHRFbGVtZW50O1xuICAgICAgICAgICAgaWYgKHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgYXBwbHlDdXJzb3JYU3RhcnRQb3NpdGlvbihmb2N1c2VkRWxlbWVudCwgcG9zaXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb2N1c09uVGhlU3RhcnRPZlRoZVRleHQoZm9jdXNlZEVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZvY3VzZWRFbGVtZW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGFjdHVhbEVsZW1lbnQucGFyZW50Tm9kZS50YWdOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdMSScgLyogZm9jdXNhYmxlIFNQQU4gaW5zaWRlIExJKi8pIHtcbiAgICAgICAgbGV0IG5leHRFbGVtZW50ID0gYWN0dWFsRWxlbWVudC5jbG9zZXN0KCdsaScpLm5leHRFbGVtZW50U2libGluZz8ucXVlcnlTZWxlY3RvcignLmZvY3VzYWJsZScpO1xuXG4gICAgICAgIGlmIChuZXh0RWxlbWVudCAmJiBuZXh0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZvY3VzYWJsZScpKSB7XG4gICAgICAgICAgICBmb2N1c2VkRWxlbWVudCA9IG5leHRFbGVtZW50O1xuICAgICAgICAgICAgaWYgKHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgYXBwbHlDdXJzb3JYU3RhcnRQb3NpdGlvbihmb2N1c2VkRWxlbWVudCwgcG9zaXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb2N1c09uVGhlU3RhcnRPZlRoZVRleHQoZm9jdXNlZEVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZvY3VzZWRFbGVtZW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHBhcmVudCA9IGFjdHVhbEVsZW1lbnQuY2xvc2VzdCgnLmJsb2NrJyk7XG4gICAgbGV0IHNpYmxpbmcgPSBwYXJlbnQubmV4dEVsZW1lbnRTaWJsaW5nO1xuXG4gICAgd2hpbGUgKHNpYmxpbmcpIHtcbiAgICAgICAgbGV0IGZvY3VzYWJsZUNhbmRpZGF0ZXMgPSBzaWJsaW5nLnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb2N1c2FibGUnKTtcbiAgICAgICAgaWYgKGZvY3VzYWJsZUNhbmRpZGF0ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZm9jdXNlZEVsZW1lbnQgPSBmb2N1c2FibGVDYW5kaWRhdGVzWzBdO1xuICAgICAgICAgICAgaWYgKHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgYXBwbHlDdXJzb3JYU3RhcnRQb3NpdGlvbihmb2N1c2VkRWxlbWVudCwgcG9zaXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb2N1c09uVGhlU3RhcnRPZlRoZVRleHQoZm9jdXNlZEVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZvY3VzZWRFbGVtZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgc2libGluZyA9IHNpYmxpbmcubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgIH1cblxuICAgIHJldHVybiBmb2N1c2VkRWxlbWVudDtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gZm9jdXNPblByZXZpb3VzKGFjdHVhbEVsZW1lbnQsIHBvc2l0aW9uKSB7XG4gICAgbGV0IHRhZyA9IGFjdHVhbEVsZW1lbnQudGFnTmFtZS50b1VwcGVyQ2FzZSgpO1xuICAgIGxldCBmb2N1c2VkRWxlbWVudCA9IG51bGw7XG5cbiAgICBpZiAodGFnID09PSAnTEknKSB7XG4gICAgICAgIGxldCBwcmV2aW91c0VsZW1lbnQgPSBhY3R1YWxFbGVtZW50LnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG5cbiAgICAgICAgaWYgKHByZXZpb3VzRWxlbWVudCAmJiBwcmV2aW91c0VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb2N1c2FibGUnKSkge1xuICAgICAgICAgICAgZm9jdXNlZEVsZW1lbnQgPSBwcmV2aW91c0VsZW1lbnQ7XG4gICAgICAgICAgICBpZiAocG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICBhcHBseUN1cnNvclhFbmRQb3NpdGlvbihmb2N1c2VkRWxlbWVudCwgcG9zaXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb2N1c09uVGhlRW5kT2ZUaGVUZXh0KGZvY3VzZWRFbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmb2N1c2VkRWxlbWVudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChhY3R1YWxFbGVtZW50LnBhcmVudE5vZGUudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnTEknIC8qIGZvY3VzYWJsZSBTUEFOIGluc2lkZSBMSSovKSB7XG4gICAgICAgIGxldCBwcmV2aW91c0VsZW1lbnQgPSBhY3R1YWxFbGVtZW50LmNsb3Nlc3QoJ2xpJykucHJldmlvdXNFbGVtZW50U2libGluZz8ucXVlcnlTZWxlY3RvcignLmZvY3VzYWJsZScpO1xuXG4gICAgICAgIGlmIChwcmV2aW91c0VsZW1lbnQgJiYgcHJldmlvdXNFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZm9jdXNhYmxlJykpIHtcbiAgICAgICAgICAgIGZvY3VzZWRFbGVtZW50ID0gcHJldmlvdXNFbGVtZW50O1xuICAgICAgICAgICAgaWYgKHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgYXBwbHlDdXJzb3JYRW5kUG9zaXRpb24oZm9jdXNlZEVsZW1lbnQsIHBvc2l0aW9uKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9jdXNPblRoZUVuZE9mVGhlVGV4dChmb2N1c2VkRWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZm9jdXNlZEVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgcGFyZW50ID0gYWN0dWFsRWxlbWVudC5jbG9zZXN0KCcuYmxvY2snKTtcbiAgICBsZXQgc2libGluZyA9IHBhcmVudC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xuXG4gICAgd2hpbGUgKHNpYmxpbmcpIHtcbiAgICAgICAgbGV0IGZvY3VzYWJsZUNhbmRpZGF0ZXMgPSBzaWJsaW5nLnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb2N1c2FibGUnKTtcbiAgICAgICAgaWYgKGZvY3VzYWJsZUNhbmRpZGF0ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZm9jdXNlZEVsZW1lbnQgPSBmb2N1c2FibGVDYW5kaWRhdGVzW2ZvY3VzYWJsZUNhbmRpZGF0ZXMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBpZiAocG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICBhcHBseUN1cnNvclhFbmRQb3NpdGlvbihmb2N1c2VkRWxlbWVudCwgcG9zaXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb2N1c09uVGhlRW5kT2ZUaGVUZXh0KGZvY3VzZWRFbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmb2N1c2VkRWxlbWVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIHNpYmxpbmcgPSBzaWJsaW5nLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZvY3VzZWRFbGVtZW50O1xufVxuXG5cbmZ1bmN0aW9uIGFkanVzdEN1cnNvck9mZnNldChub2RlLCB4UG9zaXRpb24pIHtcbiAgICBsZXQgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICAgIGxldCBjbG9zZXN0Tm9kZSA9IG5vZGU7XG4gICAgbGV0IGNsb3Nlc3RPZmZzZXQgPSAwO1xuICAgIGxldCBjbG9zZXN0RGlmZiA9IEluZmluaXR5O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2RlLnRleHRDb250ZW50Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJhbmdlLnNldFN0YXJ0KG5vZGUsIGkpO1xuICAgICAgICByYW5nZS5zZXRFbmQobm9kZSwgaSArIDEpO1xuICAgICAgICBjb25zdCByZWN0ID0gcmFuZ2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnN0IGxlZnREaWZmID0gTWF0aC5hYnMocmVjdC5sZWZ0IC0geFBvc2l0aW9uKTtcbiAgICAgICAgY29uc3QgcmlnaHREaWZmID0gTWF0aC5hYnMocmVjdC5yaWdodCAtIHhQb3NpdGlvbik7XG5cbiAgICAgICAgaWYgKGxlZnREaWZmIDwgY2xvc2VzdERpZmYgfHwgcmlnaHREaWZmIDwgY2xvc2VzdERpZmYpIHtcbiAgICAgICAgICAgIGNsb3Nlc3REaWZmID0gTWF0aC5taW4obGVmdERpZmYsIHJpZ2h0RGlmZik7XG4gICAgICAgICAgICBjbG9zZXN0T2Zmc2V0ID0gaSArIChyaWdodERpZmYgPCBsZWZ0RGlmZiA/IDEgOiAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmICh4UG9zaXRpb24gPiByYW5nZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5yaWdodCkge1xuICAgICAgICBjbG9zZXN0T2Zmc2V0ID0gbm9kZS50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgY2xvc2VzdE5vZGUsIGNsb3Nlc3RPZmZzZXQgfTtcbn1cblxuZnVuY3Rpb24gYXBwbHlDdXJzb3JYU3RhcnRQb3NpdGlvbihlbGVtZW50LCB4UG9zaXRpb24pIHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG4gICAgY29uc3QgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuXG4gICAgbGV0IGN1cnJlbnROb2RlID0gZWxlbWVudC5maXJzdENoaWxkO1xuICAgIGxldCByZXN1bHQgPSBudWxsO1xuXG4gICAgd2hpbGUgKGN1cnJlbnROb2RlKSB7XG4gICAgICAgIGlmIChjdXJyZW50Tm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5URVhUX05PREUpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IGFkanVzdEN1cnNvck9mZnNldChjdXJyZW50Tm9kZSwgeFBvc2l0aW9uKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUubmV4dFNpYmxpbmc7XG4gICAgfVxuXG4gICAgaWYgKHJlc3VsdCAmJiByZXN1bHQuY2xvc2VzdE5vZGUpIHtcbiAgICAgICAgcmFuZ2Uuc2V0U3RhcnQocmVzdWx0LmNsb3Nlc3ROb2RlLCByZXN1bHQuY2xvc2VzdE9mZnNldCk7XG4gICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XG4gICAgICAgIGVsZW1lbnQuZm9jdXMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByYW5nZS5zZWxlY3ROb2RlQ29udGVudHMoZWxlbWVudCk7XG4gICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XG4gICAgICAgIGVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5Q3Vyc29yWEVuZFBvc2l0aW9uKGVsZW1lbnQsIHhQb3NpdGlvbikge1xuICAgIGNvbnN0IHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcbiAgICBjb25zdCByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG5cbiAgICBsZXQgY3VycmVudE5vZGUgPSBlbGVtZW50Lmxhc3RDaGlsZDtcbiAgICBsZXQgcmVzdWx0ID0gbnVsbDtcblxuICAgIHdoaWxlIChjdXJyZW50Tm9kZSkge1xuICAgICAgICBpZiAoY3VycmVudE5vZGUubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBhZGp1c3RDdXJzb3JPZmZzZXQoY3VycmVudE5vZGUsIHhQb3NpdGlvbik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfSBlbHNlIGlmIChjdXJyZW50Tm9kZS5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnQlInKSB7XG4gICAgICAgICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cblxuICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0LmNsb3Nlc3ROb2RlKSB7XG4gICAgICAgIHJhbmdlLnNldFN0YXJ0KHJlc3VsdC5jbG9zZXN0Tm9kZSwgcmVzdWx0LmNsb3Nlc3RPZmZzZXQpO1xuICAgICAgICByYW5nZS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICBzZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpO1xuICAgICAgICBlbGVtZW50LmZvY3VzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKGVsZW1lbnQpO1xuICAgICAgICByYW5nZS5jb2xsYXBzZShmYWxzZSk7XG4gICAgICAgIHNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgc2VsZWN0aW9uLmFkZFJhbmdlKHJhbmdlKTtcbiAgICAgICAgZWxlbWVudC5mb2N1cygpO1xuICAgIH1cbn0iLCJsZXQgYW5jaG9yRWxlbWVudCA9IG51bGw7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0QW5jaG9yKGEpIHtcclxuICAgIGFuY2hvckVsZW1lbnQgPSBhO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xlYXIoKSB7XHJcblxyXG4gICAgaWYgKGFuY2hvckVsZW1lbnQgJiYgKGFuY2hvckVsZW1lbnQuaHJlZiA9PSAnJyB8fCBhbmNob3JFbGVtZW50LmhyZWYgPT0gbnVsbCkpIHtcclxuICAgICAgICBjb25zdCBwYXJlbnQgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGU7XHJcbiAgICAgICAgd2hpbGUgKGFuY2hvckVsZW1lbnQuZmlyc3RDaGlsZCkge1xyXG4gICAgICAgICAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGFuY2hvckVsZW1lbnQuZmlyc3RDaGlsZCwgYW5jaG9yRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAocGFyZW50KSB7XHJcbiAgICAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChhbmNob3JFbGVtZW50KTtcclxuICAgICAgICAgICAgcGFyZW50Lm5vcm1hbGl6ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhbmNob3JFbGVtZW50ID0gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFueSgpIHtcclxuICAgIGFuY2hvckVsZW1lbnQgPT0gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFVSTCh1cmwpIHtcclxuICAgIGFuY2hvckVsZW1lbnQuaHJlZiA9IHVybDtcclxufSIsImltcG9ydCAqIGFzIGpTZWxlY3Rpb24gZnJvbSAnLi4vLi4vai1zZWxlY3Rpb24nO1xyXG5cclxuXHJcbmltcG9ydCAqIGFzIGpBbmNob3IgZnJvbSAnLi4vLi4vai1hbmNob3InO1xyXG5pbXBvcnQgeyBzaG93RGVwZW5kZW50QmxvY2tPcHRpb25zIH0gZnJvbSAnLi4vcXVpY2stbWVudS9xdWljay1pbnNlcnQtbWVudSc7XHJcblxyXG5pbXBvcnQgeyBnZXRDdXJyZW50RHJhZ2dhYmxlQmxvY2tGb2N1c2VkIH0gZnJvbSAnLi4vLi4vai1zZWxlY3Rpb24nO1xyXG5cclxuXHJcbmxldCBmbG9hdGluZ1Rvb2xiYXJWaXNpYmxlID0gZmFsc2U7XHJcbmxldCBmbG9hdGluZ1Rvb2xiYXJQcmV2ZW50SGlkZSA9IGZhbHNlO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNTaG93aW5nVGV4dEZvcm1hdHRpbmdTZWxlY3RhYmxlRGVwZW5kZW50Qm94KCkge1xyXG4gICAgbGV0IGlzU2hvd2luZyA9IChcclxuICAgICAgICB0dXJuSW50b1NlbGVjdC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScgfHxcclxuICAgICAgICBtb3JlVGV4dE9wdGlvblNlbGVjdC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScgfHxcclxuICAgICAgICBjb2xvclRleHRPcHRpb25TZWxlY3Quc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnKTtcclxuICAgIHJldHVybiBpc1Nob3dpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc091dE9mZmxvYXRpbmdUb29sYmFyKGV2ZW50KSB7XHJcblxyXG4gICAgaWYgKCFldmVudC50YXJnZXQuY2xvc2VzdCgnI2Zsb2F0aW5nVG9vbGJhcicpICYmICFldmVudC50YXJnZXQuY2xvc2VzdCgnI2xpbmtCb3gnKSkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbkhpZGVmbG9hdGluZ1Rvb2xiYXIoKSB7XHJcbiAgICByZXR1cm4gIWZsb2F0aW5nVG9vbGJhclByZXZlbnRIaWRlO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNTaG93aW5nZmxvYXRpbmdUb29sYmFyKCkge1xyXG4gICAgcmV0dXJuIGZsb2F0aW5nVG9vbGJhci5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzaG93ZmxvYXRpbmdUb29sYmFyKGV2ZW50KSB7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ3Nob3cgdGV4dCBmb3JtYXR0aW5nIGJhcicpO1xyXG5cclxuICAgIGhpZGVBbGxEZXBlbmRlbnRCb3goKTtcclxuXHJcbiAgICBmbG9hdGluZ1Rvb2xiYXJWaXNpYmxlID0gdHJ1ZTtcclxuICAgIGZsb2F0aW5nVG9vbGJhclByZXZlbnRIaWRlID0gdHJ1ZTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBmbG9hdGluZ1Rvb2xiYXJQcmV2ZW50SGlkZSA9IGZhbHNlO1xyXG4gICAgfSwgMzAwKTtcclxuXHJcbiAgICBqU2VsZWN0aW9uLnJlbW92ZVNhdmVkU2VsZWN0aW9uKCk7XHJcbiAgICBqU2VsZWN0aW9uLnNhdmVTZWxlY3Rpb24oKTtcclxuXHJcbiAgICBjbGVhclRleHRGb3JtYXR0aW5nQnV0dG9uQWN0aXZlKCk7XHJcbiAgICB1cGRhdGVUZXh0Rm9ybWF0dGluZ0FjdGl2ZUJ1dHRvbnMoKTtcclxuXHJcbiAgICBjaGFuZ2VUdXJuSW50b0J1dHRvblRleHQoKTtcclxuXHJcbiAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XHJcblxyXG4gICAgaWYgKHNlbGVjdGlvbi5yYW5nZUNvdW50ID4gMCAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuam9oYW5uZXMtZWRpdG9yJykuY29udGFpbnMoc2VsZWN0aW9uLmFuY2hvck5vZGUpICYmIHNlbGVjdGlvbi50b1N0cmluZygpLnRyaW0oKSAhPT0gJycpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgICBsZXQgcmFuZ2UgPSBzZWxlY3Rpb24uZ2V0UmFuZ2VBdCgwKTtcclxuICAgICAgICBsZXQgcmVjdCA9IHJhbmdlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgICBmbG9hdGluZ1Rvb2xiYXIuc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcclxuICAgICAgICBmbG9hdGluZ1Rvb2xiYXIuc3R5bGUubGVmdCA9IGAke3JlY3QubGVmdCArIHdpbmRvdy5zY3JvbGxYIC0gNTB9cHhgO1xyXG4gICAgICAgIGZsb2F0aW5nVG9vbGJhci5zdHlsZS50b3AgPSBgJHtyZWN0LnRvcCArIHdpbmRvdy5zY3JvbGxZIC0gZmxvYXRpbmdUb29sYmFyLm9mZnNldEhlaWdodCAtIDEwfXB4YDtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVmbG9hdGluZ1Rvb2xiYXIoKSB7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ2hpZGUgdGV4dCBmb3JtYXR0aW5nIGJhciAnKTtcclxuXHJcbiAgICAvLyBmbG9hdGluZ1Rvb2xiYXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHJcbiAgICB0cnlIaWRlZmxvYXRpbmdUb29sYmFyKCk7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBjbGVhclRleHRGb3JtYXR0aW5nQnV0dG9uQWN0aXZlKCkge1xyXG4gICAgbGlua1RleHRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgndGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUnKTtcclxuICAgIGJvbGRUZXh0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ3RleHQtZm9ybWF0dGluZy1idXR0b24tYWN0aXZlJyk7XHJcbiAgICBpdGFsaWNUZXh0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ3RleHQtZm9ybWF0dGluZy1idXR0b24tYWN0aXZlJyk7XHJcbiAgICB1bmRlcmxpbmVUZXh0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ3RleHQtZm9ybWF0dGluZy1idXR0b24tYWN0aXZlJyk7XHJcbiAgICBjb2RlVGV4dEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCd0ZXh0LWZvcm1hdHRpbmctYnV0dG9uLWFjdGl2ZScpO1xyXG4gICAgc3RyaWtlVGhyb3VnaFRleHRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgndGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUnKTtcclxuICAgIG1hdGhUZXh0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ3RleHQtZm9ybWF0dGluZy1idXR0b24tYWN0aXZlJyk7XHJcbiAgICBjb2xvckNpcmNsZS5jbGFzc0xpc3QucmVtb3ZlKCd0ZXh0LWZvcm1hdHRpbmctY2lyY2xlLWFjdGl2ZScpO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVUZXh0Rm9ybWF0dGluZ0FjdGl2ZUJ1dHRvbnMoKSB7XHJcblxyXG4gICAgY29uc3Qgc2VsZWN0ZWRUYWdzID0gZ2V0U2VsZWN0ZWRUYWdzKCk7XHJcblxyXG4gICAgc2VsZWN0ZWRUYWdzLmZvckVhY2godGFnID0+IHtcclxuXHJcbiAgICAgICAgaWYgKHRhZyA9PSBcImFcIikge1xyXG4gICAgICAgICAgICBsaW5rVGV4dEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCd0ZXh0LWZvcm1hdHRpbmctYnV0dG9uLWFjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRhZyA9PSBcInN0cm9uZ1wiKSB7XHJcbiAgICAgICAgICAgIGJvbGRUZXh0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3RleHQtZm9ybWF0dGluZy1idXR0b24tYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGFnID09IFwiZW1cIikge1xyXG4gICAgICAgICAgICBpdGFsaWNUZXh0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3RleHQtZm9ybWF0dGluZy1idXR0b24tYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGFnID09IFwidVwiKSB7XHJcbiAgICAgICAgICAgIHVuZGVybGluZVRleHRCdXR0b24uY2xhc3NMaXN0LmFkZCgndGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0YWcgPT0gXCJzXCIpIHtcclxuICAgICAgICAgICAgc3RyaWtlVGhyb3VnaFRleHRCdXR0b24uY2xhc3NMaXN0LmFkZCgndGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0YWcgPT0gXCJjb2RlXCIpIHtcclxuICAgICAgICAgICAgY29kZVRleHRCdXR0b24uY2xhc3NMaXN0LmFkZCgndGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0YWcgPT0gXCJtYXRoXCIpIHtcclxuICAgICAgICAgICAgbWF0aFRleHRCdXR0b24uY2xhc3NMaXN0LmFkZCgndGV4dC1mb3JtYXR0aW5nLWJ1dHRvbi1hY3RpdmUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0YWcgPT0gXCJtYXJrXCIpIHtcclxuICAgICAgICAgICAgY29sb3JDaXJjbGUuY2xhc3NMaXN0LmFkZCgndGV4dC1mb3JtYXR0aW5nLWNpcmNsZS1hY3RpdmUnKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0U2VsZWN0ZWRUYWdzKCkge1xyXG4gICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xyXG4gICAgY29uc3QgdGFncyA9IFtdO1xyXG5cclxuICAgIGNvbnN0IHRhZ05hbWVzID0gW1wiU1RST05HXCIsIFwiU1wiLCBcIkVNXCIsIFwiVVwiLCBcIkNPREVcIiwgXCJNQVRIXCIsIFwiQVwiLCBcIk1BUktcIl07XHJcblxyXG4gICAgaWYgKHNlbGVjdGlvbi5yYW5nZUNvdW50KSB7XHJcbiAgICAgICAgY29uc3QgcmFuZ2UgPSBzZWxlY3Rpb24uZ2V0UmFuZ2VBdCgwKTtcclxuICAgICAgICBjb25zdCBzdGFydENvbnRhaW5lciA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xyXG4gICAgICAgIGNvbnN0IGVuZENvbnRhaW5lciA9IHJhbmdlLmVuZENvbnRhaW5lcjtcclxuXHJcbiAgICAgICAgaWYgKHN0YXJ0Q29udGFpbmVyICE9PSBlbmRDb250YWluZXIpIHtcclxuICAgICAgICAgICAgY29uc3QgY29tbW9uQW5jZXN0b3IgPSByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudHMgPSBjb21tb25BbmNlc3Rvci5ub2RlVHlwZSA9PT0gMSA/IGNvbW1vbkFuY2VzdG9yLnF1ZXJ5U2VsZWN0b3JBbGwoXCIqXCIpIDogW107XHJcblxyXG4gICAgICAgICAgICBlbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0YWdOYW1lcy5pbmNsdWRlcyhlbC50YWdOYW1lKSAmJiBzZWxlY3Rpb24uY29udGFpbnNOb2RlKGVsLCB0cnVlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhZ3MucHVzaChlbC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsZXQgbm9kZSA9IHN0YXJ0Q29udGFpbmVyLm5vZGVUeXBlID09PSAxID8gc3RhcnRDb250YWluZXIgOiBzdGFydENvbnRhaW5lci5wYXJlbnROb2RlO1xyXG4gICAgICAgICAgICB3aGlsZSAobm9kZSAmJiBub2RlICE9PSBkb2N1bWVudCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRhZ05hbWVzLmluY2x1ZGVzKG5vZGUudGFnTmFtZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YWdzLnB1c2gobm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gWy4uLm5ldyBTZXQodGFncyldO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZUVuY2xvc2VTZWxlY3RlZFRleHRUbyhldmVudCkge1xyXG4gICAgY29uc3QgZGF0YVRhZyA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCcuZW50cnknKS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGFnJyk7XHJcbiAgICBjb25zdCBkYXRhQ2xhc3MgPSBldmVudC50YXJnZXQuY2xvc2VzdCgnLmVudHJ5JykuZ2V0QXR0cmlidXRlKCdkYXRhLWNsYXNzJyk7XHJcblxyXG4gICAgaWYgKGRhdGFDbGFzcykge1xyXG4gICAgICAgIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKGRhdGFUYWcsIGRhdGFDbGFzcyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKGRhdGFUYWcpO1xyXG4gICAgfVxyXG5cclxuICAgIGhpZGVBbGxEZXBlbmRlbnRCb3goKTtcclxuICAgIGhpZGVmbG9hdGluZ1Rvb2xiYXIoKTtcclxuXHJcbiAgICBqU2VsZWN0aW9uLnJlc3RvcmVTZWxlY3Rpb24oKTtcclxufVxyXG5cclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuXHJcbi8vICAgICBib2xkVGV4dEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xyXG4vLyAgICAgICAgIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKCdzdHJvbmcnKTtcclxuLy8gICAgICAgICBjbGVhclNlbGVjdGlvbigpO1xyXG4vLyAgICAgICAgIHRyeUhpZGVmbG9hdGluZ1Rvb2xiYXIoKTtcclxuLy8gICAgIH0pO1xyXG5cclxuLy8gICAgIGl0YWxpY1RleHRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAgICAgdG9nZ2xlU2VsZWN0ZWRUZXh0VG8oJ2VtJyk7XHJcbi8vICAgICAgICAgY2xlYXJTZWxlY3Rpb24oKTtcclxuLy8gICAgICAgICB0cnlIaWRlZmxvYXRpbmdUb29sYmFyKCk7XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICB1bmRlcmxpbmVUZXh0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgICAgIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKCd1Jyk7XHJcbi8vICAgICAgICAgY2xlYXJTZWxlY3Rpb24oKTtcclxuLy8gICAgICAgICB0cnlIaWRlZmxvYXRpbmdUb29sYmFyKCk7XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICBjb2RlVGV4dEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICAgICB0b2dnbGVTZWxlY3RlZFRleHRUbygnY29kZScpO1xyXG4vLyAgICAgICAgIGNsZWFyU2VsZWN0aW9uKCk7XHJcbi8vICAgICAgICAgdHJ5SGlkZWZsb2F0aW5nVG9vbGJhcigpO1xyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgc3RyaWtlVGhyb3VnaFRleHRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAgICAgdG9nZ2xlU2VsZWN0ZWRUZXh0VG8oJ3MnKTtcclxuLy8gICAgICAgICBjbGVhclNlbGVjdGlvbigpO1xyXG4vLyAgICAgICAgIHRyeUhpZGVmbG9hdGluZ1Rvb2xiYXIoKTtcclxuLy8gICAgIH0pO1xyXG5cclxuLy8gICAgIG1hdGhUZXh0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgICAgIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKCdtYXRoJyk7XHJcbi8vICAgICAgICAgY2xlYXJTZWxlY3Rpb24oKTtcclxuLy8gICAgICAgICB0cnlIaWRlZmxvYXRpbmdUb29sYmFyKCk7XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICBsaW5rVGV4dEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICAgICBqQW5jaG9yLnNhdmUodG9nZ2xlU2VsZWN0ZWRUZXh0VG8oJ2EnKSk7XHJcblxyXG4vLyAgICAgICAgIGlmIChqQW5jaG9yLmFueSgpKSB7XHJcbi8vICAgICAgICAgICAgIHNob3dJbnB1dExpbmtCb3goKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICBsaW5rQm94SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuLy8gICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XHJcbi8vICAgICAgICAgICAgIHVybEluc2VydCgpO1xyXG4vLyAgICAgICAgICAgICBjbGVhclNlbGVjdGlvbigpO1xyXG4vLyAgICAgICAgICAgICB0cnlIaWRlZmxvYXRpbmdUb29sYmFyKCk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfSk7XHJcbi8vIH0pO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5wdXRMaW5rVXJsKCkge1xyXG4gICAgY29uc3QgdXJsID0gbGlua0JveElucHV0LnZhbHVlLnRyaW0oKTtcclxuICAgIGlmICghdXJsKSByZXR1cm47XHJcblxyXG4gICAgLy8gU2ltcGxlcyB2ZXJpZmljYcOnw6NvIGRlIFVSTFxyXG4gICAgaWYgKCF1cmwubWF0Y2goL15odHRwcz86XFwvXFwvLisvKSkge1xyXG4gICAgICAgIGFsZXJ0KCdQbGVhc2UgZW50ZXIgYSB2YWxpZCBVUkwuJyk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGpBbmNob3Iuc2V0VVJMKHVybCk7XHJcblxyXG4gICAgLy9Nb3ZlIHRoaXMgdG8gd2luZG93cyBtYW5hZ2VyXHJcbiAgICBoaWRlTGlua0JveCgpO1xyXG5cclxuICAgIC8vIGpBbmNob3IuY2xlYXIoKTtcclxuICAgIC8vIGpTZWxlY3Rpb24uY2xlYXJBbGxTZWxlY3Rpb24oKTtcclxuXHJcblxyXG4gICAgLy9PcHNcclxuICAgIGxpbmtCb3hJbnB1dC52YWx1ZSA9ICcnO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gdG9nZ2xlU2VsZWN0ZWRUZXh0VG8odGFnTmFtZSwgY2xhc3NMaXN0ID0gJycpIHtcclxuICAgIGxldCBuZXdFbGVtZW50ID0gbnVsbDtcclxuXHJcbiAgICBjb25zdCByYW5nZSA9IGpTZWxlY3Rpb24uZ2V0U2F2ZWRSYW5nZSgpO1xyXG4gICAgY29uc3Qgc2VsZWN0ZWRUZXh0ID0gcmFuZ2UudG9TdHJpbmcoKS50cmltKCk7XHJcbiAgICBpZiAoIXNlbGVjdGVkVGV4dCkgcmV0dXJuO1xyXG5cclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyO1xyXG5cclxuICAgIC8vIEVuY29udHJhciBvIGVsZW1lbnRvIGZvcm1hdGFkbyBtYWlzIHByw7N4aW1vXHJcbiAgICBsZXQgZm9ybWF0dGVkRWxlbWVudCA9IG51bGw7XHJcbiAgICBpZiAoY29udGFpbmVyLm5vZGVUeXBlID09PSAzKSB7IC8vIE7DsyBkZSB0ZXh0b1xyXG4gICAgICAgIGZvcm1hdHRlZEVsZW1lbnQgPSBjb250YWluZXIucGFyZW50Tm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09IHRhZ05hbWUudG9Mb3dlckNhc2UoKSA/IGNvbnRhaW5lci5wYXJlbnROb2RlIDogbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZm9ybWF0dGVkRWxlbWVudCA9IGNvbnRhaW5lci50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09IHRhZ05hbWUudG9Mb3dlckNhc2UoKSA/IGNvbnRhaW5lciA6IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKHRhZ05hbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChmb3JtYXR0ZWRFbGVtZW50KSB7XHJcbiAgICAgICAgLy8gUmVtb3ZlciB0b2RvcyBvcyBpcm3Do29zIGRlbnRybyBkYSBzZWxlw6fDo28gcXVlIGNvcnJlc3BvbmRlbSBhbyB0YWdOYW1lXHJcbiAgICAgICAgY29uc3Qgc2libGluZ3MgPSBBcnJheS5mcm9tKGZvcm1hdHRlZEVsZW1lbnQucGFyZW50Tm9kZS5jaGlsZE5vZGVzKS5maWx0ZXIoY2hpbGQgPT5cclxuICAgICAgICAgICAgY2hpbGQubm9kZVR5cGUgPT09IDEgJiYgLy8gRWxlbWVudCBub2RlXHJcbiAgICAgICAgICAgIGNoaWxkLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gdGFnTmFtZS50b0xvd2VyQ2FzZSgpICYmXHJcbiAgICAgICAgICAgIHJhbmdlLmludGVyc2VjdHNOb2RlKGNoaWxkKSAvLyBWZXJpZmljYSBzZSBvIG7DsyBlc3TDoSBkZW50cm8gZGEgc2VsZcOnw6NvXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgY29uc3QgcGFyZW50ID0gZm9ybWF0dGVkRWxlbWVudC5wYXJlbnROb2RlO1xyXG4gICAgICAgIHNpYmxpbmdzLmZvckVhY2goc2libGluZyA9PiB7XHJcbiAgICAgICAgICAgIHdoaWxlIChzaWJsaW5nLmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICAgICAgICAgIHBhcmVudC5pbnNlcnRCZWZvcmUoc2libGluZy5maXJzdENoaWxkLCBzaWJsaW5nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQoc2libGluZyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHBhcmVudC5ub3JtYWxpemUoKTtcclxuXHJcbiAgICAgICAgLy8gQXR1YWxpemFyIGEgc2VsZcOnw6NvIHBhcmEgcmVmbGV0aXIgYXMgbXVkYW7Dp2FzXHJcbiAgICAgICAgcmFuZ2Uuc2V0U3RhcnQocGFyZW50LCAwKTtcclxuICAgICAgICByYW5nZS5zZXRFbmQocGFyZW50LCBwYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBBIHNlbGXDp8OjbyBuw6NvIGVzdMOhIG5hIGZvcm1hdGHDp8OjbyBlc3BlY2lmaWNhZGEsIGVudMOjbyBhZGljaW9uYXJcclxuICAgICAgICBuZXdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcclxuICAgICAgICBpZiAodGFnTmFtZSA9PT0gJ21hcmsnKSB7XHJcbiAgICAgICAgICAgIGxldCBjbGFzc2VzID0gY2xhc3NMaXN0LnNwbGl0KCcsJykuZmlsdGVyKGUgPT4gZS5sZW5ndGggPiAwKTtcclxuICAgICAgICAgICAgY2xhc3Nlcy5mb3JFYWNoKGNsYXNzTmFtZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBuZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICByYW5nZS5zdXJyb3VuZENvbnRlbnRzKG5ld0VsZW1lbnQpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gYXBsaWNhciBhIHRhZzpcIiwgZSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhuZXdFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXN0YXVyYXIgYSBzZWxlw6fDo29cclxuICAgIC8vIHNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTtcclxuICAgIC8vIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XHJcblxyXG4gICAgcmV0dXJuIG5ld0VsZW1lbnQ7XHJcbn1cclxuXHJcbi8vb3JpZ2luYWwgZnVuY2lvbmFsXHJcbi8vIGZ1bmN0aW9uIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKHRhZ05hbWUsIGNsYXNzTGlzdCA9ICcnKSB7XHJcblxyXG4vLyAgICAgbGV0IG5ld0VsZW1lbnQgPSBudWxsO1xyXG5cclxuXHJcblxyXG4vLyAgICAgY29uc3QgcmFuZ2UgPSBqU2VsZWN0aW9uLmdldFNhdmVkUmFuZ2UoKTtcclxuLy8gICAgIGNvbnN0IHNlbGVjdGVkVGV4dCA9IHJhbmdlLnRvU3RyaW5nKCkudHJpbSgpO1xyXG4vLyAgICAgaWYgKCFzZWxlY3RlZFRleHQpIHJldHVybjtcclxuXHJcbi8vICAgICBjb25zdCBjb250YWluZXIgPSByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcclxuXHJcbi8vICAgICAvLyBWZXJpZmljYXIgc2UgYSBzZWxlw6fDo28gYXR1YWwgZXN0w6EgZGVudHJvIGRlIHVtYSB0YWcgZXNwZWPDrWZpY2FcclxuLy8gICAgIGxldCBmb3JtYXR0ZWRFbGVtZW50ID0gbnVsbDtcclxuXHJcbi8vICAgICBpZiAoY29udGFpbmVyLm5vZGVUeXBlID09PSAzKSB7IC8vIE7DsyBkZSB0ZXh0b1xyXG4vLyAgICAgICAgIGZvcm1hdHRlZEVsZW1lbnQgPSBjb250YWluZXIucGFyZW50Tm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09IHRhZ05hbWUudG9Mb3dlckNhc2UoKSA/IGNvbnRhaW5lci5wYXJlbnROb2RlIDogbnVsbDtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgZm9ybWF0dGVkRWxlbWVudCA9IGNvbnRhaW5lci50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09IHRhZ05hbWUudG9Mb3dlckNhc2UoKSA/IGNvbnRhaW5lciA6IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKHRhZ05hbWUpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIGlmIChmb3JtYXR0ZWRFbGVtZW50KSB7XHJcbi8vICAgICAgICAgLy8gQSBzZWxlw6fDo28gZXN0w6EgZGVudHJvIGRhIGZvcm1hdGHDp8OjbyBlc3BlY2lmaWNhZGEsIGVudMOjbyBkZXZlbW9zIHJlbW92ZXJcclxuLy8gICAgICAgICBjb25zdCBwYXJlbnQgPSBmb3JtYXR0ZWRFbGVtZW50LnBhcmVudE5vZGU7XHJcbi8vICAgICAgICAgd2hpbGUgKGZvcm1hdHRlZEVsZW1lbnQuZmlyc3RDaGlsZCkge1xyXG4vLyAgICAgICAgICAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGZvcm1hdHRlZEVsZW1lbnQuZmlyc3RDaGlsZCwgZm9ybWF0dGVkRWxlbWVudCk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChmb3JtYXR0ZWRFbGVtZW50KTtcclxuXHJcbi8vICAgICAgICAgLy8gTWVzY2xhciBuw7NzIGRlIHRleHRvIGFkamFjZW50ZXNcclxuLy8gICAgICAgICBwYXJlbnQubm9ybWFsaXplKCk7XHJcblxyXG4vLyAgICAgICAgIC8vIEF0dWFsaXphciBhIHNlbGXDp8OjbyBwYXJhIHJlZmxldGlyIGFzIG11ZGFuw6dhc1xyXG4vLyAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHBhcmVudCwgMCk7XHJcbi8vICAgICAgICAgcmFuZ2Uuc2V0RW5kKHBhcmVudCwgcGFyZW50LmNoaWxkTm9kZXMubGVuZ3RoKTtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgLy8gQSBzZWxlw6fDo28gbsOjbyBlc3TDoSBuYSBmb3JtYXRhw6fDo28gZXNwZWNpZmljYWRhLCBlbnTDo28gYWRpY2lvbmFyXHJcbi8vICAgICAgICAgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XHJcblxyXG4vLyAgICAgICAgIGlmICh0YWdOYW1lID09ICdtYXJrJykge1xyXG4vLyAgICAgICAgICAgICBsZXQgY2xhc3NlcyA9IGNsYXNzTGlzdC5zcGxpdCgnLCcpLmZpbHRlcihlID0+IGUubGVuZ3RoID4gMCk7XHJcblxyXG4vLyAgICAgICAgICAgICBmb3IgKGxldCBjbGFzc05hbWUgb2YgY2xhc3Nlcykge1xyXG4vLyAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICB9XHJcblxyXG4vLyAgICAgICAgIHRyeSB7XHJcbi8vICAgICAgICAgICAgIHJhbmdlLnN1cnJvdW5kQ29udGVudHMobmV3RWxlbWVudCk7XHJcbi8vICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4vLyAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBhcGxpY2FyIGEgdGFnOlwiLCBlKTtcclxuLy8gICAgICAgICAgICAgcmV0dXJuO1xyXG4vLyAgICAgICAgIH1cclxuXHJcbi8vICAgICAgICAgLy8gQXR1YWxpemFyIGEgc2VsZcOnw6NvIHBhcmEgcmVmbGV0aXIgYXMgbXVkYW7Dp2FzXHJcbi8vICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKG5ld0VsZW1lbnQpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIC8vIFJlc3RhdXJhciBhIHNlbGXDp8Ojb1xyXG4vLyAgICAgLy8gc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xyXG4vLyAgICAgLy8gc2VsZWN0aW9uLmFkZFJhbmdlKHJhbmdlKTtcclxuXHJcbi8vICAgICByZXR1cm4gbmV3RWxlbWVudDtcclxuLy8gfVxyXG5cclxuXHJcbi8vIGZ1bmN0aW9uIGNsZWFyU2VsZWN0aW9uKCkge1xyXG4vLyAgICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xyXG4vLyAgICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xyXG4vLyB9XHJcblxyXG5cclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuXHJcbi8vICAgICAvL01PVVNFLVVQXHJcbi8vICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbi8vICAgICAgICAgaWYgKHdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpLnRyaW0oKSAhPT0gJycpIHtcclxuXHJcbi8vICAgICAgICAgICAgIGNsZWFyVGV4dEZvcm1hdHRpbmdCdXR0b25BY3RpdmUoKTtcclxuLy8gICAgICAgICAgICAgc2hvd2Zsb2F0aW5nVG9vbGJhcihldmVudCk7XHJcbi8vICAgICAgICAgICAgIHVwZGF0ZVRleHRGb3JtYXR0aW5nQWN0aXZlQnV0dG9ucygpO1xyXG5cclxuLy8gICAgICAgICB9IGVsc2UgaWYgKCFldmVudC50YXJnZXQuY2xvc2VzdCgnI2xpbmtCb3gnKSAmJiAhZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJyNsaW5rLXRleHQtYnV0dG9uJykpIHtcclxuXHJcbi8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdNT1VTRVVQIG9jdWx0YXIgdG9vbCB0ZXh0LWZvcm1hdHRpbmctYmFyIGUgbGluay1ib3gnKTtcclxuXHJcbi8vICAgICAgICAgICAgIHRyeUhpZGVmbG9hdGluZ1Rvb2xiYXIoKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICAvL0tFWVxyXG4vLyAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuLy8gICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnU2hpZnQnICYmIHdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpLnRyaW0oKSAhPT0gJycpIHtcclxuLy8gICAgICAgICAgICAgLy8gdGV4dCBzZWxlY3RlZFxyXG5cclxuLy8gICAgICAgICAgICAgc2hvd2Zsb2F0aW5nVG9vbGJhcihldmVudCk7XHJcblxyXG4vLyAgICAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4vLyAgICAgICAgICAgICAvLyBzY2FwZSBoaWRlIHRoZSBsaW5rLWJveCBhbmQgdGV4dC1mb3JtYXR0aW5nLWJhclxyXG4vLyAgICAgICAgICAgICBjb25zb2xlLmxvZygnRVNDIG9jdWx0YXIgdG9vbCB0ZXh0LWZvcm1hdHRpbmctYmFyIGUgbGluay1ib3gnKTtcclxuXHJcbi8vICAgICAgICAgICAgIHRyeUhpZGVmbG9hdGluZ1Rvb2xiYXIoKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KTtcclxuXHJcbi8vIH0pO1xyXG5cclxuXHJcblxyXG5cclxuLy8gZnVuY3Rpb24gYWRqdXN0V2lkdGgoKSB7XHJcbi8vICAgICBjb25zdCBzZWxlY3RlZE9wdGlvbiA9IHR1cm5JbnRvU2VsZWN0Lm9wdGlvbnNbdHVybkludG9TZWxlY3Quc2VsZWN0ZWRJbmRleF07XHJcbi8vICAgICBjb25zdCB0ZW1wU3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4vLyAgICAgdGVtcFNwYW4uc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XHJcbi8vICAgICB0ZW1wU3Bhbi5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcclxuLy8gICAgIHRlbXBTcGFuLnN0eWxlLndoaXRlU3BhY2UgPSBcIm5vd3JhcFwiO1xyXG4vLyAgICAgdGVtcFNwYW4uaW5uZXJUZXh0ID0gc2VsZWN0ZWRPcHRpb24udGV4dDtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGVtcFNwYW4pO1xyXG4vLyAgICAgdHVybkludG9TZWxlY3Quc3R5bGUud2lkdGggPSB0ZW1wU3Bhbi5vZmZzZXRXaWR0aCArIDI0ICsgXCJweFwiOyAvLyArMjAgcGFyYSBpbmNsdWlyIG8gcGFkZGluZyBlIG8gYm90w6NvIGRlIGRyb3Bkb3duXHJcbi8vICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRlbXBTcGFuKTtcclxuLy8gfVxyXG5cclxuXHJcblxyXG5cclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIHR1cm5JbnRvQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG5cclxuLy8gICAgICAgICBpZiAodHVybkludG9TZWxlY3Quc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcclxuLy8gICAgICAgICAgICAgY2xvc2VBbGxEZXBlbmRlbnRCb3goKTtcclxuLy8gICAgICAgICAgICAgdHVybkludG9TZWxlY3Quc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcclxuLy8gICAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgICAgICB0dXJuSW50b1NlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG4vLyB9KTtcclxuXHJcblxyXG5mdW5jdGlvbiBjaGFuZ2VUdXJuSW50b0J1dHRvblRleHQoKSB7XHJcblxyXG4gICAgbGV0IHRleHQgPSBnZXRCbG9ja1R5cGVUZXh0KCk7XHJcblxyXG4gICAgdHVybkludG9CdXR0b24ucXVlcnlTZWxlY3Rvcignc3BhbicpLmlubmVyVGV4dCA9IHRleHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEJsb2NrVHlwZVRleHQoKSB7XHJcbiAgICBsZXQgY3VycmVudEJsb2NrUmFuZ2UgPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCkuZ2V0UmFuZ2VBdCgwKTtcclxuXHJcbiAgICBsZXQgY29tbW9uQW5jZXN0b3IgPSBjdXJyZW50QmxvY2tSYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcclxuXHJcbiAgICBpZiAoY29tbW9uQW5jZXN0b3Iubm9kZVR5cGUgPT09IDMpIHsgLy8qIHRleHQgbm9kZSAqL1xyXG4gICAgICAgIGNvbW1vbkFuY2VzdG9yID0gY29tbW9uQW5jZXN0b3IucGFyZW50Tm9kZTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBjdXJyZW50QmxvY2sgPSBjb21tb25BbmNlc3Rvci5jbG9zZXN0KCcuam9oYW5uZXMtY29udGVudC1lbGVtZW50Jyk7XHJcblxyXG4gICAgaWYgKGN1cnJlbnRCbG9jay50YWdOYW1lID09PSAnSDEnKSB7XHJcbiAgICAgICAgcmV0dXJuICdIZWFkaW5nIDEnO1xyXG4gICAgfSBlbHNlIGlmIChjdXJyZW50QmxvY2sudGFnTmFtZSA9PT0gJ0gyJykge1xyXG4gICAgICAgIHJldHVybiAnSGVhZGluZyAyJztcclxuICAgIH0gZWxzZSBpZiAoY3VycmVudEJsb2NrLnRhZ05hbWUgPT09ICdIMycpIHtcclxuICAgICAgICByZXR1cm4gJ0hlYWRpbmcgMyc7XHJcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRCbG9jay50YWdOYW1lID09PSAnSDQnKSB7XHJcbiAgICAgICAgcmV0dXJuICdIZWFkaW5nIDQnO1xyXG4gICAgfSBlbHNlIGlmIChjdXJyZW50QmxvY2sudGFnTmFtZSA9PT0gJ0g1Jykge1xyXG4gICAgICAgIHJldHVybiAnSGVhZGluZyA1JztcclxuICAgIH0gZWxzZSBpZiAoY3VycmVudEJsb2NrLnRhZ05hbWUgPT09ICdINicpIHtcclxuICAgICAgICByZXR1cm4gJ0hlYWRpbmcgNic7XHJcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRCbG9jay50YWdOYW1lID09PSAnUCcpIHtcclxuICAgICAgICByZXR1cm4gJ1RleHQnO1xyXG4gICAgfSBlbHNlIGlmIChjdXJyZW50QmxvY2sudGFnTmFtZSA9PT0gJ1VMJyAmJiBjdXJyZW50QmxvY2suY2xhc3NMaXN0LmNvbnRhaW5zKCdjaGVja2JveC1saXN0JykpIHtcclxuICAgICAgICByZXR1cm4gJ1RvZG8gbGlzdCc7XHJcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRCbG9jay50YWdOYW1lID09PSAnVUwnKSB7XHJcbiAgICAgICAgcmV0dXJuICdCdWxsZXRlZCBsaXN0JztcclxuICAgIH0gZWxzZSBpZiAoY3VycmVudEJsb2NrLnRhZ05hbWUgPT09ICdPTCcpIHtcclxuICAgICAgICByZXR1cm4gJ051bWJlcmVkIGxpc3QnO1xyXG4gICAgfSBlbHNlIGlmIChjdXJyZW50QmxvY2sudGFnTmFtZSA9PT0gJ0JMT0NLUVVPVEUnKSB7XHJcbiAgICAgICAgcmV0dXJuICdRdW90ZSc7XHJcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRCbG9jay50YWdOYW1lID09PSAnUFJFJykge1xyXG4gICAgICAgIHJldHVybiAnQ29kZSc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldFR1cm5JbnRvQ3VycmVudFNlbGVjdGVkQmxvY2tPcHRpb25JY29uKCkge1xyXG4gICAgbGV0IGJsb2NrID0gZ2V0Q3VycmVudERyYWdnYWJsZUJsb2NrRm9jdXNlZCgpLnF1ZXJ5U2VsZWN0b3IoJy5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQnKTtcclxuXHJcbiAgICBpZiAoYmxvY2spIHtcclxuICAgICAgICBsZXQgdHlwZSA9IGJsb2NrLmdldEF0dHJpYnV0ZSgnZGF0YS10eXBlJyk7XHJcbiAgICAgICAgbGV0IG9wdGlvbiA9IHR1cm5JbnRvU2VsZWN0LnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLXR5cGU9XCIke3R5cGV9XCJdYCk7XHJcblxyXG4gICAgICAgIGlmIChvcHRpb24pIHtcclxuICAgICAgICAgICAgbGV0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwic3ZnXCIpO1xyXG4gICAgICAgICAgICBzdmcuY2xhc3NMaXN0LmFkZCgnY2hlY2tlZC1zdmcnKTtcclxuICAgICAgICAgICAgbGV0IHVzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidXNlXCIpO1xyXG4gICAgICAgICAgICB1c2Uuc2V0QXR0cmlidXRlTlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsIFwiaHJlZlwiLCBcIiNpY29uLW1hdGVyaWFsLXNtYWxsLWNoZWNrXCIpO1xyXG5cclxuXHJcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh1c2UpO1xyXG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxNicpO1xyXG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCAnMTYnKTtcclxuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdjdXJyZW50Q29sb3InKTtcclxuXHJcbiAgICAgICAgICAgIC8vIGxldCB0ZXh0T3B0aW9uID0gb3B0aW9uLnF1ZXJ5U2VsZWN0b3IoJy50ZXh0LW9wdGlvbicpO1xyXG4gICAgICAgICAgICBvcHRpb24uYXBwZW5kQ2hpbGQoc3ZnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGV4dHJhY3RNYXJrQ2xhc3NlcyhlbGVtZW50KSB7XHJcbiAgICBjb25zdCBtYXJrcyA9IGVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnbWFyaycpO1xyXG4gICAgY29uc3QgY2xhc3NlcyA9IFtdO1xyXG5cclxuICAgIG1hcmtzLmZvckVhY2gobWFyayA9PiB7XHJcbiAgICAgICAgbWFyay5jbGFzc0xpc3QuZm9yRWFjaChjbHMgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWNsYXNzZXMuaW5jbHVkZXMoY2xzKSkge1xyXG4gICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKGNscyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBjbGFzc2VzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRDb2xvckN1cnJlbnRTZWxlY3RlZEljb24oKSB7XHJcbiAgICBsZXQgY3VycmVudFJhbmdlID0galNlbGVjdGlvbi5nZXRTYXZlZFJhbmdlKCk7XHJcblxyXG4gICAgaWYgKGN1cnJlbnRSYW5nZSkge1xyXG4gICAgICAgIGxldCBmcmFnbWVudCA9IGN1cnJlbnRSYW5nZS5jbG9uZUNvbnRlbnRzKCk7XHJcblxyXG4gICAgICAgIGxldCB0ZW1wRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICB0ZW1wRGl2LmFwcGVuZENoaWxkKGZyYWdtZW50KTtcclxuXHJcbiAgICAgICAgbGV0IG1hcmtzID0gZXh0cmFjdE1hcmtDbGFzc2VzKHRlbXBEaXYpO1xyXG5cclxuICAgICAgICBtYXJrcy5mb3JFYWNoKG1hcmtDbGFzcyA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBjb2xvclRleHRPcHRpb25TZWxlY3QucXVlcnlTZWxlY3RvcihgW2RhdGEtY2xhc3M9XCIke21hcmtDbGFzc31cIl1gKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChvcHRpb24gJiYgIW9wdGlvbi5xdWVyeVNlbGVjdG9yKCcuY2hlY2tlZC1zdmcnKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwic3ZnXCIpO1xyXG4gICAgICAgICAgICAgICAgc3ZnLmNsYXNzTGlzdC5hZGQoJ2NoZWNrZWQtc3ZnJyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgdXNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ1c2VcIik7XHJcbiAgICAgICAgICAgICAgICB1c2Uuc2V0QXR0cmlidXRlTlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsIFwiaHJlZlwiLCBcIiNpY29uLW1hdGVyaWFsLXNtYWxsLWNoZWNrXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh1c2UpO1xyXG4gICAgICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCAnMTYnKTtcclxuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxNicpO1xyXG4gICAgICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdjdXJyZW50Q29sb3InKTtcclxuXHJcbiAgICAgICAgICAgICAgICBvcHRpb24uYXBwZW5kQ2hpbGQoc3ZnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBpZiAobWFya3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQgb3B0aW9ucyA9IGNvbG9yVGV4dE9wdGlvblNlbGVjdC5xdWVyeVNlbGVjdG9yQWxsKCcub3B0aW9uJyk7XHJcblxyXG4gICAgICAgICAgICBvcHRpb25zLmZvckVhY2gob3B0aW9uID0+IHtcclxuICAgICAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ3RydWUnKTtcclxuICAgICAgICAgICAgICAgIG9wdGlvbi5zdHlsZS5jdXJzb3IgPSBcIm5vdC1hbGxvd2VkXCI7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgY2xlYXJDb2xvckJhY2tncm91bmRPcHRpb24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICBjbGVhckNvbG9yQmFja2dyb3VuZE9wdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgICAgICAgICBjbGVhckNvbG9yQmFja2dyb3VuZE9wdGlvbi5zdHlsZS5jdXJzb3IgPSBcImF1dG9cIjtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY2xlYXJDb2xvckJhY2tncm91bmRPcHRpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlQWxsU1ZHc0Zyb21UdXJuSW50b1RleHRPcHRpb25zKCkge1xyXG4gICAgY29uc3QgdGV4dE9wdGlvbnMgPSB0dXJuSW50b1NlbGVjdC5xdWVyeVNlbGVjdG9yQWxsKCcub3B0aW9uJyk7XHJcblxyXG4gICAgdGV4dE9wdGlvbnMuZm9yRWFjaCh0ZXh0T3B0aW9uID0+IHtcclxuICAgICAgICBjb25zdCBzdmdzID0gdGV4dE9wdGlvbi5xdWVyeVNlbGVjdG9yQWxsKCcuY2hlY2tlZC1zdmcnKTtcclxuXHJcbiAgICAgICAgc3Zncy5mb3JFYWNoKHN2ZyA9PiB7XHJcbiAgICAgICAgICAgIHN2Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN2Zyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlQWxsU1ZHc0Zyb21Db2xvcnNUZXh0T3B0aW9ucygpIHtcclxuICAgIGNvbnN0IHRleHRPcHRpb25zID0gY29sb3JUZXh0T3B0aW9uU2VsZWN0LnF1ZXJ5U2VsZWN0b3JBbGwoJy5vcHRpb24nKTtcclxuXHJcbiAgICB0ZXh0T3B0aW9ucy5mb3JFYWNoKHRleHRPcHRpb24gPT4ge1xyXG4gICAgICAgIGNvbnN0IHN2Z3MgPSB0ZXh0T3B0aW9uLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jaGVja2VkLXN2ZycpO1xyXG5cclxuICAgICAgICBzdmdzLmZvckVhY2goc3ZnID0+IHtcclxuICAgICAgICAgICAgc3ZnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3ZnKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBvcHRpb25zID0gY29sb3JUZXh0T3B0aW9uU2VsZWN0LnF1ZXJ5U2VsZWN0b3JBbGwoJy5vcHRpb24nKTtcclxuXHJcbiAgICBvcHRpb25zLmZvckVhY2gob3B0aW9uID0+IHtcclxuICAgICAgICBvcHRpb24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgIG9wdGlvbi5zdHlsZS5jdXJzb3IgPSBcImF1dG9cIjtcclxuICAgIH0pO1xyXG5cclxuICAgIGNsZWFyQ29sb3JCYWNrZ3JvdW5kT3B0aW9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICBjbGVhckNvbG9yQmFja2dyb3VuZE9wdGlvbi5zdHlsZS5jdXJzb3IgPSBcImF1dG9cIjtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVNb3JlT3B0aW9uc0JveChldmVudCkge1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCd0b2dnbGUgbW9yZSBvcHRpb25zJyk7XHJcblxyXG4gICAgY29uc3QgaXNIaWRkZW4gPSBtb3JlVGV4dE9wdGlvblNlbGVjdC5zdHlsZS5kaXNwbGF5ID09ICdub25lJztcclxuXHJcbiAgICBpZiAoaXNIaWRkZW4pIHtcclxuICAgICAgICBtb3JlVGV4dE9wdGlvblNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgICAgIHNob3dEZXBlbmRlbnRCbG9ja09wdGlvbnMoZXZlbnQudGFyZ2V0KTtcclxuXHJcbiAgICAgICAgalNlbGVjdGlvbi50ZW1wb3JhcnlTZWxlY3RDb250ZW50RnJvbUN1cnJlbnRTZWxlY3Rpb24oKTtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGhpZGVNb3JlT3B0aW9uc0JveCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGhpZGVDaGFuZ2VDb2xvckJveCgpO1xyXG4gICAgaGlkZVR1cm5JbnRvQm94KCk7XHJcbiAgICBoaWRlTGlua0JveCgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlQ2hhbmdlQ29sb3JCb3goZXZlbnQpIHtcclxuXHJcbiAgICBjb25zb2xlLmxvZygndG9nZ2xlIGNoYW5nZSBjb2xvcicpO1xyXG5cclxuICAgIGNvbnN0IGlzSGlkZGVuID0gY29sb3JUZXh0T3B0aW9uU2VsZWN0LnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnO1xyXG5cclxuICAgIGlmIChpc0hpZGRlbikge1xyXG4gICAgICAgIGNvbG9yVGV4dE9wdGlvblNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgICAgIHNob3dEZXBlbmRlbnRCbG9ja09wdGlvbnMoZXZlbnQudGFyZ2V0KTtcclxuXHJcbiAgICAgICAgcmVtb3ZlQWxsU1ZHc0Zyb21Db2xvcnNUZXh0T3B0aW9ucygpO1xyXG4gICAgICAgIHNldENvbG9yQ3VycmVudFNlbGVjdGVkSWNvbigpO1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29sb3JUZXh0T3B0aW9uU2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB9XHJcblxyXG4gICAgaGlkZVR1cm5JbnRvQm94KCk7XHJcbiAgICBoaWRlTW9yZU9wdGlvbnNCb3goKTtcclxuICAgIGhpZGVMaW5rQm94KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVUdXJuSW50b0JveChldmVudCkge1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCd0b2dnbGUgdHVybiBpbnRvIGJveCcpO1xyXG5cclxuICAgIGNvbnN0IGlzSGlkZGVuID0gdHVybkludG9TZWxlY3Quc3R5bGUuZGlzcGxheSA9PSAnbm9uZSc7XHJcblxyXG4gICAgaWYgKGlzSGlkZGVuKSB7XHJcbiAgICAgICAgdHVybkludG9TZWxlY3Quc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcclxuICAgICAgICBqU2VsZWN0aW9uLnRlbXBvcmFyeVNlbGVjdENvbnRlbnRGcm9tQ3VycmVudFNlbGVjdGlvbigpO1xyXG5cclxuICAgICAgICBzaG93RGVwZW5kZW50QmxvY2tPcHRpb25zKGV2ZW50LnRhcmdldCk7XHJcbiAgICAgICAgcmVtb3ZlQWxsU1ZHc0Zyb21UdXJuSW50b1RleHRPcHRpb25zKCk7XHJcbiAgICAgICAgc2V0VHVybkludG9DdXJyZW50U2VsZWN0ZWRCbG9ja09wdGlvbkljb24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaGlkZVR1cm5JbnRvQm94KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaGlkZUNoYW5nZUNvbG9yQm94KCk7XHJcbiAgICBoaWRlTW9yZU9wdGlvbnNCb3goKTtcclxuICAgIGhpZGVMaW5rQm94KCk7XHJcbn1cclxuXHJcbi8vKipTaG93ICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVJbnB1dExpbmtCb3goKSB7XHJcblxyXG5cclxuICAgIGNvbnNvbGUubG9nKCd0b2dnbGUgaW5wdXQgbGluayBib3gnKTtcclxuXHJcbiAgICBjb25zdCBpc0hpZGRlbiA9IGxpbmtCb3guc3R5bGUuZGlzcGxheSA9PSAnbm9uZSc7XHJcblxyXG4gICAgaWYgKGlzSGlkZGVuKSB7XHJcbiAgICAgICAgLy8gdHVybkludG9TZWxlY3Quc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcclxuXHJcbiAgICAgICAgc2hvd0lucHV0TGlua0JveCgpO1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdHVybkludG9TZWxlY3Quc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIH1cclxuXHJcbiAgICBoaWRlQ2hhbmdlQ29sb3JCb3goKTtcclxuICAgIGhpZGVNb3JlT3B0aW9uc0JveCgpO1xyXG4gICAgaGlkZVR1cm5JbnRvQm94KCk7XHJcbn1cclxuXHJcblxyXG5cclxuZnVuY3Rpb24gc2hvd0lucHV0TGlua0JveCgpIHtcclxuXHJcbiAgICBjb25zdCByZWN0ID0galNlbGVjdGlvbi5nZXRTYXZlZFJhbmdlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgY29uc3QgY29udGFpbmVyV2lkdGggPSBmbG9hdGluZ1Rvb2xiYXIub2Zmc2V0V2lkdGg7XHJcbiAgICBjb25zdCBsaW5rSW5wdXREaXZXaWR0aCA9IGxpbmtCb3gub2Zmc2V0V2lkdGg7XHJcbiAgICBjb25zdCBjb250YWluZXJDZW50ZXIgPSAoZmxvYXRpbmdUb29sYmFyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgKyBjb250YWluZXJXaWR0aCkgLyAyO1xyXG4gICAgY29uc3QgbGlua0lucHV0RGl2Q2VudGVyID0gKGxpbmtCb3guZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCArIGxpbmtJbnB1dERpdldpZHRoKSAvIDI7XHJcblxyXG4gICAgbGlua0JveC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgICBsaW5rQm94LnN0eWxlLmxlZnQgPSBgJHtjb250YWluZXJDZW50ZXIgLSBsaW5rSW5wdXREaXZDZW50ZXIgKyB3aW5kb3cuc2Nyb2xsWH1weGA7XHJcbiAgICBsaW5rQm94LnN0eWxlLnRvcCA9IGAke3JlY3QuYm90dG9tICsgd2luZG93LnNjcm9sbFkgKyA1fXB4YDtcclxuICAgIGxpbmtCb3guc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblxyXG4gICAgLy8gbGlua0JveElucHV0LmZvY3VzKCk7XHJcblxyXG4gICAgaGlnaGxpZ2h0VGhlU2VsZWN0aW9uVGV4dCgpO1xyXG5cclxufVxyXG5cclxuLy9UaGUgaGlnaGxpZ2h0IGlzIGFkZGVkIHVzaW5nIGEgYW5jaG9yLiBJdCdzIG9rPyBJIHN3YXAgdG8gc3BhblxyXG5mdW5jdGlvbiBoaWdobGlnaHRUaGVTZWxlY3Rpb25UZXh0KCkge1xyXG4gICAgY29uc3QgYSA9IHRvZ2dsZVNlbGVjdGVkVGV4dFRvKCdhJyk7XHJcbiAgICBqQW5jaG9yLnNldEFuY2hvcihhKTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLy8gdG9nZ2xlLWNoYW5nZS1jb2xvci1mb3JtYXR0aW5nLWJhclxyXG5cclxuLy9TaG93IGNvbG9yIG9wdGlvbnNcclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIGNvbG9yVGV4dEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICAgICBpZiAoY29sb3JUZXh0T3B0aW9uU2VsZWN0LnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnKSB7XHJcbi8vICAgICAgICAgICAgIHNob3dDb2xvck9wdGlvbnMoKTtcclxuLy8gICAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgICAgICBoaWRlQ29sb3JPcHRpb25zKCk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfSk7XHJcbi8vIH0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5mdW5jdGlvbiBzaG93Q29sb3JPcHRpb25zKCkge1xyXG4gICAgaGlkZUFsbERlcGVuZGVudEJveCgpO1xyXG4gICAgY29sb3JUZXh0T3B0aW9uU2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbn1cclxuXHJcblxyXG5cclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIGNvbG9yVGV4dE9wdGlvblNlbGVjdC5xdWVyeVNlbGVjdG9yQWxsKCcub3B0aW9uJykuZm9yRWFjaChvcHRpb24gPT4ge1xyXG4vLyAgICAgICAgIG9wdGlvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xyXG4vLyAgICAgICAgICAgICBsZXQgYmFja2dyb3VuZCA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCcub3B0aW9uJykuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbG9yJyk7XHJcbi8vICAgICAgICAgICAgIHRvZ2dsZVNlbGVjdGVkVGV4dFRvKCdtYXJrJywgYmFja2dyb3VuZCk7XHJcbi8vICAgICAgICAgICAgIGNsZWFyU2VsZWN0aW9uKCk7XHJcbi8vICAgICAgICAgICAgIHRyeUhpZGVmbG9hdGluZ1Rvb2xiYXIoKTtcclxuLy8gICAgICAgICB9KTtcclxuLy8gICAgIH0pO1xyXG4vLyB9KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZnVuY3Rpb24gdHJ5SGlkZWZsb2F0aW5nVG9vbGJhcigpIHtcclxuXHJcbiAgICAvLyBjaGVjayBiZWZvcmUgaWYgYSBkZXBlbmRlbnQgYm94IGlzIG9wZW5lZCwgdGhlbiBjbG9zZSB0aGUgZGVwZW5kZW50IGJveFxyXG5cclxuICAgIC8vMS4gdHJ5ICBjbG9zZSB0ZXh0LWZvcm1hdHRpbmctYmFyIGJlZm9yZSBsaW5rQm94ICh0aGUgYWN0dWFsIG9ubHkgb25lIGRlcGVuZGVuY3kgYm94KVxyXG4gICAgaWYgKGlzU2hvd2luZ2Zsb2F0aW5nVG9vbGJhcigpICYmICFhbnlEZXBlbmRlbnRCb3hWaXNpYmxlKCkpIHtcclxuICAgICAgICAvLyBvbmx5IGhpZGUgaWYgdGhlIGRlcGVuZGVuY3kgYm94IGlzIGNsb3NlZFxyXG4gICAgICAgIGZsb2F0aW5nVG9vbGJhci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIC8vIHJlc3RvcmVTZWxlY3Rpb24oKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyAyLiBjbG9zZSB0aGUgZGVwZW5kZW5jeSBib3ggKGxpbmtCb3gpXHJcbiAgICBpZiAoYW55RGVwZW5kZW50Qm94VmlzaWJsZSgpKSB7XHJcblxyXG4gICAgICAgIC8vIFJlbW92ZSBhIGlmIGhhcyBubyBocmVmIGF0dHJpYnV0ZSBvciBpZiBocmVmIGlzIGVtcHR5XHJcbiAgICAgICAgLy9Nb3ZlIHRoaXMgdG8gYSBsb2dpYyBpbnNpZGUgdGhlIGxpbmtpbmcgYm94XHJcbiAgICAgICAgLy8gaWYgKGFuY2hvckVsZW1lbnQgJiYgKGFuY2hvckVsZW1lbnQuaHJlZiA9PSAnJyB8fCBhbmNob3JFbGVtZW50LmhyZWYgPT0gbnVsbCkpIHtcclxuICAgICAgICAvLyAgICAgY29uc3QgcGFyZW50ID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlO1xyXG4gICAgICAgIC8vICAgICB3aGlsZSAoYW5jaG9yRWxlbWVudC5maXJzdENoaWxkKSB7XHJcbiAgICAgICAgLy8gICAgICAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGFuY2hvckVsZW1lbnQuZmlyc3RDaGlsZCwgYW5jaG9yRWxlbWVudCk7XHJcbiAgICAgICAgLy8gICAgIH1cclxuXHJcbiAgICAgICAgLy8gICAgIGlmIChwYXJlbnQpIHtcclxuICAgICAgICAvLyAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChhbmNob3JFbGVtZW50KTtcclxuICAgICAgICAvLyAgICAgICAgIHBhcmVudC5ub3JtYWxpemUoKTsgLy8gTWVzY2xhciBuw7NzIGRlIHRleHRvIGFkamFjZW50ZXMsIHNlIG5lY2Vzc8OhcmlvXHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIC8vIGxpbmtCb3guc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBoaWRlQWxsRGVwZW5kZW50Qm94KCk7XHJcbiAgICAgICAgalNlbGVjdGlvbi5yZXN0b3JlU2VsZWN0aW9uKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFueURlcGVuZGVudEJveFZpc2libGUoKSB7XHJcbiAgICBjb25zdCBkZXBlbmRlbnRCb3hlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kZXBlbmRlbnQtYm94Jyk7XHJcblxyXG4gICAgZm9yIChjb25zdCBib3ggb2YgZGVwZW5kZW50Qm94ZXMpIHtcclxuICAgICAgICBpZiAoYm94LnN0eWxlLmRpc3BsYXkgIT09ICdub25lJykge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmZ1bmN0aW9uIGhpZGVNb3JlT3B0aW9uc0JveCgpIHtcclxuXHJcbiAgICBpZiAobW9yZVRleHRPcHRpb25TZWxlY3Quc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ2hpZGUgbW9yZSBvcHRpb25zJyk7XHJcblxyXG4gICAgbW9yZVRleHRPcHRpb25TZWxlY3Quc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIGpTZWxlY3Rpb24ucmVzdG9yZVNlbGVjdGlvbigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoaWRlVHVybkludG9Cb3goKSB7XHJcblxyXG4gICAgaWYgKHR1cm5JbnRvU2VsZWN0LnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdoaWRlIHR1cm4gaW50byBib3gnKTtcclxuICAgIHR1cm5JbnRvU2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICBqU2VsZWN0aW9uLnJlc3RvcmVTZWxlY3Rpb24oKTtcclxuICAgIC8valNlbGVjdGlvbi5yZXN0b3JlU2VsZWN0aW9uKCk7IC8vVE9ETy4gRG8gSSBuZWVkIHRoaXM/XHJcbiAgICAvL2pTZWxlY3Rpb24ucmVtb3ZlU2F2ZWRTZWxlY3Rpb24oKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGlkZUNoYW5nZUNvbG9yQm94KCkge1xyXG5cclxuICAgIGlmIChjb2xvclRleHRPcHRpb25TZWxlY3Quc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ2hpZGUgY2hhbmdlIGNvbG9yIGJveCcpO1xyXG4gICAgY29sb3JUZXh0T3B0aW9uU2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhpZGVMaW5rQm94KCkge1xyXG5cclxuICAgIGlmIChsaW5rQm94LnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdoaWRlIGxpbmsgYm94Jyk7XHJcblxyXG4gICAgLy8gaWYobGlua0JveC5zdHlsZS5kaXNwbGF5ICE9ICdub25lJyl7XHJcblxyXG4gICAgLy8gfVxyXG4gICAgakFuY2hvci5jbGVhcigpO1xyXG4gICAgalNlbGVjdGlvbi5yZXN0b3JlU2VsZWN0aW9uKCk7XHJcbiAgICBsaW5rQm94LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbn1cclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVBbGxEZXBlbmRlbnRCb3goKSB7XHJcbiAgICBoaWRlTW9yZU9wdGlvbnNCb3goKTtcclxuICAgIGhpZGVUdXJuSW50b0JveCgpO1xyXG4gICAgaGlkZUNoYW5nZUNvbG9yQm94KCk7XHJcbiAgICBoaWRlTGlua0JveCgpO1xyXG59XHJcbiIsImltcG9ydCAqIGFzIGJsb2NrT3BlcmF0aW9uIGZyb20gXCIuLi9ibG9jay1vcGVyYXRpb25cIjtcbmltcG9ydCAqIGFzIGJsb2NrT3B0aW9uT3BlcmF0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvcXVpY2stbWVudS9xdWljay1pbnNlcnQtbWVudSc7XG5pbXBvcnQgKiBhcyBqV2luZG93IGZyb20gJy4uL2otd2luZG93JztcblxuaW1wb3J0IGluc3RhbmNlIGZyb20gXCIuLi9jb21wb25lbnRzL3F1aWNrLW1lbnUvUXVpY2tNZW51XCI7XG5cbmltcG9ydCAqIGFzIGZsb2F0aW5nVG9vbGJhck9wZXJhdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvdGV4dC1mb3JtYXR0aW5nLWJhcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21tYW5kKG9wZXJhdGlvbk5hbWUsIGVsZW1lbnRzID0gbnVsbCkge1xuICAgIHJldHVybiBuZXcgQ29tbWFuZChvcGVyYXRpb25OYW1lLCBlbGVtZW50cyk7XG59XG5cbmNsYXNzIENvbW1hbmQge1xuXG4gICAgY29uc3RydWN0b3Iob3BlcmF0aW9uTmFtZSwgZWxlbWVudHMpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IGVsZW1lbnRzO1xuICAgICAgICB0aGlzLm9wZXJhdGlvbiA9IGdldEJsb2NrT3BlcmF0aW9uRnVuY3Rpb24ob3BlcmF0aW9uTmFtZSk7XG4gICAgfVxuXG4gICAgZXhlY3V0ZSgpIHtcblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnRzICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcGVyYXRpb24oLi4udGhpcy5lbGVtZW50cyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMub3BlcmF0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDApO1xuXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgT1BFUkFUSU9OUyA9IHtcbiAgICBCTE9DSzoge1xuICAgICAgICBDUkVBVEVfTElTVF9FTEVNRU5UOiAnY3JlYXRlLWxpc3QtZWxlbWVudCcsXG4gICAgICAgIENSRUFURV9ORVdfRUxFTUVOVDogJ2NyZWF0ZS1uZXctZWxlbWVudCcsXG4gICAgICAgIERFTEVURV9EUkFHR0FCTEVfQkxPQ0s6ICdkZWxldGUtYmxvY2snLFxuICAgICAgICBERUxFVEVfQU5EX0ZPQ1VTX09OX05FWFQ6ICdkZWxldGUtYW5kLWZvY3VzLW9uLW5leHQnLFxuICAgICAgICBERUxFVEVfQU5EX0ZPQ1VTX09OX1BSRVZJT1VTOiAnZGVsZXRlLWFuZC1mb2N1cy1vbi1wcmV2aW91cycsXG4gICAgICAgIERVUExJQ0FURV9TRUxFQ1RFRF9CTE9DSzogJ2R1cGxpY2F0ZS1zZWxlY3RlZC1ibG9jaycsXG4gICAgICAgIFRSQU5TRk9STV9CTE9DSzogJ3RyYW5zZm9ybS1ibG9jaycsXG4gICAgICAgIE1PVkVfVVBfQkxPQ0s6ICdtb3ZlLXVwLWJsb2NrJyxcbiAgICAgICAgTU9WRV9ET1dOX0JMT0NLOiAnbW92ZS1kb3duLWJsb2NrJyxcbiAgICAgICAgU0hPV19UVVJOX0lOVE9fQk9YOiAnc2hvdy10dXJuLWludG8tYm94JyxcbiAgICAgICAgU0hPV19DT0xPUl9CT1g6ICdzaG93LWNvbG9yLWJveCcsXG4gICAgICAgIFNIT1dfTU9SRV9PUFRJT05TX0JPWDogJ3Nob3ctbW9yZS1vcHRpb25zLWJveCdcbiAgICB9LFxuICAgIEJMT0NLX09QVElPTlM6IHtcbiAgICAgICAgU0hPV19CTE9DS19PUFRJT05TOiAnc2hvdy1ibG9jay1vcHRpb25zJyxcbiAgICAgICAgSElERV9DTEVBUl9CTE9DS19PUFRJT05TOiAnaGlkZS1jbGVhci1ibG9jay1vcHRpb25zJyxcbiAgICAgICAgTU9WRV9GQUtFX0ZPQ1VTX1RPX05FWFRfT1BUSU9OOiAnbW92ZS1mYWtlLWZvY3VzLXRvLW5leHQtb3B0aW9uJyxcbiAgICAgICAgTU9WRV9GQUtFX0ZPQ1VTX1RPX1BSRVZJT1VTX09QVElPTjogJ21vdmUtZmFrZS1mb2N1cy10by1wcmV2aW91cy1vcHRpb24nLFxuICAgICAgICBBUFBMWV9TRUxFQ1RFRF9CTE9DS19UWVBFOiAnYXBwbHktc2VsZWN0ZWQtYmxvY2stdHlwZScsXG4gICAgICAgIEZJTFRFUl9DT05DQVQ6ICdmaWx0ZXItY29udGFjdCcsXG4gICAgICAgIEZJTFRFUl9SRU1PVkVfTEFTVDogJ2ZpbHRlci1yZW1vdmUtbGFzdCcsXG4gICAgfSxcbiAgICBGT1JNQVRUSU5HX0JBUjoge1xuICAgICAgICBTSE9XX1RFWFRfRk9STUFUVElOR19CQVI6ICdzaG93LXRleHQtZm9ybWF0dGluZy1iYXInLFxuICAgICAgICBISURFX1RFWFRfRk9STUFUVElOR19CQVI6ICdoaWRlLXRleHQtZm9ybWF0dGluZy1iYXInLFxuICAgICAgICBUT0dHTEVfTU9SRV9PUFRJT05TX0JPWDogJ3RvZ2dsZS1tb3JlLW9wdGlvbnMtYm94JyxcbiAgICAgICAgVE9HR0xFX0NIQU5HRV9DT0xPUl9CT1g6ICd0b2dnbGUtY2hhbmdlLWNvbG9yLWJveCcsXG4gICAgICAgIFRPR0dMRV9UVVJOX0lOVE9fQk9YOiAndG9nZ2xlLXR1cm4taW50by1ib3gnLFxuICAgICAgICBUT0dHTEVfSU5QVVRfTElOS19CT1g6ICd0b2dnbGUtaW5wdXQtbGluay1ib3gnLFxuICAgICAgICBJTlBVVF9MSU5LX1VSTDogJ2lucHV0LWxpbmstdXJsJyxcbiAgICAgICAgVE9HR0xFX0VOQ0xPU0VfU0VMRUNURURfVEVYVF9UTzogJ3RvZ2dsZS1lbmNsb3NlLXNlbGVjdGVkLXRleHQtdG8nLFxuICAgIH0sXG5cbn07XG5cbmV4cG9ydCBjb25zdCBvcGVyYXRpb25NYXAgPSB7XG4gICAgW09QRVJBVElPTlMuQkxPQ0suQ1JFQVRFX0xJU1RfRUxFTUVOVF06IGJsb2NrT3BlcmF0aW9uLmNyZWF0ZUxpc3RJdGVtLFxuICAgIFtPUEVSQVRJT05TLkJMT0NLLkNSRUFURV9ORVdfRUxFTUVOVF06IGJsb2NrT3BlcmF0aW9uLmNyZWF0ZU5ld0VsZW1lbnQsXG4gICAgW09QRVJBVElPTlMuQkxPQ0suREVMRVRFX0RSQUdHQUJMRV9CTE9DS106IGJsb2NrT3BlcmF0aW9uLmRlbGV0ZURyYWdnYWJsZVBhcmVudEJsb2NrLFxuICAgIFtPUEVSQVRJT05TLkJMT0NLLkRFTEVURV9BTkRfRk9DVVNfT05fTkVYVF06IGJsb2NrT3BlcmF0aW9uLmRlbGV0ZUFuZEZvY3VzT25OZXh0LFxuICAgIFtPUEVSQVRJT05TLkJMT0NLLkRFTEVURV9BTkRfRk9DVVNfT05fUFJFVklPVVNdOiBibG9ja09wZXJhdGlvbi5kZWxldGVBbmRGb2N1c09uUHJldmlvdXMsXG4gICAgW09QRVJBVElPTlMuQkxPQ0suRFVQTElDQVRFX1NFTEVDVEVEX0JMT0NLXTogYmxvY2tPcGVyYXRpb24uZHVwbGljYXRlU2VsZWN0ZWRCbG9jayxcbiAgICBbT1BFUkFUSU9OUy5CTE9DSy5UUkFOU0ZPUk1fQkxPQ0tdOiBibG9ja09wZXJhdGlvbi50cmFuc2Zvcm1CbG9jayxcbiAgICBbT1BFUkFUSU9OUy5CTE9DSy5NT1ZFX1VQX0JMT0NLXTogYmxvY2tPcGVyYXRpb24ubW92ZVVwQmxvY2ssXG4gICAgW09QRVJBVElPTlMuQkxPQ0suTU9WRV9ET1dOX0JMT0NLXTogYmxvY2tPcGVyYXRpb24ubW92ZURvd25CbG9jayxcbiAgICBbT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLlNIT1dfQkxPQ0tfT1BUSU9OU106IGJsb2NrT3B0aW9uT3BlcmF0aW9uLnNob3dNYWluQmxvY2tPcHRpb25zLFxuICAgIFtPUEVSQVRJT05TLkJMT0NLX09QVElPTlMuSElERV9DTEVBUl9CTE9DS19PUFRJT05TXTogYmxvY2tPcHRpb25PcGVyYXRpb24uaGlkZUFuZENsZWFyQmxvY2tPcHRpb25zLFxuICAgIFtPUEVSQVRJT05TLkJMT0NLX09QVElPTlMuTU9WRV9GQUtFX0ZPQ1VTX1RPX05FWFRfT1BUSU9OXTogaW5zdGFuY2UubW92ZVRoZUZha2VGb2N1c1RvVGhlTmV4dE1lbnVJdGVtLCAgIC8vIGJsb2NrT3B0aW9uT3BlcmF0aW9uLm1vdmVUaGVGYWtlRm9jdXNUb1RoZU5leHRCbG9ja09wdGlvbixcbiAgICBbT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLk1PVkVfRkFLRV9GT0NVU19UT19QUkVWSU9VU19PUFRJT05dOiBibG9ja09wdGlvbk9wZXJhdGlvbi5tb3ZlVGhlRmFrZUZvY3VzVG9QcmV2aW91c0Jsb2NrT3B0aW9uLFxuICAgIFtPUEVSQVRJT05TLkJMT0NLX09QVElPTlMuQVBQTFlfU0VMRUNURURfQkxPQ0tfVFlQRV06IGJsb2NrT3B0aW9uT3BlcmF0aW9uLmFwcGx5U2VsZWN0ZWRCbG9ja1R5cGUsXG4gICAgW09QRVJBVElPTlMuQkxPQ0tfT1BUSU9OUy5GSUxURVJfQ09OQ0FUXTogYmxvY2tPcHRpb25PcGVyYXRpb24uZmlsdGVyQ29udGFjdCxcbiAgICBbT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLkZJTFRFUl9SRU1PVkVfTEFTVF06IGJsb2NrT3B0aW9uT3BlcmF0aW9uLmZpbHRlclJlbW92ZUxhc3QsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuU0hPV19URVhUX0ZPUk1BVFRJTkdfQkFSXTogZmxvYXRpbmdUb29sYmFyT3BlcmF0aW9uLnNob3dmbG9hdGluZ1Rvb2xiYXIsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuSElERV9URVhUX0ZPUk1BVFRJTkdfQkFSXTogZmxvYXRpbmdUb29sYmFyT3BlcmF0aW9uLmhpZGVmbG9hdGluZ1Rvb2xiYXIsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuVE9HR0xFX01PUkVfT1BUSU9OU19CT1hdOiBmbG9hdGluZ1Rvb2xiYXJPcGVyYXRpb24udG9nZ2xlTW9yZU9wdGlvbnNCb3gsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuVE9HR0xFX0NIQU5HRV9DT0xPUl9CT1hdOiBmbG9hdGluZ1Rvb2xiYXJPcGVyYXRpb24udG9nZ2xlQ2hhbmdlQ29sb3JCb3gsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuVE9HR0xFX1RVUk5fSU5UT19CT1hdOiBmbG9hdGluZ1Rvb2xiYXJPcGVyYXRpb24udG9nZ2xlVHVybkludG9Cb3gsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuVE9HR0xFX0lOUFVUX0xJTktfQk9YXTogZmxvYXRpbmdUb29sYmFyT3BlcmF0aW9uLnRvZ2dsZUlucHV0TGlua0JveCxcbiAgICBbT1BFUkFUSU9OUy5GT1JNQVRUSU5HX0JBUi5JTlBVVF9MSU5LX1VSTF06IGZsb2F0aW5nVG9vbGJhck9wZXJhdGlvbi5pbnB1dExpbmtVcmwsXG4gICAgW09QRVJBVElPTlMuRk9STUFUVElOR19CQVIuVE9HR0xFX0VOQ0xPU0VfU0VMRUNURURfVEVYVF9UT106IGZsb2F0aW5nVG9vbGJhck9wZXJhdGlvbi50b2dnbGVFbmNsb3NlU2VsZWN0ZWRUZXh0VG8sXG4gICAgW09QRVJBVElPTlMuU0hPV19UVVJOX0lOVE9fQk9YXTogYmxvY2tPcGVyYXRpb24udHJhbnNmb3JtQmxvY2ssXG4gICAgW09QRVJBVElPTlMuU0hPV19DT0xPUl9CT1hdOiBibG9ja09wZXJhdGlvbi50cmFuc2Zvcm1CbG9jayxcbiAgICBbT1BFUkFUSU9OUy5TSE9XX01PUkVfT1BUSU9OU19CT1hdOiBibG9ja09wZXJhdGlvbi50cmFuc2Zvcm1CbG9ja1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJsb2NrT3BlcmF0aW9uRnVuY3Rpb24oYmxvY2tPcGVyYXRpb24pIHtcbiAgICBjb25zdCBvcGVyYXRpb25GdW5jdGlvbiA9IG9wZXJhdGlvbk1hcFtibG9ja09wZXJhdGlvbl07XG4gICAgaWYgKCFvcGVyYXRpb25GdW5jdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ09wZXJhdGlvbiBOb3QgRm91bmQgRXhjZXB0aW9uJyk7XG4gICAgfVxuICAgIHJldHVybiBvcGVyYXRpb25GdW5jdGlvbjtcbn0iLCIvL1RoZSBzdGFydCBwb2ludCBmb3Iga2V5IHByZXNzIGV2ZW50c1xyXG5pbXBvcnQgKiBhcyBjb21tYW5kRmFjdG9yeSBmcm9tICcuLi9jb21tYW5kcy9jb21tYW5kLWZhY3RvcnknO1xyXG5pbXBvcnQgeyBpc1Nob3dpbmdCbG9ja09wdGlvbnMgfSBmcm9tICcuLi9jb21wb25lbnRzL3F1aWNrLW1lbnUvcXVpY2staW5zZXJ0LW1lbnUnO1xyXG5pbXBvcnQgeyBpc1RyaWdnYWJsZSB9IGZyb20gJy4uL2hlbHBlcic7XHJcbmltcG9ydCB7IGNhbkhpZGVUZXh0Rm9ybWF0dGluZ0JhciwgaXNTaG93aW5nVGV4dEZvcm1hdHRpbmdCYXIgfSBmcm9tICcuLi9jb21wb25lbnRzL2Zsb2F0aW5nLXRvb2xiYXIvdGV4dC1mb3JtYXR0aW5nLWJhcic7XHJcbmltcG9ydCB7IGlzU2hvd2luZ1RleHRGb3JtYXR0aW5nU2VsZWN0YWJsZURlcGVuZGVudEJveCB9IGZyb20gJy4uL2NvbXBvbmVudHMvZmxvYXRpbmctdG9vbGJhci90ZXh0LWZvcm1hdHRpbmctYmFyJztcclxuXHJcblxyXG4vLyBCbG9jayBvcGVyYXRpb25zIGlzIG9wZXJhdGlvbnMgcmVsYXRlZCB0byB0aGUgYmxvY2sgaXQgc2VsZi4gQ3JlYXRlIGEgYmxvY2ssIGRlbGV0ZSBhIGJsb2NrLCBjaGFuZ2UgdGhlIGJsb2NrIHR5cGUsIGV0Yy4uLlxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHJcbiAgICAvLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcblxyXG4gICAgLy8gICAgIGlmIChpc1RyaWdnYWJsZShldmVudCkgJiYgIWlzU2hvd2luZ0Jsb2NrT3B0aW9ucygpKSB7XHJcblxyXG4gICAgLy8gICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInICYmICFpc1Nob3dpbmdUZXh0Rm9ybWF0dGluZ1NlbGVjdGFibGVEZXBlbmRlbnRCb3goKSAmJiAhaXNTaG93aW5nVGV4dEZvcm1hdHRpbmdCYXIoKSAmJiAhZXZlbnQuY3RybEtleSAmJiAhZXZlbnQuc2hpZnRLZXkgJiYgIWV2ZW50LmFsdEtleSkge1xyXG5cclxuICAgIC8vICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAvLyAgICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcbiAgICAvLyAgICAgICAgICAgICAvL1RPRE86IHBhc3MgdGhlIGV2ZW50IG5vdCBldmVudC50YXJnZXQvaXRgcyBtb3JlIHNpbXBsZSB0byBkZWFsIHdpdGggZXZlbnQgd2hlbiBjcmVhdGUgYSBjbGljayBldmVudExpc3RlbmVyXHJcbiAgICAvLyAgICAgICAgICAgICBjb25zdCBjb21tYW5kID0gY29tbWFuZEZhY3RvcnkuY3JlYXRlQ29tbWFuZChjb21tYW5kRmFjdG9yeS5PUEVSQVRJT05TLkJMT0NLLkNSRUFURV9ORVdfRUxFTUVOVCwgW2V2ZW50XSk7XHJcbiAgICAvLyAgICAgICAgICAgICBjb21tYW5kLmV4ZWN1dGUoKTtcclxuXHJcbiAgICAvLyAgICAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnQmFja3NwYWNlJyAmJiBpc0FjdGl2ZUNvbnRlbnRCbGFuayhldmVudCkgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcclxuXHJcbiAgICAvLyAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIC8vICAgICAgICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjb21tYW5kRmFjdG9yeS5jcmVhdGVDb21tYW5kKGNvbW1hbmRGYWN0b3J5Lk9QRVJBVElPTlMuQkxPQ0suREVMRVRFX0FORF9GT0NVU19PTl9QUkVWSU9VUyk7XHJcbiAgICAvLyAgICAgICAgICAgICBjb21tYW5kLmV4ZWN1dGUoKTtcclxuXHJcbiAgICAvLyAgICAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnRGVsZXRlJyAmJiBpc0FjdGl2ZUNvbnRlbnRCbGFuaygpICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XHJcblxyXG4gICAgLy8gICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAvLyAgICAgICAgICAgICBjb25zdCBjb21tYW5kID0gY29tbWFuZEZhY3RvcnkuY3JlYXRlQ29tbWFuZChjb21tYW5kRmFjdG9yeS5PUEVSQVRJT05TLkJMT0NLLkRFTEVURV9BTkRfRk9DVVNfT05fTkVYVCk7XHJcbiAgICAvLyAgICAgICAgICAgICBjb21tYW5kLmV4ZWN1dGUoKTtcclxuXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9KTtcclxuXHJcbiAgICAvLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG5cclxuICAgIC8vICAgICBpZiAoaXNUcmlnZ2FibGUoZXZlbnQpICYmICFpc1Nob3dpbmdCbG9ja09wdGlvbnMoKSkge1xyXG4gICAgLy8gICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJyAmJiBpc0FjdGl2ZUNvbnRlbnRCbGFuaygpICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XHJcblxyXG4gICAgLy8gICAgICAgICAgICAgLy9UT0RPOiB3cml0ZSB0aGUgY29kZSB0byBzZWxlY3QgdGhlIGFsbCB0ZXh0XHJcblxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfSk7XHJcbn0pO1xyXG5cclxuLy8gQmxvY2sgb3B0aW9ucyBvcGVyYXRpb25zIGlzIG9wZXJhdGlvbnMgcmVsYXRlZCB0byB0aGUgQmxvY2sgT3B0aW9ucy4gU2hvdyB0aGUgYmxvY2sgb3B0aW9ucywgaGlkZSB0aGUgYmxvY2sgb3B0aW9ucywgZmlsdGVyLCAuLi5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcblxyXG4gICAgICAgIC8vIGlmIChpc1Nob3dpbmdCbG9ja09wdGlvbnMoKSkge1xyXG5cclxuICAgICAgICAgICAgLy8gaWYgKGV2ZW50LmtleSA9PT0gJ0VzY2FwZScgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcclxuXHJcbiAgICAgICAgICAgIC8vICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgLy8gICAgIGNvbnN0IGVsZW1lbnRUb0ZvY3VzQWZ0ZXJIaWRlID0gZXZlbnQudGFyZ2V0O1xyXG5cclxuICAgICAgICAgICAgLy8gICAgIC8vVE9ETzogcGFzcyB0aGUgZXZlbnQgbm90IGV2ZW50LnRhcmdldC9pdGBzIG1vcmUgc2ltcGxlIHRvIGRlYWwgd2l0aCBldmVudCB3aGVuIGNyZWF0ZSBhIGNsaWNrIGV2ZW50TGlzdGVuZXJcclxuICAgICAgICAgICAgLy8gICAgIGNvbnN0IGNvbW1hbmQgPSBjb21tYW5kRmFjdG9yeS5jcmVhdGVDb21tYW5kKGNvbW1hbmRGYWN0b3J5Lk9QRVJBVElPTlMuQkxPQ0tfT1BUSU9OUy5ISURFX0NMRUFSX0JMT0NLX09QVElPTlMsIFtlbGVtZW50VG9Gb2N1c0FmdGVySGlkZV0pO1xyXG4gICAgICAgICAgICAvLyAgICAgY29tbWFuZC5leGVjdXRlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICAgICAvLyBlbHNlIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcclxuXHJcbiAgICAgICAgICAgIC8vICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAvLyAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICAvLyAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLkFQUExZX1NFTEVDVEVEX0JMT0NLX1RZUEUsIFtldmVudF0pO1xyXG4gICAgICAgICAgICAvLyAgICAgY29tbWFuZC5leGVjdXRlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyB9IGVsc2UgaWYgKC9eW2EtejAtOV0kL2kudGVzdChldmVudC5rZXkpICYmICFldmVudC5jdHJsS2V5ICYmICFldmVudC5zaGlmdEtleSAmJiAhZXZlbnQuYWx0S2V5KSB7XHJcblxyXG4gICAgICAgICAgICAvLyAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLkZJTFRFUl9DT05DQVQsIFtldmVudF0pO1xyXG4gICAgICAgICAgICAvLyAgICAgY29tbWFuZC5leGVjdXRlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyB9IGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gJ0JhY2tzcGFjZScpIHtcclxuXHJcbiAgICAgICAgICAgIC8vICAgICBjb25zdCBjb21tYW5kID0gY29tbWFuZEZhY3RvcnkuY3JlYXRlQ29tbWFuZChjb21tYW5kRmFjdG9yeS5PUEVSQVRJT05TLkJMT0NLX09QVElPTlMuRklMVEVSX1JFTU9WRV9MQVNUKTtcclxuICAgICAgICAgICAgLy8gICAgIGNvbW1hbmQuZXhlY3V0ZSgpO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gfVxyXG5cclxuXHJcbiAgICAgICAgLy8gaWYgKGlzU2hvd2luZ1RleHRGb3JtYXR0aW5nU2VsZWN0YWJsZURlcGVuZGVudEJveCgpKSB7XHJcblxyXG4gICAgICAgIC8vICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJyAmJiAhZXZlbnQuY3RybEtleSAmJiAhZXZlbnQuc2hpZnRLZXkgJiYgIWV2ZW50LmFsdEtleSkge1xyXG5cclxuICAgICAgICAvLyAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgIC8vICAgICAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLkhJREVfVEVYVF9GT1JNQVRUSU5HX0JBUiwgW2V2ZW50XSk7XHJcbiAgICAgICAgLy8gICAgICAgICBjb21tYW5kLmV4ZWN1dGUoKTtcclxuXHJcbiAgICAgICAgLy8gICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnQXJyb3dEb3duJyAmJiAhZXZlbnQuY3RybEtleSAmJiAhZXZlbnQuc2hpZnRLZXkgJiYgIWV2ZW50LmFsdEtleSkge1xyXG5cclxuICAgICAgICAvLyAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgIC8vICAgICAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLk1PVkVfRkFLRV9GT0NVU19UT19ORVhUX09QVElPTik7XHJcbiAgICAgICAgLy8gICAgICAgICBjb21tYW5kLmV4ZWN1dGUoKTtcclxuXHJcbiAgICAgICAgLy8gICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnQXJyb3dVcCcgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcclxuXHJcbiAgICAgICAgLy8gICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAvLyAgICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjb21tYW5kRmFjdG9yeS5jcmVhdGVDb21tYW5kKGNvbW1hbmRGYWN0b3J5Lk9QRVJBVElPTlMuQkxPQ0tfT1BUSU9OUy5NT1ZFX0ZBS0VfRk9DVVNfVE9fUFJFVklPVVNfT1BUSU9OKTtcclxuICAgICAgICAvLyAgICAgICAgIGNvbW1hbmQuZXhlY3V0ZSgpO1xyXG5cclxuICAgICAgICAvLyAgICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgJiYgIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5ICYmICFldmVudC5hbHRLZXkpIHtcclxuXHJcbiAgICAgICAgLy8gICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIC8vICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgIC8vICAgICAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5CTE9DS19PUFRJT05TLkFQUExZX1NFTEVDVEVEX0JMT0NLX1RZUEUsIFtldmVudF0pO1xyXG4gICAgICAgIC8vICAgICAgICAgY29tbWFuZC5leGVjdXRlKCk7XHJcblxyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbi8vIFRleHQgZm9ybWF0dGluZyBiYXIgb3BlcmF0aW9ucyBpcyBvcGVyYXRpb25zIHJlbGF0ZWQgdG8gdGV4dCBwcmVzZW50YXRpb24sIGNvbG9yLCBzaG93IG9yIGhpZGUgdGV4dCBmb3JtYXR0aW5nIGRlcGVuZGVudCBib3hlcywuLi5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIC8vIGlmIChldmVudC5rZXkgPT09ICdTaGlmdCcgJiYgaXNUcmlnZ2FibGUoZXZlbnQpKSB7XHJcblxyXG4gICAgLy8gICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgLy8gICAgICAgICBpZiAod2luZG93LmdldFNlbGVjdGlvbigpLnRvU3RyaW5nKCkudHJpbSgpICE9PSAnJykge1xyXG4gICAgLy8gICAgICAgICAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5GT1JNQVRUSU5HX0JBUi5TSE9XX1RFWFRfRk9STUFUVElOR19CQVIsIFtldmVudF0pO1xyXG4gICAgLy8gICAgICAgICAgICAgY29tbWFuZC5leGVjdXRlKCk7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9LCAxMCk7XHJcblxyXG4gICAgLy8gfVxyXG59KTtcclxuXHJcbi8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuLy8gICAgIGlmIChldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleS50b0xvd2VyQ2FzZSgpID09PSAnYScgJiYgaXNUcmlnZ2FibGUoZXZlbnQpKSB7XHJcblxyXG4vLyAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4vLyAgICAgICAgICAgICBpZiAod2luZG93LmdldFNlbGVjdGlvbigpLnRvU3RyaW5nKCkudHJpbSgpICE9PSAnJykge1xyXG4vLyAgICAgICAgICAgICAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5GT1JNQVRUSU5HX0JBUi5TSE9XX1RFWFRfRk9STUFUVElOR19CQVIsIFtldmVudF0pO1xyXG4vLyAgICAgICAgICAgICAgICAgY29tbWFuZC5leGVjdXRlKCk7XHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICB9LCAxMCk7XHJcblxyXG4vLyAgICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnICYmIGNhbkhpZGVUZXh0Rm9ybWF0dGluZ0JhcigpICYmIGlzU2hvd2luZ1RleHRGb3JtYXR0aW5nQmFyKCkpIHtcclxuXHJcbi8vICAgICAgICAgY29uc3QgY29tbWFuZCA9IGNvbW1hbmRGYWN0b3J5LmNyZWF0ZUNvbW1hbmQoY29tbWFuZEZhY3RvcnkuT1BFUkFUSU9OUy5GT1JNQVRUSU5HX0JBUi5ISURFX1RFWFRfRk9STUFUVElOR19CQVIsIFtldmVudF0pO1xyXG4vLyAgICAgICAgIGNvbW1hbmQuZXhlY3V0ZSgpO1xyXG4vLyAgICAgfVxyXG4vLyB9KTtcclxuXHJcblxyXG5cclxuZnVuY3Rpb24gaXNBY3RpdmVDb250ZW50QmxhbmsoKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkgPT09ICcnO1xyXG59XHJcblxyXG5cclxuLy8gTGlzdGVuIGEgaW5wdXQgbGlua1xyXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgbGlua0JveElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuLy8gICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XHJcblxyXG4vLyAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyAgICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcbi8vICAgICAgICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjb21tYW5kRmFjdG9yeS5jcmVhdGVDb21tYW5kKGNvbW1hbmRGYWN0b3J5Lk9QRVJBVElPTlMuRk9STUFUVElOR19CQVIuSU5QVVRfTElOS19VUkwpO1xyXG4vLyAgICAgICAgICAgICBjb21tYW5kLmV4ZWN1dGUoKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KTtcclxuLy8gfSk7XHJcblxyXG5cclxuLy8gTG9jayBsZWZ0IGFuZCByaWdodCBrZXkgd2hlbiBpcyBzaG93aW5nIHRoZSBkZXBlbmRlbnQgYm94XHJcbi8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuLy8gICAgIGlmIChpc1Nob3dpbmdUZXh0Rm9ybWF0dGluZ1NlbGVjdGFibGVEZXBlbmRlbnRCb3goKSAmJlxyXG4vLyAgICAgICAgIChldmVudC5rZXkgPT09ICdBcnJvd0xlZnQnIHx8IGV2ZW50LmtleSA9PT0gJ0Fycm93UmlnaHQnKSkge1xyXG5cclxuLy8gICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4vLyAgICAgfVxyXG4vLyB9KTtcclxuXHJcblxyXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4vLyAgICAgaWYgKGlzU2hvd2luZ1RleHRGb3JtYXR0aW5nQmFyKCkgJiYgY2FuSGlkZVRleHRGb3JtYXR0aW5nQmFyKCkgJiYgIWlzU2hvd2luZ1RleHRGb3JtYXR0aW5nU2VsZWN0YWJsZURlcGVuZGVudEJveCgpICYmXHJcbi8vICAgICAgICAgKGV2ZW50LmtleSA9PT0gJ0Fycm93TGVmdCcgfHwgZXZlbnQua2V5ID09PSAnQXJyb3dSaWdodCcgfHwgZXZlbnQua2V5ID09PSAnQXJyb3dVcCcgfHwgZXZlbnQua2V5ID09PSAnQXJyb3dEb3duJykpIHtcclxuXHJcbi8vICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbi8vICAgICAgICAgICAgIGlmICh3aW5kb3cuZ2V0U2VsZWN0aW9uKCkudG9TdHJpbmcoKS50cmltKCkgPT0gJycpIHtcclxuLy8gICAgICAgICAgICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjb21tYW5kRmFjdG9yeS5jcmVhdGVDb21tYW5kKGNvbW1hbmRGYWN0b3J5Lk9QRVJBVElPTlMuRk9STUFUVElOR19CQVIuSElERV9URVhUX0ZPUk1BVFRJTkdfQkFSLCBbZXZlbnRdKTtcclxuLy8gICAgICAgICAgICAgICAgIGNvbW1hbmQuZXhlY3V0ZSgpO1xyXG4vLyAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgfSwgMTApO1xyXG4vLyAgICAgfVxyXG4vLyB9KTsiLCJpbXBvcnQgeyBjcmVhdGVOZXdEcmFnZ2FibGVQYXJhZ3JhcGhFbGVtZW50IH0gZnJvbSAnLi9lbGVtZW50LWZhY3RvcnknO1xuaW1wb3J0IHsgZm9jdXNPblRoZUVuZE9mVGhlVGV4dCB9IGZyb20gJy4vai13aW5kb3cnO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuam9oYW5uZXMtZWRpdG9yID4gLmNvbnRlbnQnKTtcblxuICAgIGNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCBmdW5jdGlvbiAoZXZlbnQpIHtcblxuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LnRhZ05hbWUgPT09ICdJTlBVVCcgfHwgZXZlbnQudGFyZ2V0LnRhZ05hbWUgPT09ICdURVhUQVJFQScpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuXG4gICAgICAgIGlmICh0YXJnZXQudGFnTmFtZSA9PT0gJ1AnICYmIHRhcmdldC5pc0NvbnRlbnRFZGl0YWJsZSkge1xuICAgICAgICAgICAgY29uc3QgY2xpcGJvYXJkRGF0YSA9IGV2ZW50LmNsaXBib2FyZERhdGEgfHwgd2luZG93LmNsaXBib2FyZERhdGE7XG4gICAgICAgICAgICBjb25zdCBwYXN0ZWRUZXh0ID0gY2xpcGJvYXJkRGF0YS5nZXREYXRhKCd0ZXh0Jyk7XG5cbiAgICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IHBhc3RlZFRleHQuc3BsaXQoJ1xcbicpLmZpbHRlcihibG9jayA9PiBibG9jay50cmltKCkgIT09ICcnKTtcblxuICAgICAgICAgICAgdGFyZ2V0LmlubmVyVGV4dCA9IGJsb2Nrc1swXTtcblxuICAgICAgICAgICAgbGV0IGN1cnJlbnRUYXJnZXQgPSB0YXJnZXQuY2xvc2VzdCgnLmJsb2NrJyk7XG5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgYmxvY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3UGFyYWdyYXBoID0gY3JlYXRlTmV3RHJhZ2dhYmxlUGFyYWdyYXBoRWxlbWVudCgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RDb250ZW50QmxvY2sgPSBuZXdQYXJhZ3JhcGgucXVlcnlTZWxlY3RvcignLmpvaGFubmVzLWNvbnRlbnQtZWxlbWVudCcpO1xuICAgICAgICAgICAgICAgIGxhc3RDb250ZW50QmxvY2suaW5uZXJUZXh0ID0gYmxvY2tzW2ldO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRUYXJnZXQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmVuZCcsIG5ld1BhcmFncmFwaCk7XG4gICAgICAgICAgICAgICAgY3VycmVudFRhcmdldCA9IG5ld1BhcmFncmFwaDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9jdXNPblRoZUVuZE9mVGhlVGV4dChjdXJyZW50VGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5qb2hhbm5lcy1jb250ZW50LWVsZW1lbnQnKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRyYWdnZWRJdGVtIiwiZHJvcExpbmUiLCJjbGFzc0xpc3QiLCJhZGQiLCJoZWlnaHQiLCJkaXNwbGF5IiwiY29udGFpbnMiLCJjbG9zZXN0Iiwic2V0VGltZW91dCIsIm9wYWNpdHkiLCJyZW1vdmVBdHRyaWJ1dGUiLCJwcmV2ZW50RGVmYXVsdCIsImJvdW5kaW5nIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwib2Zmc2V0IiwieSIsImNsaWVudFkiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwicGFyZW50RWxlbWVudCIsImluc2VydEJlZm9yZSIsInVuZG9TdGFjayIsInJlZG9TdGFjayIsImVkaXRvciIsInNhdmVTdGF0ZSIsImN1cnJlbnRTdGF0ZSIsImlubmVySFRNTCIsImV2ZW50IiwiY3RybEtleSIsImtleSIsInN0YXRlVG9SZXN0b3JlIiwicG9wIiwidW5kbyIsInN0YXRlVG9BcHBseSIsInJlZG8iLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwibmMiLCJTZXJ2aWNlQWxyZWFkeVJlZ2lzdGVyZWRFeGNlcHRpb24iLCJjb25zdHJ1Y3RvciIsInNlcnZpY2VLZXkiLCJzdXBlciIsIm5hbWUiLCJTZXJ2aWNlTm90Rm91bmRFeGNlcHRpb24iLCJTZXJ2aWNlUHJvdmlkZXIiLCJzdGF0aWMiLCJzZXJ2aWNlcyIsIk1hcCIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJnZXRJbnN0YW5jZU9mIiwic2VydmljZSIsInJlZ2lzdGVyU2VydmljZSIsImhhcyIsInNldCIsInJlZ2lzdGVyU2VydmljZXMiLCJmb3JFYWNoIiwicmVzZXQiLCJjbGVhciIsIkVsZW1lbnRGYWN0b3J5U2VydmljZSIsImNyZWF0b3JzIiwiQkxPQ0tfUEFSQUdSQVBIIiwiUEFSQUdSQVBIIiwiQ0hFQ0tCT1hfSVRFTSIsIkxJU1RfSVRFTSIsIkJMT0NLX0hFQURFUl8xIiwiSEVBREVSXzIiLCJIRUFERVJfMyIsIkhFQURFUl80IiwiSEVBREVSXzUiLCJIRUFERVJfNiIsIkRSQUdfSEFORExFX0JVVFRPTiIsIl9pbnN0YW5jZSIsInJlZ2lzdGVyIiwiRUxFTUVOVF9UWVBFUyIsImJsb2NrUGFyYWdyYXBoQ3JlYXRvciIsInBhcmFncmFwaENyZWF0b3IiLCJjaGVja2JveEl0ZW1DcmVhdG9yIiwibGlzdEl0ZW1DcmVhdG9yIiwiaGVhZGluZ0NyZWF0b3IiLCJkcmFnSGFuZGxlQnV0dG9uQ3JlYXRvciIsInR5cGUiLCJjcmVhdG9yIiwiY3JlYXRlIiwiVHlwZUVycm9yIiwiYmxvY2tQYXJhZ3JhcGgiLCJwYXJhZ3JhcGgiLCJsZXZlbCIsImhlYWRpbmciLCJjaGVja0JveEl0ZW0iLCJjaGVja2JveEl0ZW0iLCJkcmFnSGFuZGxlQnV0dG9uIiwicCIsImlubmVyVGV4dCIsImNvbnRlbnRFZGl0YWJsZSIsImgiLCJsaSIsImNoZWNrYm94Iiwic3BhbiIsInRleHRDb250ZW50IiwiaW5pdGlhbEl0ZW0iLCJuZXdEaXYiLCJuZXdFbGVtZW50IiwibmV3QnV0dG9uIiwiZHJhZ2dhYmxlIiwiYnV0dG9uIiwiQmxvY2tPcGVyYXRpb25zU2VydmljZSIsImVsZW1lbnRGYWN0b3J5U2VydmljZSIsImV4ZWNDb21tYW5kIiwiY29tbWFuZCIsIkJMT0NLX09QRVJBVElPTlMiLCJDUkVBVEVfREVGQVVMVF9CTE9DSyIsImNyZWF0ZURlZmF1bHRCbG9jayIsIlRVUk5fSU5UTyIsImdldERyYWdnYWJsZUVsZW1lbnRGcm9tU2VsZWN0aW9uIiwiZm9ybWF0QmxvY2siLCJzZWxlY3Rpb25FdmVudCIsIkN1c3RvbUV2ZW50IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJkaXNwYXRjaEV2ZW50IiwicXVlcnlDb21tYW5kU3RhdGUiLCJjb250ZW50VHlwZSIsImNvbnRlbnRFbGVtZW50IiwibmV3Q29udGVudEJsb2NrIiwicmVwbGFjZUNoaWxkIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwicmFuZ2VDb3VudCIsImdldFJhbmdlQXQiLCJjb21tb25BbmNlc3RvckNvbnRhaW5lciIsIm5vZGVUeXBlIiwiTm9kZSIsIlRFWFRfTk9ERSIsIkhUTUxFbGVtZW50IiwiY3JlYXRlTmV3RWxlbWVudCIsImNyZWF0ZUxpc3RJdGVtIiwibmV3Q29udGVudEVsZW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiZXZlbnRQYXJhZ3JhcGgiLCJuZXdCbG9jayIsIl9jYW5IaWRlIiwicHJvcHMiLCJodG1sRWxlbWVudCIsImluaXQiLCJkb2N1bWVudEFwcGVuZFRvIiwicGFyZW50IiwiaXNWaXNpYmxlIiwidmlzaWJpbGl0eSIsImdldENvbXB1dGVkU3R5bGUiLCJzaG93IiwiaGlkZSIsImNvbnNvbGUiLCJ3YXJuIiwiY2FuSGlkZSIsImZvY3VzIiwiaHRtbEVtcHR5SW5kaWNhdG9yIiwicGFkZGluZyIsImNvbG9yIiwiQmFzZURvdWJseUxpbmtlZExpc3QiLCJ0YWlsIiwiZ2V0Rmlyc3QiLCJnZXRMYXN0IiwiaXRlcmF0b3IiLCJjdXJyZW50IiwibmV4dE5vZGUiLCJjYWxsYmFjayIsIm5vZGUiLCJhbnkiLCJwcmVkaWNhdGUiLCJmaW5kRmlyc3QiLCJmaW5kTGFzdCIsInByZXZpb3VzTm9kZSIsImZpbmQiLCJwYXJlbnRMaXN0Iiwic2V0TmV4dCIsInNldFByZXZpb3VzIiwiZ2V0TmV4dFNhdGlzZnlpbmciLCJzdGFydE5vZGUiLCJnZXRQcmV2aW91c1NhdGlzZnlpbmciLCJhcHBlbmQiLCJRdWlja01lbnUiLCJibG9ja09wZXJhdGlvbnNTZXJ2aWNlIiwiY3VycmVudEZvY3VzZWRNZW51SXRlbSIsImh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUiLCJtZW51U2VjdGlvbnMiLCJxdWlja01lbnVFbXB0eSIsImZpbHRlcklucHV0IiwiYmxvY2tPcHRpb25zIiwiYXR0YWNoRXZlbnRzIiwicG9zaXRpb24iLCJtZW51SXRlbSIsInN3aXRjaFZpc3VhbEZvY3VzIiwicmVtb3ZlRm9jdXMiLCJmb2N1c09uVGhlRmlyc3RWaXNpYmxlSXRlbSIsImZpcnN0U2VjdGlvbk5vZGUiLCJjdXJyZW50U2VjdGlvbk5vZGUiLCJpdGVtTm9kZSIsIm1lbnVJdGVtcyIsImZvY3VzUHJldmlvdXNWaXNpYmxlSXRlbSIsInByZXZpb3VzVmlzaWJsZUl0ZW0iLCJwcmV2aW91c1Zpc2libGVTZWN0aW9uTm9kZSIsInF1aWNrTWVudVNlY3Rpb25JbnN0YW5jZSIsInNlY3Rpb24iLCJsYXN0VmlzaWJsZVNlY3Rpb25Ob2RlIiwiZm9jdXNOZXh0VmlzaWJsZUl0ZW0iLCJuZXh0VmlzaWJsZUl0ZW0iLCJuZXh0VmlzaWJsZVNlY3Rpb25Ob2RlIiwiZmlyc3RWaXNpYmxlU2VjdGlvbk5vZGUiLCJmaWx0ZXJJdGVtcyIsImZpbHRlclNlY3Rpb24iLCJjdXJzb3JQb3MiLCJyZW1TaXplIiwicGFyc2VGbG9hdCIsImRvY3VtZW50RWxlbWVudCIsImZvbnRTaXplIiwibWVudVdpZHRoIiwieFBvc2l0aW9uIiwicmlnaHQiLCJ5UG9zaXRpb24iLCJib3R0b20iLCJzY3JvbGxZIiwibWFyZ2luIiwib2Zmc2V0V2lkdGgiLCJpbm5lcldpZHRoIiwibGVmdCIsInRvcCIsInJlc3RvcmUiLCJzaGlmdEtleSIsImFsdEtleSIsInRlc3QiLCJyZW1vdmVMYXN0RmlsdGVySW5wdXRDaGFyYWN0ZXIiLCJzdG9wUHJvcGFnYXRpb24iLCJkYXRhVHlwZSIsImdldEF0dHJpYnV0ZSIsInRyYW5zZm9ybUh0bWxGb2N1c2VkRWxlbWVudEJlZm9yZU9wZW5RdWlja01lbnUiLCJjb25jYXRGaWx0ZXJJbnB1dCIsImJsb2NrVHlwZSIsInN0ZyIsInRvTG93ZXJDYXNlIiwic2xpY2UiLCJxdWlja01lbnVJbnN0YW5jZSIsInRpdGxlIiwiYXBwZW5kUXVpY2tNZW51SXRlbXMiLCJhcHBlbmRRdWlja01lbnVJdGVtIiwidGV4dCIsImZpbHRlclZhbHVlIiwidG9Mb2NhbGVMb3dlckNhc2UiLCJpbmNsdWRlcyIsIlNWR0ljb24iLCJ1c2VFbGVtZW50IiwiaHJlZlVzZUlkIiwid2lkdGgiLCJjcmVhdGVFbGVtZW50TlMiLCJ1c2UiLCJzZXRBdHRyaWJ1dGVOUyIsImNsb25lIiwiZGVzY3JpcHRpb24iLCJTVkdIcmVmVXNlSWQiLCJvcHRpb25JbWFnZSIsInN2ZyIsIm9wdGlvblRleHQiLCJibG9ja1RpdGxlIiwiYmxvY2tEZXNjcmlwdGlvbiIsImJ1aWxkIiwicXVpY2tNZW51IiwiYmFzaWNCbG9ja3NTZWN0aW9uIiwiaGVhZGluZ0Jsb2Nrc1NlY3Rpb24iLCJsaXN0QmxvY2tzU2VjdGlvbiIsImRyb3Bkb3duQnV0dG9uIiwiZHJvcGRvd25MaXN0IiwicGxhY2Vob2xkZXIiLCJpbnB1dExpbmtCb3giLCJkcm9wZG93bnMiLCJjdXJyZW50U2VsZWN0aW9uUmFuZ2UiLCJpbnB1dExpbmtCb3hXcmFwcGVyIiwic2VsZWN0V3JhcHBlciIsImdldEVsZW1lbnRCeUlkIiwicmVjdCIsInNjcm9sbFgiLCJvZmZzZXRIZWlnaHQiLCJhcHBlbmREcm9wZG93biIsImRyb3Bkb3duIiwiYXBwZW5kU2VwYXJhdG9yIiwic2VwYXJhdG9yIiwiYXBwZW5kVGV4dFRvb2xiYXIiLCJ0b29sYmFyIiwiYW55RHJvcGRvd25WaXNpYmxlIiwidHJpbSIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwiZHJvcGRvd25JdGVtcyIsIm1hcmdpbkxlZnQiLCJkcm9wZG93bkl0ZW0iLCJfY29tbWFuZFNlcnZpY2UiLCJfY29tbWFuZCIsIl92YWx1ZSIsInBhcmVudERyb3Bkb3duTWVudUxpc3QiLCJjb21tYW5kU2VydmljZSIsImxlZnRJY29uIiwiYXR0YWNoRXZlbnQiLCJ0YWJJbmRleCIsInRleHRPcHRpb24iLCJib3JkZXJSaWdodCIsIm1hcmdpblJpZ2h0Iiwic3ZnVXNlSHJlZiIsInJvbGUiLCJlZGl0YWJsZUVsZW1lbnQiLCJnZXRQYXJlbnRFZGl0YWJsZSIsIm5vcm1hbGl6ZSIsImlzQ29sbGFwc2VkIiwiY29tbW9uQW5jZXN0b3IiLCJib3JkZXJSYWRpdXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJUZXh0T3BlcmF0aW9uU2VydmljZSIsInYiLCJhbGVydCIsImdldFRhcmdldEVsZW1lbnRNYXAiLCJnZXRTZWxlY3RlZFRleHROb2RlcyIsInRleHROb2RlcyIsInJhbmdlIiwibm9kZUl0ZXJhdG9yIiwiY3JlYXRlTm9kZUl0ZXJhdG9yIiwiTm9kZUZpbHRlciIsIlNIT1dfVEVYVCIsImFjY2VwdE5vZGUiLCJpbnRlcnNlY3RzTm9kZSIsIkZJTFRFUl9BQ0NFUFQiLCJGSUxURVJfUkVKRUNUIiwibm9kZVJhbmdlIiwiY3JlYXRlUmFuZ2UiLCJzZWxlY3ROb2RlQ29udGVudHMiLCJjb21wYXJlQm91bmRhcnlQb2ludHMiLCJSYW5nZSIsIkVORF9UT19TVEFSVCIsIlNUQVJUX1RPX0VORCIsImZpbmRDbG9zZXN0TWF0Y2hpbmdQYXJlbnQiLCJib2R5IiwiRUxFTUVOVF9OT0RFIiwiZWxlbSIsInRhZ05hbWUiLCJjbGFzc2VzIiwiZXZlcnkiLCJjbHMiLCJleHRyYWN0U2VsZWN0ZWRUZXh0IiwidGV4dE5vZGUiLCJzdGFydCIsImVuZCIsInN0YXJ0Q29udGFpbmVyIiwic3RhcnRPZmZzZXQiLCJlbmRDb250YWluZXIiLCJlbmRPZmZzZXQiLCJzdWJzdHJpbmciLCJpbmNsdWRlQ2hldnJvbkljb24iLCJGbG9hdGluZ1Rvb2xiYXJCdWlsZGVyIiwiZmxvYXRpbmdCYXIiLCJ0dXJuSW50b0Ryb3Bkb3duIiwiZ3JvdXBCdXR0b24iLCJjb2xvckRyb3Bkb3duIiwibW9yZU9wdGlvbnNEcm9wZG93biIsInR1cm5JbnRvQmFyTGlzdCIsInR1cm5JbnRvQmFyQnV0dG9uIiwiU1ZHSWNvbnMiLCJiX2xpc3QiLCJuX2xpc3QiLCJjb2RlIiwicXVvdGUiLCJoZWFkMSIsImhlYWQyIiwiaGVhZDMiLCJoZWFkNCIsImhlYWQ1IiwiaGVhZDYiLCJjb2xvckRyb3Bkb3duTGlzdCIsImNvbG9yQnV0dG9uIiwiaWNvbiIsIm1vcmVPcHRpb25zTGlzdCIsIm1vcmVPcHRpb25zQnV0dG9uIiwiZHVwbGljYXRlIiwiZGVsZXRlIiwiZWRpdG9ySWQiLCJjb250YWluZXIiLCJhcHBlbmREcmFnSGFuZGxlciIsInJlYWR5U3RhdGUiLCJmaXJzdFBhcmFncmFwaCIsImRyYWdIYW5kbGVyIiwicHJlcGVuZCIsInJlbW92ZURyYWdIYW5kbGVyIiwiZXh0cmFjdENvbnRlbnQiLCJVSUJ1aWxkZXIiLCJhZGRCbG9jayIsImZsb2F0aW5nVG9vbGJhciIsImFkZEJvY2siLCJzZXJ2aWNlUHJvdmlkZXIiLCJjcmVhdGVOZXdQYXJhZ3JhcGhFbGVtZW50IiwiY3JlYXRlTmV3RHJhZ2dhYmxlUGFyYWdyYXBoRWxlbWVudCIsImJsb2NrcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnNlcnRUZXh0QXRDdXJzb3IiLCJzZWwiLCJkZWxldGVDb250ZW50cyIsImluc2VydE5vZGUiLCJzZXRTdGFydEFmdGVyIiwic2V0RW5kQWZ0ZXIiLCJjbGlwYm9hcmREYXRhIiwiZ2V0RGF0YSIsInN2Z0NvbnRhaW5lciIsImNsYXNzTmFtZSIsInNhdmVkUmFuZ2UiLCJ0ZW1wb3JhcnlTZWxlY3RDb250ZW50RnJvbUN1cnJlbnRTZWxlY3Rpb24iLCJsb2ciLCJuZXdSYW5nZSIsInJlc3RvcmVTZWxlY3Rpb24iLCJnZXRTYXZlZFJhbmdlIiwiZm9jdXNPblRoZUVuZE9mVGhlVGV4dCIsImNvbnRlbnRCbG9jayIsImxhc3RDaGlsZCIsInNldEVuZCIsImNvbGxhcHNlIiwiYW5jaG9yRWxlbWVudCIsImZsb2F0aW5nVG9vbGJhclZpc2libGUiLCJmbG9hdGluZ1Rvb2xiYXJQcmV2ZW50SGlkZSIsInNob3dmbG9hdGluZ1Rvb2xiYXIiLCJoaWRlQWxsRGVwZW5kZW50Qm94IiwiY2xvbmVSYW5nZSIsImxpbmtUZXh0QnV0dG9uIiwiYm9sZFRleHRCdXR0b24iLCJpdGFsaWNUZXh0QnV0dG9uIiwidW5kZXJsaW5lVGV4dEJ1dHRvbiIsImNvZGVUZXh0QnV0dG9uIiwic3RyaWtlVGhyb3VnaFRleHRCdXR0b24iLCJtYXRoVGV4dEJ1dHRvbiIsImNvbG9yQ2lyY2xlIiwidGFncyIsInRhZ05hbWVzIiwiZWwiLCJjb250YWluc05vZGUiLCJTZXQiLCJnZXRTZWxlY3RlZFRhZ3MiLCJ0YWciLCJjdXJyZW50QmxvY2siLCJnZXRCbG9ja1R5cGVUZXh0IiwidHVybkludG9CdXR0b24iLCJjaGFuZ2VUdXJuSW50b0J1dHRvblRleHQiLCJhbmNob3JOb2RlIiwiaGlkZWZsb2F0aW5nVG9vbGJhciIsImFueURlcGVuZGVudEJveFZpc2libGUiLCJ0b2dnbGVFbmNsb3NlU2VsZWN0ZWRUZXh0VG8iLCJkYXRhVGFnIiwiZGF0YUNsYXNzIiwidG9nZ2xlU2VsZWN0ZWRUZXh0VG8iLCJpbnB1dExpbmtVcmwiLCJ1cmwiLCJsaW5rQm94SW5wdXQiLCJtYXRjaCIsImhyZWYiLCJoaWRlTGlua0JveCIsImZvcm1hdHRlZEVsZW1lbnQiLCJzaWJsaW5ncyIsIkFycmF5IiwiZnJvbSIsImNoaWxkTm9kZXMiLCJmaWx0ZXIiLCJjaGlsZCIsInNpYmxpbmciLCJzZXRTdGFydCIsInNwbGl0Iiwic3Vycm91bmRDb250ZW50cyIsImVycm9yIiwidG9nZ2xlTW9yZU9wdGlvbnNCb3giLCJtb3JlVGV4dE9wdGlvblNlbGVjdCIsInNob3dEZXBlbmRlbnRCbG9ja09wdGlvbnMiLCJoaWRlTW9yZU9wdGlvbnNCb3giLCJoaWRlQ2hhbmdlQ29sb3JCb3giLCJoaWRlVHVybkludG9Cb3giLCJ0b2dnbGVDaGFuZ2VDb2xvckJveCIsImNvbG9yVGV4dE9wdGlvblNlbGVjdCIsIm9wdGlvbiIsImN1cnNvciIsImNsZWFyQ29sb3JCYWNrZ3JvdW5kT3B0aW9uIiwiY3VycmVudFJhbmdlIiwiZnJhZ21lbnQiLCJjbG9uZUNvbnRlbnRzIiwidGVtcERpdiIsIm1hcmtzIiwibWFyayIsImV4dHJhY3RNYXJrQ2xhc3NlcyIsIm1hcmtDbGFzcyIsInNldENvbG9yQ3VycmVudFNlbGVjdGVkSWNvbiIsInRvZ2dsZVR1cm5JbnRvQm94IiwidHVybkludG9TZWxlY3QiLCJibG9jayIsImdldEN1cnJlbnREcmFnZ2FibGVCbG9ja0ZvY3VzZWQiLCJzZXRUdXJuSW50b0N1cnJlbnRTZWxlY3RlZEJsb2NrT3B0aW9uSWNvbiIsInRvZ2dsZUlucHV0TGlua0JveCIsImxpbmtCb3giLCJjb250YWluZXJXaWR0aCIsImxpbmtJbnB1dERpdldpZHRoIiwiY29udGFpbmVyQ2VudGVyIiwibGlua0lucHV0RGl2Q2VudGVyIiwic2hvd0lucHV0TGlua0JveCIsImRlcGVuZGVudEJveGVzIiwiYm94IiwiT1BFUkFUSU9OUyIsIkNSRUFURV9MSVNUX0VMRU1FTlQiLCJDUkVBVEVfTkVXX0VMRU1FTlQiLCJERUxFVEVfRFJBR0dBQkxFX0JMT0NLIiwiREVMRVRFX0FORF9GT0NVU19PTl9ORVhUIiwiREVMRVRFX0FORF9GT0NVU19PTl9QUkVWSU9VUyIsIkRVUExJQ0FURV9TRUxFQ1RFRF9CTE9DSyIsIlRSQU5TRk9STV9CTE9DSyIsIk1PVkVfVVBfQkxPQ0siLCJNT1ZFX0RPV05fQkxPQ0siLCJTSE9XX1RVUk5fSU5UT19CT1giLCJTSE9XX0NPTE9SX0JPWCIsIlNIT1dfTU9SRV9PUFRJT05TX0JPWCIsIlNIT1dfQkxPQ0tfT1BUSU9OUyIsIkhJREVfQ0xFQVJfQkxPQ0tfT1BUSU9OUyIsIk1PVkVfRkFLRV9GT0NVU19UT19ORVhUX09QVElPTiIsIk1PVkVfRkFLRV9GT0NVU19UT19QUkVWSU9VU19PUFRJT04iLCJBUFBMWV9TRUxFQ1RFRF9CTE9DS19UWVBFIiwiRklMVEVSX0NPTkNBVCIsIkZJTFRFUl9SRU1PVkVfTEFTVCIsIlNIT1dfVEVYVF9GT1JNQVRUSU5HX0JBUiIsIkhJREVfVEVYVF9GT1JNQVRUSU5HX0JBUiIsIlRPR0dMRV9NT1JFX09QVElPTlNfQk9YIiwiVE9HR0xFX0NIQU5HRV9DT0xPUl9CT1giLCJUT0dHTEVfVFVSTl9JTlRPX0JPWCIsIlRPR0dMRV9JTlBVVF9MSU5LX0JPWCIsIklOUFVUX0xJTktfVVJMIiwiVE9HR0xFX0VOQ0xPU0VfU0VMRUNURURfVEVYVF9UTyIsIm1vdmVUaGVGYWtlRm9jdXNUb1RoZU5leHRNZW51SXRlbSIsImlzQ29udGVudEVkaXRhYmxlIiwiY3VycmVudFRhcmdldCIsIm5ld1BhcmFncmFwaCIsImxvY2FscyJdLCJzb3VyY2VSb290IjoiIn0=