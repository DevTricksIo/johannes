(()=>{var e={282:(e,n,t)=>{"use strict";t.d(n,{A:()=>a});var o=t(354),i=t.n(o),r=t(314),s=t.n(r)()(i());s.push([e.id,'/** CSS reset */\n\n.button-reset {\n    border: none;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    overflow: visible;\n    background: transparent;\n    color: inherit;\n    font: inherit;\n    line-height: normal;\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n    -webkit-appearance: none;\n}\n\n\n\n/** add block */\n.add-block {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #000;\n    background-color: white;\n    transition: all 0.3s ease;\n    box-sizing: border-box;\n    margin-left: 1.3rem;\n}\n\n.add-block-wrapper {\n    width: 100%;\n    height: 3.125rem;\n}\n\n.add-block-wrapper:hover .add-block {\n    display: flex;\n}\n\n/** and add block */\n\n\n\n/** List  **/\nol.johannes-content-element,\nul.johannes-content-element {\n    padding-left: 1rem !important;\n}\n\n\n\n.johannes-content-element li>button {\n    /* display: none; */\n    display: none;\n    position: absolute;\n    margin-left: 10px;\n    top: 0;\n\n    flex-direction: row;\n    align-items: start;\n    justify-content: start;\n\n}\n\n.johannes-content-element li {\n    position: relative;\n}\n\n.johannes-content-element li::before {\n    margin-left: 0.3125rem;\n}\n\n.johannes-content-element li:hover>button {\n    /* display: inline-block; */\n    display: inline-flex;\n\n}\n\np.johannes-content-element {\n    display: inline-block;\n    line-height: 1;\n    margin: 0;\n    padding: 0;\n}\n\n.johannes-content-element .checkbox-list {\n    list-style-type: none;\n    padding-left: 0 !important;\n}\n\n\n.johannes-content-element .checkbox-list li {\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n}\n\n\n.johannes-content-element ul.checkbox-list input[type="checkbox"]:checked+span {\n    text-decoration: line-through;\n}\n\nul.johannes-content-element:not(.checkbox-list),\nol.johannes-content-element:not(.checkbox-list) {\n    padding-left: 1.5rem !important;\n}\n\n/** and list **/\n\n\n\n.block>.drag-handler {\n    color: #84888d;\n    visibility: hidden;\n    cursor: grab;\n    align-self: start;\n\n    /* background-color: pink; */\n    padding-top: 0.33rem;\n    position: absolute;\n}\n\n.drag-handler svg {\n    /* background-color: red; */\n}\n\n.drag-handler svg use {\n    /* background-color: blue; */\n}\n\n.drag-handler:active {\n    cursor: grabbing;\n}\n\n.block {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 1rem;\n    position: relative;\n}\n\n.block>*:not(.drag-handler) {\n    padding-left: 1.25rem;\n}\n\n.block:hover .drag-handler {\n    visibility: visible;\n    vertical-align: top;\n    justify-content: start;\n}\n\n.drop-line {\n    height: 1rem;\n    background-color: #84888d;\n    width: 100%;\n}\n\n\n.title h1 {\n    margin-left: 1.3rem;\n}\n\nh1[data-placeholder]:empty:before {\n    content: attr(data-placeholder);\n    color: #84888d !important;\n    display: block;\n}\n\nh1[data-placeholder]:focus:before {}\n\n\n*[contenteditable="true"]:not(h1):empty:before {\n    content: attr(data-placeholder);\n    color: #84888acd;\n    display: none;\n}\n\n*[contenteditable="true"]:not(h1):empty:hover:before {\n    display: block;\n}\n\ncite[contenteditable="true"]:empty:before {\n    display: block;\n}\n\n*[contenteditable="true"]:not(h1)[data-placeholder]:empty:focus:before {\n    content: attr(data-placeholder);\n    color: #84888acd !important;\n    display: block;\n}\n\n\n\nh1 {\n    font-size: 2.5rem;\n    font-weight: bolder !important;\n}\n\n.johannes-editor {\n    width: 100%;\n\n}\n\n.content {\n    width: 100%;\n    box-sizing: border-box;\n\n\n}\n\npre {\n    width: 100%;\n}\n\n[contenteditable] {\n    outline: none;\n}\n\nbody {\n    height: 2000px;\n    background-color: #f0f0f1 !important;\n\n    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n}\n\n\n.editor {\n    display: flex;\n    margin-top: 80px;\n}\n\np {\n    color: #242424;\n}\n\n\n.block,\n.block * {\n    user-select: text;\n}\n\n\n.johannes-content-element {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    /* background-color: green; */\n}\n\n\n#johannesEditor {\n    width: 60%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.johannes-editor hr {\n    width: 100%;\n    height: 2px;\n    visibility: visible;\n    border: none;\n    border-bottom: 1px solid rgba(55, 53, 47, 0.16);\n}\n\n\n\n.johannes-editor blockquote {\n    margin: 0.5rem 0;\n    padding-left: 20px;\n    border-left: 4px solid rgb(55, 53, 47);\n    font-style: italic\n}\n\n.johannes-editor cite {\n    padding-top: 1rem !important;\n    display: inline-block;\n}\n\n\n.johannes-editor cite::before {\n    content: \'â€” \';\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#linkBox {\n    border-radius: 2px;\n    padding: 20px;\n    background-color: #f9f9f9;\n\n\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(0, 0, 0, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n\n    border: 1px solid #d0d0d0;\n    width: fit-content;\n    z-index: 999999;\n    color: rgb(120, 119, 116);\n    border-radius: none;\n}\n\n\n#linkBox input {\n    width: 316px;\n    padding: 8px 40px 8px 16px;\n    /* border-color: #d0d0d0; */\n\n    border: 1px solid #949494;\n    /* border-radius: 4px; */\n    height: 24px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n\n#linkBox input::selection,\n#linkBox input:focus {\n    border-radius: none;\n}\n\n\n\n\n\n\n\n\n/** Text formatting Bar **/\n\n\n\n#floatingToolbar {\n    justify-content: space-between;\n    padding: 8px 16px;\n    background-color: #f9f9f9;\n    width: fit-content;\n    z-index: 999999;\n    position: absolute;\n    user-select: none;\n}\n\n/* TODO: remove this*/\nspan {\n    font-family: Arial, sans-serif;\n}\n\n\n#floatingToolbar .item {\n    color: rgb(120, 119, 116);\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#floatingToolbar .item>button {\n\n    display: inline-flex;\n    align-items: center;\n}\n\n\n#floatingToolbar select {\n    color: rgb(120, 119, 116);\n    border: none;\n    font-size: 0.85rem;\n    background-color: inherit;\n}\n\n.select-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.select-wrapper ul {\n    position: absolute;\n    background: #f9f9f9;\n    flex-direction: column;\n    width: fit-content;\n    padding-bottom: 0.5rem;\n    padding-left: 5px;\n    padding-right: 5px;\n    top: 2.2rem;\n    color: rgb(55, 53, 47);\n    padding-right: 0.3125rem;\n}\n\n\n\n.select-wrapper ul li {\n    /* display: flex;\n    flex-direction: row !important;\n    background-color: yellow; */\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.625rem;\n    padding: 0.1875rem 0.3125rem;\n    border-radius: 0.1875rem;\n    user-select: none !important;\n\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.select-wrapper ul li span {\n    display: inline-block;\n    width: max-content;\n}\n\n.select-wrapper ul li .option-image {\n    width: 1.375rem;\n    height: 1.375rem;\n    color: #242424;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.select-wrapper ul li .option-image svg {\n    color: #4f4f4f;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.text-formatting-select-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n#turnIntoButton span {\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n\n}\n\n#turnIntoButton svg use {\n    margin: auto;\n}\n\n.select-wrapper {\n    position: relative;\n    color: rgb(120, 119, 116);\n}\n\n\n.select-wrapper > button {\n    color: rgba(55, 53, 47, 0.85);\n}\n\n\n\n\n\n\n\ncode {\n    background-color: #d0d0d0;\n}\n\n\n\n\na:not([href]) {\n    background-color: #d3e3fd;\n}\n\n.text-formatting-button-active {\n    color: #2382e2;\n}\n\n.text-formatting-circle-active {\n    border-color: #2382e2 !important;\n}\n\n\n\n#moreTextOptionSelect {\n    position: absolute;\n}\n\n.moreTextOptionWrapper {\n    position: relative;\n}\n\n\n.select-wrapper ul li>h3 {\n    margin: 0;\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 0.3125rem;\n    margin-bottom: 0.3125rem;\n}\n\n\n.bgc-red {\n    background-color: #FDDEDE;\n}\n\n.bgc-green {\n    background-color: #D7F7DC;\n}\n\n.bgc-blue {\n    background-color: #D9EDF6;\n}\n\n.bgc-yellow {\n    background-color: #FAF4D1;\n}\n\n.bgc-grey {\n    background-color: #E1E0E0;\n}\n\np,\nmark {\n    line-height: 1;\n}\n\n#turnIntoSelect .option-image {\n    /* display: none !important; */\n}\n\n.border-less-image {\n    width: 24px;\n    height: 24px;\n}\n\n\n\n\n/** Block Options **/\n.soft-box-shadow {\n    margin: 0;\n    padding: 0;\n    border-radius: 2px;\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(216, 196, 196, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n    border: 1px solid #d0d0d0;\n}\n\n.block-options-wrapper {\n    z-index: 999999;\n    position: absolute;\n    display: none;\n}\n\n.block-options {\n    width: 19rem;\n    max-height: 19rem;\n    overflow-y: auto;\n}\n\n.block-options {\n    padding: 0 0.625rem;\n    background: #f9f9f9;\n}\n\n.block-options section h2 {\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 0.3125rem;\n    margin-bottom: 0.3125rem;\n    padding-left: 0.3125rem;\n}\n\n.block-options .option {\n    padding: 0.3125rem 0.625rem;\n    margin: 0.3125rem 0;\n    cursor: pointer;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: left;\n    gap: 0.6rem;\n    border-radius: 3px;\n}\n\n.block-options .option:focus {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n.option-focused {\n    outline: none;\n    background-color: #e9e9e9;\n    border: none;\n}\n\n#deleteOption.option-focused {\n    color: #EB5757 !important;\n}\n\n#deleteOption.option-focused svg {\n    color: #EB5757 !important;\n}\n\n\n\n.block-options .option:focus-visible {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n/* .option-hover:hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n} */\n\n/* .select-wrapper>button, */\n\n/* #turnIntoButton,\n#colorTextButton {\n    padding-left: 4px;\n} */\n\n#turnIntoButton:not([disabled]):hover,\n#colorTextButton:not([disabled]):hover,\n#moreTextOptionButton:not([disabled]):hover,\n#floatingToolbar .item>button:not([disabled]):hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n}\n\n\n\n.option[focused="true"] {\n    background-color: #bde4ff;\n}\n\n\n\n\n\n.option-image {\n    width: 2.875rem;\n    height: 2.875rem;\n    border-radius: 0.1875rem;\n    border: 1px solid #ccc;\n    color: #4f4f4f;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    vertical-align: middle;\n    align-items: center;\n    background-color: #ffff;\n    box-sizing: border-box;\n}\n\n.option-image img {\n    max-width: 2.875rem;\n    max-height: 2.875rem;\n}\n\n.option-image svg {\n    margin: 0;\n    padding: 0;\n    padding: 0.625rem;\n    box-sizing: border-box;\n\n}\n\n.option-text * {\n    margin: 0;\n    padding: 0;\n\n}\n\n.option-text .block-title {\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.option-text .block-description {\n    font-size: small !important;\n}\n\n/** End Block Options **/\n\n\n\n#deleteBlockButton:hover svg,\n#deleteBlockButton:hover {\n    color: rgb(235, 87, 87) !important;\n}\n\n\n\n.johannes-editor *::selection {\n    background-color: rgba(211, 227, 253, 0.5) !important;\n}\n\n.johannes-editor mark,\n.johannes-editor * {\n    line-height: 1.5 !important;\n}\n\n.option {\n    justify-content: space-between;\n}\n\n.text-option {\n    display: flex;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n    gap: 0.625rem;\n}\n\n\n\n\n:root {\n    /* font-size: 16px; */\n    /* Tamanho padrÃ£o */\n}\n\n/* Para telas com densidade mÃ©dia */\n@media only screen and (-webkit-min-device-pixel-ratio: 2),\nonly screen and (min--moz-device-pixel-ratio: 2),\nonly screen and (min-resolution: 192dpi),\nonly screen and (min-resolution: 2dppx) {\n    :root {\n        font-size: 18px;\n        /* Aumenta o tamanho da fonte para telas de alta densidade */\n    }\n}\n\n/* Para telas com altÃ­ssima densidade */\n@media only screen and (-webkit-min-device-pixel-ratio: 3),\nonly screen and (min--moz-device-pixel-ratio: 3),\nonly screen and (min-resolution: 288dpi),\nonly screen and (min-resolution: 3dppx) {\n    :root {\n        font-size: 20px;\n        /* Ainda maior para telas de densidade muito alta */\n    }\n}',"",{version:3,sources:["webpack://./src/assets/css/main.css"],names:[],mappings:"AAAA,eAAe;;AAEf;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,WAAW;IACX,iBAAiB;IACjB,uBAAuB;IACvB,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,+BAA+B;IAC/B,gCAAgC;IAChC,wBAAwB;AAC5B;;;;AAIA,eAAe;AACf;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB;;AAEA,mBAAmB;;;;AAInB,YAAY;AACZ;;IAEI,6BAA6B;AACjC;;;;AAIA;IACI,mBAAmB;IACnB,aAAa;IACb,kBAAkB;IAClB,iBAAiB;IACjB,MAAM;;IAEN,mBAAmB;IACnB,kBAAkB;IAClB,sBAAsB;;AAE1B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,2BAA2B;IAC3B,oBAAoB;;AAExB;;AAEA;IACI,qBAAqB;IACrB,cAAc;IACd,SAAS;IACT,UAAU;AACd;;AAEA;IACI,qBAAqB;IACrB,0BAA0B;AAC9B;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;;AAGA;IACI,6BAA6B;AACjC;;AAEA;;IAEI,+BAA+B;AACnC;;AAEA,eAAe;;;;AAIf;IACI,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;;IAEjB,4BAA4B;IAC5B,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,WAAW;AACf;;;AAGA;IACI,mBAAmB;AACvB;;AAEA;IACI,+BAA+B;IAC/B,yBAAyB;IACzB,cAAc;AAClB;;AAEA,mCAAmC;;;AAGnC;IACI,+BAA+B;IAC/B,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,+BAA+B;IAC/B,2BAA2B;IAC3B,cAAc;AAClB;;;;AAIA;IACI,iBAAiB;IACjB,8BAA8B;AAClC;;AAEA;IACI,WAAW;;AAEf;;AAEA;IACI,WAAW;IACX,sBAAsB;;;AAG1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,oCAAoC;;IAEpC,4MAA4M;AAChN;;;AAGA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;;AAGA;;IAEI,iBAAiB;AACrB;;;AAGA;IACI,WAAW;IACX,UAAU;IACV,SAAS;IACT,6BAA6B;AACjC;;;AAGA;IACI,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,mBAAmB;IACnB,YAAY;IACZ,+CAA+C;AACnD;;;;AAIA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,sCAAsC;IACtC;AACJ;;AAEA;IACI,4BAA4B;IAC5B,qBAAqB;AACzB;;;AAGA;IACI,aAAa;AACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;IACI,kBAAkB;IAClB,aAAa;IACb,yBAAyB;;;IAGzB;;;;qCAIiC;;;IAGjC,yBAAyB;IACzB,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,mBAAmB;AACvB;;;AAGA;IACI,YAAY;IACZ,0BAA0B;IAC1B,2BAA2B;;IAE3B,yBAAyB;IACzB,wBAAwB;IACxB,YAAY;;IAEZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;AACvB;;;AAGA;;IAEI,mBAAmB;AACvB;;;;;;;;;AASA,0BAA0B;;;;AAI1B;IACI,8BAA8B;IAC9B,iBAAiB;IACjB,yBAAyB;IACzB,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,8BAA8B;AAClC;;;AAGA;IACI,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,oBAAoB;IACpB,mBAAmB;AACvB;;;AAGA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,sBAAsB;IACtB,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;IACX,sBAAsB;IACtB,wBAAwB;AAC5B;;;;AAIA;IACI;;+BAE2B;IAC3B,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,aAAa;IACb,4BAA4B;IAC5B,wBAAwB;IACxB,4BAA4B;;IAE5B,2BAA2B;IAC3B,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,cAAc;IACd,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;;AAErB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;AAC7B;;;AAGA;IACI,6BAA6B;AACjC;;;;;;;;AAQA;IACI,yBAAyB;AAC7B;;;;;AAKA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,gCAAgC;AACpC;;;;AAIA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;;AAGA;IACI,SAAS;IACT,2BAA2B;IAC3B,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,2BAA2B;IAC3B,qBAAqB;IACrB,wBAAwB;AAC5B;;;AAGA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,cAAc;AAClB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;;;;AAKA,oBAAoB;AACpB;IACI,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB;;;;qCAIiC;;IAEjC,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,2BAA2B;IAC3B,qBAAqB;IACrB,wBAAwB;IACxB,uBAAuB;AAC3B;;AAEA;IACI,2BAA2B;IAC3B,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,qBAAqB;IACrB,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;;;AAIA;IACI,aAAa;IACb,yBAAyB;IACzB,eAAe;AACnB;;AAEA;;;;;GAKG;;AAEH,4BAA4B;;AAE5B;;;GAGG;;AAEH;;;;IAII,yBAAyB;IACzB,mCAAmC;IACnC,kBAAkB;IAClB,qBAAqB;AACzB;;;;AAIA;IACI,yBAAyB;AAC7B;;;;;;AAMA;IACI,eAAe;IACf,gBAAgB;IAChB,wBAAwB;IACxB,sBAAsB;IACtB,cAAc;;IAEd,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,iBAAiB;IACjB,sBAAsB;;AAE1B;;AAEA;IACI,SAAS;IACT,UAAU;;AAEd;;AAEA;IACI,2BAA2B;IAC3B,gBAAgB;AACpB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA,wBAAwB;;;;AAIxB;;IAEI,kCAAkC;AACtC;;;;AAIA;IACI,qDAAqD;AACzD;;AAEA;;IAEI,2BAA2B;AAC/B;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;AACjB;;;;;AAKA;IACI,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA,mCAAmC;AACnC;;;;IAII;QACI,eAAe;QACf,4DAA4D;IAChE;AACJ;;AAEA,uCAAuC;AACvC;;;;IAII;QACI,eAAe;QACf,mDAAmD;IACvD;AACJ",sourcesContent:['/** CSS reset */\n\n.button-reset {\n    border: none;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    overflow: visible;\n    background: transparent;\n    color: inherit;\n    font: inherit;\n    line-height: normal;\n    -webkit-font-smoothing: inherit;\n    -moz-osx-font-smoothing: inherit;\n    -webkit-appearance: none;\n}\n\n\n\n/** add block */\n.add-block {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #000;\n    background-color: white;\n    transition: all 0.3s ease;\n    box-sizing: border-box;\n    margin-left: 1.3rem;\n}\n\n.add-block-wrapper {\n    width: 100%;\n    height: 3.125rem;\n}\n\n.add-block-wrapper:hover .add-block {\n    display: flex;\n}\n\n/** and add block */\n\n\n\n/** List  **/\nol.johannes-content-element,\nul.johannes-content-element {\n    padding-left: 1rem !important;\n}\n\n\n\n.johannes-content-element li>button {\n    /* display: none; */\n    display: none;\n    position: absolute;\n    margin-left: 10px;\n    top: 0;\n\n    flex-direction: row;\n    align-items: start;\n    justify-content: start;\n\n}\n\n.johannes-content-element li {\n    position: relative;\n}\n\n.johannes-content-element li::before {\n    margin-left: 0.3125rem;\n}\n\n.johannes-content-element li:hover>button {\n    /* display: inline-block; */\n    display: inline-flex;\n\n}\n\np.johannes-content-element {\n    display: inline-block;\n    line-height: 1;\n    margin: 0;\n    padding: 0;\n}\n\n.johannes-content-element .checkbox-list {\n    list-style-type: none;\n    padding-left: 0 !important;\n}\n\n\n.johannes-content-element .checkbox-list li {\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n}\n\n\n.johannes-content-element ul.checkbox-list input[type="checkbox"]:checked+span {\n    text-decoration: line-through;\n}\n\nul.johannes-content-element:not(.checkbox-list),\nol.johannes-content-element:not(.checkbox-list) {\n    padding-left: 1.5rem !important;\n}\n\n/** and list **/\n\n\n\n.block>.drag-handler {\n    color: #84888d;\n    visibility: hidden;\n    cursor: grab;\n    align-self: start;\n\n    /* background-color: pink; */\n    padding-top: 0.33rem;\n    position: absolute;\n}\n\n.drag-handler svg {\n    /* background-color: red; */\n}\n\n.drag-handler svg use {\n    /* background-color: blue; */\n}\n\n.drag-handler:active {\n    cursor: grabbing;\n}\n\n.block {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 1rem;\n    position: relative;\n}\n\n.block>*:not(.drag-handler) {\n    padding-left: 1.25rem;\n}\n\n.block:hover .drag-handler {\n    visibility: visible;\n    vertical-align: top;\n    justify-content: start;\n}\n\n.drop-line {\n    height: 1rem;\n    background-color: #84888d;\n    width: 100%;\n}\n\n\n.title h1 {\n    margin-left: 1.3rem;\n}\n\nh1[data-placeholder]:empty:before {\n    content: attr(data-placeholder);\n    color: #84888d !important;\n    display: block;\n}\n\nh1[data-placeholder]:focus:before {}\n\n\n*[contenteditable="true"]:not(h1):empty:before {\n    content: attr(data-placeholder);\n    color: #84888acd;\n    display: none;\n}\n\n*[contenteditable="true"]:not(h1):empty:hover:before {\n    display: block;\n}\n\ncite[contenteditable="true"]:empty:before {\n    display: block;\n}\n\n*[contenteditable="true"]:not(h1)[data-placeholder]:empty:focus:before {\n    content: attr(data-placeholder);\n    color: #84888acd !important;\n    display: block;\n}\n\n\n\nh1 {\n    font-size: 2.5rem;\n    font-weight: bolder !important;\n}\n\n.johannes-editor {\n    width: 100%;\n\n}\n\n.content {\n    width: 100%;\n    box-sizing: border-box;\n\n\n}\n\npre {\n    width: 100%;\n}\n\n[contenteditable] {\n    outline: none;\n}\n\nbody {\n    height: 2000px;\n    background-color: #f0f0f1 !important;\n\n    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n}\n\n\n.editor {\n    display: flex;\n    margin-top: 80px;\n}\n\np {\n    color: #242424;\n}\n\n\n.block,\n.block * {\n    user-select: text;\n}\n\n\n.johannes-content-element {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    /* background-color: green; */\n}\n\n\n#johannesEditor {\n    width: 60%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.johannes-editor hr {\n    width: 100%;\n    height: 2px;\n    visibility: visible;\n    border: none;\n    border-bottom: 1px solid rgba(55, 53, 47, 0.16);\n}\n\n\n\n.johannes-editor blockquote {\n    margin: 0.5rem 0;\n    padding-left: 20px;\n    border-left: 4px solid rgb(55, 53, 47);\n    font-style: italic\n}\n\n.johannes-editor cite {\n    padding-top: 1rem !important;\n    display: inline-block;\n}\n\n\n.johannes-editor cite::before {\n    content: \'â€” \';\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#linkBox {\n    border-radius: 2px;\n    padding: 20px;\n    background-color: #f9f9f9;\n\n\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(0, 0, 0, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n\n    border: 1px solid #d0d0d0;\n    width: fit-content;\n    z-index: 999999;\n    color: rgb(120, 119, 116);\n    border-radius: none;\n}\n\n\n#linkBox input {\n    width: 316px;\n    padding: 8px 40px 8px 16px;\n    /* border-color: #d0d0d0; */\n\n    border: 1px solid #949494;\n    /* border-radius: 4px; */\n    height: 24px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n\n#linkBox input::selection,\n#linkBox input:focus {\n    border-radius: none;\n}\n\n\n\n\n\n\n\n\n/** Text formatting Bar **/\n\n\n\n#floatingToolbar {\n    justify-content: space-between;\n    padding: 8px 16px;\n    background-color: #f9f9f9;\n    width: fit-content;\n    z-index: 999999;\n    position: absolute;\n    user-select: none;\n}\n\n/* TODO: remove this*/\nspan {\n    font-family: Arial, sans-serif;\n}\n\n\n#floatingToolbar .item {\n    color: rgb(120, 119, 116);\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#floatingToolbar .item>button {\n\n    display: inline-flex;\n    align-items: center;\n}\n\n\n#floatingToolbar select {\n    color: rgb(120, 119, 116);\n    border: none;\n    font-size: 0.85rem;\n    background-color: inherit;\n}\n\n.select-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.select-wrapper ul {\n    position: absolute;\n    background: #f9f9f9;\n    flex-direction: column;\n    width: fit-content;\n    padding-bottom: 0.5rem;\n    padding-left: 5px;\n    padding-right: 5px;\n    top: 2.2rem;\n    color: rgb(55, 53, 47);\n    padding-right: 0.3125rem;\n}\n\n\n\n.select-wrapper ul li {\n    /* display: flex;\n    flex-direction: row !important;\n    background-color: yellow; */\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.625rem;\n    padding: 0.1875rem 0.3125rem;\n    border-radius: 0.1875rem;\n    user-select: none !important;\n\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.select-wrapper ul li span {\n    display: inline-block;\n    width: max-content;\n}\n\n.select-wrapper ul li .option-image {\n    width: 1.375rem;\n    height: 1.375rem;\n    color: #242424;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.select-wrapper ul li .option-image svg {\n    color: #4f4f4f;\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n.text-formatting-select-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n#turnIntoButton span {\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n\n}\n\n#turnIntoButton svg use {\n    margin: auto;\n}\n\n.select-wrapper {\n    position: relative;\n    color: rgb(120, 119, 116);\n}\n\n\n.select-wrapper > button {\n    color: rgba(55, 53, 47, 0.85);\n}\n\n\n\n\n\n\n\ncode {\n    background-color: #d0d0d0;\n}\n\n\n\n\na:not([href]) {\n    background-color: #d3e3fd;\n}\n\n.text-formatting-button-active {\n    color: #2382e2;\n}\n\n.text-formatting-circle-active {\n    border-color: #2382e2 !important;\n}\n\n\n\n#moreTextOptionSelect {\n    position: absolute;\n}\n\n.moreTextOptionWrapper {\n    position: relative;\n}\n\n\n.select-wrapper ul li>h3 {\n    margin: 0;\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 0.3125rem;\n    margin-bottom: 0.3125rem;\n}\n\n\n.bgc-red {\n    background-color: #FDDEDE;\n}\n\n.bgc-green {\n    background-color: #D7F7DC;\n}\n\n.bgc-blue {\n    background-color: #D9EDF6;\n}\n\n.bgc-yellow {\n    background-color: #FAF4D1;\n}\n\n.bgc-grey {\n    background-color: #E1E0E0;\n}\n\np,\nmark {\n    line-height: 1;\n}\n\n#turnIntoSelect .option-image {\n    /* display: none !important; */\n}\n\n.border-less-image {\n    width: 24px;\n    height: 24px;\n}\n\n\n\n\n/** Block Options **/\n.soft-box-shadow {\n    margin: 0;\n    padding: 0;\n    border-radius: 2px;\n    box-shadow:\n        0 4px 6px rgba(0, 0, 0, 0.1),\n        0 -2px 4px rgba(216, 196, 196, 0.02),\n        -2px 0 4px rgba(0, 0, 0, 0.02),\n        2px 0 4px rgba(0, 0, 0, 0.02);\n\n    border: 1px solid #d0d0d0;\n}\n\n.block-options-wrapper {\n    z-index: 999999;\n    position: absolute;\n    display: none;\n}\n\n.block-options {\n    width: 19rem;\n    max-height: 19rem;\n    overflow-y: auto;\n}\n\n.block-options {\n    padding: 0 0.625rem;\n    background: #f9f9f9;\n}\n\n.block-options section h2 {\n    font-size: small !important;\n    color: #37352fa6;\n    margin: 0;\n    padding: 0;\n    font-weight: 600 !important;\n    margin-top: 0.3125rem;\n    margin-bottom: 0.3125rem;\n    padding-left: 0.3125rem;\n}\n\n.block-options .option {\n    padding: 0.3125rem 0.625rem;\n    margin: 0.3125rem 0;\n    cursor: pointer;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: left;\n    gap: 0.6rem;\n    border-radius: 3px;\n}\n\n.block-options .option:focus {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n.option-focused {\n    outline: none;\n    background-color: #e9e9e9;\n    border: none;\n}\n\n#deleteOption.option-focused {\n    color: #EB5757 !important;\n}\n\n#deleteOption.option-focused svg {\n    color: #EB5757 !important;\n}\n\n\n\n.block-options .option:focus-visible {\n    outline: none;\n    background-color: #e9e9e9;\n    border: inherit;\n}\n\n/* .option-hover:hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n} */\n\n/* .select-wrapper>button, */\n\n/* #turnIntoButton,\n#colorTextButton {\n    padding-left: 4px;\n} */\n\n#turnIntoButton:not([disabled]):hover,\n#colorTextButton:not([disabled]):hover,\n#moreTextOptionButton:not([disabled]):hover,\n#floatingToolbar .item>button:not([disabled]):hover {\n    background-color: #e9e9e9;\n    box-shadow: 0px 0px 0px 2px #e9e9e9;\n    border-radius: 1px;\n    transition: 0.1s ease;\n}\n\n\n\n.option[focused="true"] {\n    background-color: #bde4ff;\n}\n\n\n\n\n\n.option-image {\n    width: 2.875rem;\n    height: 2.875rem;\n    border-radius: 0.1875rem;\n    border: 1px solid #ccc;\n    color: #4f4f4f;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    vertical-align: middle;\n    align-items: center;\n    background-color: #ffff;\n    box-sizing: border-box;\n}\n\n.option-image img {\n    max-width: 2.875rem;\n    max-height: 2.875rem;\n}\n\n.option-image svg {\n    margin: 0;\n    padding: 0;\n    padding: 0.625rem;\n    box-sizing: border-box;\n\n}\n\n.option-text * {\n    margin: 0;\n    padding: 0;\n\n}\n\n.option-text .block-title {\n    font-size: small !important;\n    font-weight: 500;\n}\n\n.option-text .block-description {\n    font-size: small !important;\n}\n\n/** End Block Options **/\n\n\n\n#deleteBlockButton:hover svg,\n#deleteBlockButton:hover {\n    color: rgb(235, 87, 87) !important;\n}\n\n\n\n.johannes-editor *::selection {\n    background-color: rgba(211, 227, 253, 0.5) !important;\n}\n\n.johannes-editor mark,\n.johannes-editor * {\n    line-height: 1.5 !important;\n}\n\n.option {\n    justify-content: space-between;\n}\n\n.text-option {\n    display: flex;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n    gap: 0.625rem;\n}\n\n\n\n\n:root {\n    /* font-size: 16px; */\n    /* Tamanho padrÃ£o */\n}\n\n/* Para telas com densidade mÃ©dia */\n@media only screen and (-webkit-min-device-pixel-ratio: 2),\nonly screen and (min--moz-device-pixel-ratio: 2),\nonly screen and (min-resolution: 192dpi),\nonly screen and (min-resolution: 2dppx) {\n    :root {\n        font-size: 18px;\n        /* Aumenta o tamanho da fonte para telas de alta densidade */\n    }\n}\n\n/* Para telas com altÃ­ssima densidade */\n@media only screen and (-webkit-min-device-pixel-ratio: 3),\nonly screen and (min--moz-device-pixel-ratio: 3),\nonly screen and (min-resolution: 288dpi),\nonly screen and (min-resolution: 3dppx) {\n    :root {\n        font-size: 20px;\n        /* Ainda maior para telas de densidade muito alta */\n    }\n}'],sourceRoot:""}]);const a=s},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&s[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},s=[],a=0;a<e.length;a++){var l=e[a],c=o.base?l[0]+o.base:l[0],d=r[c]||0,u="".concat(c," ").concat(d);r[c]=d+1;var A=t(u),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=i(p,o);o.byIndex=a,n.splice(a,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var s=0;s<r.length;s++){var a=t(r[s]);n[a].references--}for(var l=o(e,i),c=0;c<r.length;c++){var d=t(r[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}r=l}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},528:()=>{document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".johannes-editor");let n=null,t=document.createElement("div");t.classList.add("drop-line"),t.style.height="2px",t.style.display="none",e.addEventListener("dragstart",(e=>{e.target.classList?.contains("drag-handler")&&(n=e.target.closest(".block"),n.setAttribute("draggable","true"),setTimeout((()=>{n.style.opacity="0.5"}),0))})),e.addEventListener("dragend",(()=>{setTimeout((()=>{n&&(n.style.opacity="",n.removeAttribute("draggable"),n=null),t.remove()}),0)})),e.addEventListener("dragover",(e=>{e.preventDefault();let o=e.target.closest(".block");if(o&&o!==n){let n=o.getBoundingClientRect(),i=n.y+n.height/2;e.clientY>i?o.nextElementSibling!==t&&o.insertAdjacentElement("afterend",t):o.previousElementSibling!==t&&o.insertAdjacentElement("beforebegin",t)}t.style.display="block"})),e.addEventListener("drop",(e=>{e.preventDefault(),n&&t&&t.parentElement&&(t.parentElement.insertBefore(n,t),t.remove())}))}))},167:()=>{let e=[],n=[];document.addEventListener("DOMContentLoaded",(function(){const t=document.querySelector(".content");if(t){function o(){const n=t.innerHTML;e.push(n)}t.addEventListener("input",(()=>{o()})),document.addEventListener("keydown",(o=>{o.ctrlKey&&"z"===o.key?(function(){if(e.length>0){const o=e.pop();n.push(t.innerHTML),t.innerHTML=o}}(),o.preventDefault()):o.ctrlKey&&"y"===o.key&&(function(){if(n.length>0){const o=n.pop();e.push(t.innerHTML),t.innerHTML=o}}(),o.preventDefault())})),o()}}))}},n={};function t(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{"use strict";class e{creators;static _instance;static ELEMENT_TYPES={BLOCK_PARAGRAPH:"block-p",PARAGRAPH:"p",CHECKBOX_ITEM:"checkboxItem",LIST_ITEM:"listItem",CODE:"code",QUOTE:"blockquote",BULLETED_LIST:"ul",NUMBERED_LIST:"ol",CHECK_LIST:"checkLists",HEADER_1:"h1",HEADER_2:"h2",HEADER_3:"h3",HEADER_4:"h4",HEADER_5:"h5",HEADER_6:"h6",DRAG_HANDLE_BUTTON:"drag-handle-button"};constructor(){if(e._instance)throw new Error("Use ElementFactoryService.getInstance() to get instance.");this.creators={},this.register(e.ELEMENT_TYPES.BLOCK_PARAGRAPH,e.blockParagraphCreator()),this.register(e.ELEMENT_TYPES.PARAGRAPH,e.paragraphCreator()),this.register(e.ELEMENT_TYPES.CHECKBOX_ITEM,e.checkboxItemCreator()),this.register(e.ELEMENT_TYPES.LIST_ITEM,e.listItemCreator()),this.register(e.ELEMENT_TYPES.CODE,e.codeCreator()),this.register(e.ELEMENT_TYPES.QUOTE,e.quoteCreator()),this.register(e.ELEMENT_TYPES.CHECK_LIST,e.checkListCreator()),this.register(e.ELEMENT_TYPES.BULLETED_LIST,e.bulletedListCreator()),this.register(e.ELEMENT_TYPES.NUMBERED_LIST,e.numberedListCreator()),this.register(e.ELEMENT_TYPES.HEADER_1,e.headingCreator(1)),this.register(e.ELEMENT_TYPES.HEADER_2,e.headingCreator(2)),this.register(e.ELEMENT_TYPES.HEADER_3,e.headingCreator(3)),this.register(e.ELEMENT_TYPES.HEADER_4,e.headingCreator(4)),this.register(e.ELEMENT_TYPES.HEADER_5,e.headingCreator(5)),this.register(e.ELEMENT_TYPES.HEADER_6,e.headingCreator(6)),this.register(e.ELEMENT_TYPES.DRAG_HANDLE_BUTTON,e.dragHandleButtonCreator()),e._instance=this}static getInstance(){return this._instance||(this._instance=new e),this._instance}register(e,n){this.creators[e]=n}create(e,n){const t=this.creators[e];if(!t)throw new TypeError(`No creator registered for type: ${e}`);return t(n||"")}static blockParagraphCreator(){return n=>e.blockParagraph(n)}static paragraphCreator(){return n=>e.paragraph(n)}static headingCreator(n){return t=>e.heading(n,t)}static checkboxItemCreator(){return n=>e.checkboxItem(n||"")}static listItemCreator(){return n=>e.listItem_2(n)}static dragHandleButtonCreator(){return()=>e.dragHandleButton()}static codeCreator(){return e=>{const n=document.createElement("pre"),t=document.createElement("code");return t.textContent=e||"",n.appendChild(t),t.contentEditable="true",n.classList.add("johannes-content-element"),t.classList.add("johannes-code"),n}}static quoteCreator(){return e=>{const n=document.createElement("blockquote");return n.textContent=e||"",n.contentEditable="true",n.classList.add("johannes-content-element"),n}}static checkListCreator(){return n=>{const t=document.createElement("ul");t.contentEditable="true",t.classList.add("johannes-content-element"),t.classList.add("swittable"),t.classList.add("list"),t.classList.add("checkbox-list");const o=e.checkboxItem(n||"");return t.appendChild(o),t}}static bulletedListCreator(){return n=>{const t=document.createElement("ul");t.contentEditable="true",t.classList.add("johannes-content-element"),t.classList.add("swittable"),t.classList.add("list");const o=e.listItem(n||"");return t.appendChild(o),t}}static numberedListCreator(){return n=>{const t=document.createElement("ol");t.contentEditable="true",t.classList.add("johannes-content-element"),t.classList.add("swittable"),t.classList.add("list");const o=e.listItem(n||"");return t.appendChild(o),t}}static paragraph(e=null){const n=document.createElement("p");return n.innerText=e||"",n.contentEditable="true",n.setAttribute("data-type","p"),n.classList.add("johannes-content-element"),n.classList.add("swittable"),n.classList.add("focusable"),n.classList.add("key-trigger"),n.setAttribute("data-placeholder","Write something or type / (slash) to choose a block..."),n}static listItem(e){let n=document.createElement("li");return n.classList.add("focusable"),n.classList.add("deletable"),n.classList.add("editable"),n.classList.add("focus"),n.classList.add("key-trigger"),n.classList.add("list-item"),n.innerText=e,n.contentEditable="true",n.setAttribute("data-placeholder","Item"),n}static heading(e,n=null){const t=document.createElement(`h${e}`);return t.innerText=n||"",t.contentEditable="true",t.setAttribute("data-type",`h${e}`),t.classList.add("johannes-content-element"),t.classList.add("swittable"),t.classList.add("focusable"),t.classList.add("focus"),t.classList.add("key-trigger"),t}static checkboxItem(e){let n=document.createElement("li");n.classList.add("deletable"),n.classList.add("list-item");let t=document.createElement("input");t.setAttribute("type","checkbox");let o=document.createElement("span");return o.textContent=e,o.setAttribute("data-placeholder","To-do"),o.setAttribute("contentEditable","true"),o.classList.add("focusable"),o.classList.add("editable"),o.classList.add("focus"),n.appendChild(t),n.appendChild(o),n}static listItem_2(e=null){let n=document.createElement("li");return n.classList.add("focusable"),n.classList.add("deletable"),n.classList.add("editable"),n.classList.add("focus"),n.classList.add("key-trigger"),n.classList.add("list-item"),n.innerText=e||"",n.setAttribute("contentEditable","true"),n.setAttribute("data-placeholder","Item"),n}static blockParagraph(n=null){let t=document.createElement("div"),o=e.paragraph(n),i=document.createElement("button");return i.innerHTML='<svg width="1.375rem" height="1.375rem" fill="currentColor"><use href="#icon-material-drag"></use></svg>',t.appendChild(o),t.classList.add("block"),t.classList.add("deletable"),i.classList.add("drag-handler"),i.classList.add("button-reset"),i.draggable=!0,t}static dragHandleButton(){let e=document.createElement("button");return e.innerHTML='<svg width="1.375rem" height="1.375rem" fill="currentColor"><use href="#icon-material-drag"></use></svg>',e.classList.add("drag-handler"),e.classList.add("button-reset"),e.draggable=!0,e}}class n{elementFactoryService;static instance;static BLOCK_OPERATIONS={TURN_INTO:"turnInto",CREATE_DEFAULT_BLOCK:"CreateDefaultBlock",DELETE_FOCUS_ON_PREVIOUS:"DeleteAndFocusOnPrevious",DELETE_FOCUS_ON_NEXT:"DeleteAndFocusOnNext",FOCUS_ON_FIRST:"FocusOnFirst",FOCUS_ON_PREVIOUS:"FocusOnPrevious",FOCUS_ON_NEXT:"FocusOnNext",DELETE:"delete",DUPLICATE:"duplicate",COPY:"copy",PASTE:"pates",CUT:"cut",REMOVE_FORMAT:"removeFormat",TRANSFORM_BLOCK:"transformBlock"};constructor(e){if(n.instance)throw new Error("Use BlockOperationsService.getInstance() to get instance.");this.elementFactoryService=e,n.instance=this}execCommand(e,t,o=null){if(e==n.BLOCK_OPERATIONS.COPY){if(document.getSelection&&navigator.clipboard&&navigator.clipboard.writeText){const e=document.getSelection();if(e&&e.toString().length>0){const n=e.toString();navigator.clipboard.writeText(n).then((()=>{const e=new CustomEvent("copiedText",{bubbles:!0,cancelable:!0});return document.dispatchEvent(e),!0})).catch((e=>{console.error("Error when copy text",e)}))}}return!1}if(e==n.BLOCK_OPERATIONS.CUT){if(document.getSelection&&navigator.clipboard&&navigator.clipboard.writeText){const e=document.getSelection();if(e&&e.toString().length>0){const n=e.toString();e.deleteFromDocument();const t=new CustomEvent("requestHideFloatingToolbar",{bubbles:!0,cancelable:!0});document.dispatchEvent(t),navigator.clipboard.writeText(n).then((()=>!0)).catch((e=>{console.error("Error when cut text: ",e)}))}}return!1}if(e==n.BLOCK_OPERATIONS.PASTE)return navigator.clipboard&&navigator.clipboard.readText&&navigator.clipboard.readText().then((e=>{const n=document.getSelection();if(n&&n.rangeCount>0){const t=n.getRangeAt(0);t.deleteContents(),t.insertNode(document.createTextNode(e));const o=new CustomEvent("requestUpdateFloatingToolbar",{bubbles:!0,cancelable:!0});return document.dispatchEvent(o),!0}console.error("No text selected or clipboard empty.")})).catch((e=>{console.error("Error when pasting text: ",e)})),!1;if(e==n.BLOCK_OPERATIONS.TRANSFORM_BLOCK){const e=this.getCurrentSelectedBlock();e&&o&&this.transformBlock(e,o)}if(e==n.BLOCK_OPERATIONS.REMOVE_FORMAT)return document.execCommand(n.BLOCK_OPERATIONS.REMOVE_FORMAT,!1);if(e==n.BLOCK_OPERATIONS.DELETE){this.deleteAndFocusOnNext();const e=new CustomEvent("requestHideFloatingToolbar",{bubbles:!0,cancelable:!0});return document.dispatchEvent(e),!0}if(e==n.BLOCK_OPERATIONS.DUPLICATE)return this.duplicateSelectedBlock(),!0;if(e==n.BLOCK_OPERATIONS.CREATE_DEFAULT_BLOCK){const e=document.activeElement||null;return this.createDefaultBlock(e),!0}if(e==n.BLOCK_OPERATIONS.FOCUS_ON_FIRST){const e=document.querySelector(".focusable");return!!e&&(e.focus(),!0)}if(e==n.BLOCK_OPERATIONS.DELETE_FOCUS_ON_PREVIOUS)return this.deleteAndFocusOnPrevious(),!0;if(e==n.BLOCK_OPERATIONS.DELETE_FOCUS_ON_NEXT)return this.deleteAndFocusOnNext(),!0;if(e==n.BLOCK_OPERATIONS.FOCUS_ON_PREVIOUS){const e=document.activeElement;return!!e&&(this.focusOnPrevious(e),!0)}if(e==n.BLOCK_OPERATIONS.FOCUS_ON_NEXT){const e=document.activeElement;return!!e&&(this.focusOnNext(e),!0)}if(e==n.BLOCK_OPERATIONS.TURN_INTO){if(!o)throw new Error;const e=n.getDraggableElementFromSelection();this.formatBlock(e,o)}const i=new CustomEvent("requestHideFloatingToolbar",{bubbles:!0,cancelable:!0});return document.dispatchEvent(i),!0}queryCommandState(){throw new Error("Method not implemented.")}static getInstance(t=null){return this.instance||(this.instance=new n(t||e.getInstance())),this.instance}formatBlock(e,n){let t=e.querySelector(".swittable"),o=t.innerText,i=this.elementFactoryService.create(n,o);e.replaceChild(i,t),i.closest(".focusable")||e.querySelector(".focusable")}static getDraggableElementFromSelection(){const e=window.getSelection();if(e&&e.rangeCount>0){let n=e.getRangeAt(0).commonAncestorContainer;for(n.nodeType===Node.TEXT_NODE&&(n=n.parentNode);n&&!(n instanceof HTMLElement);)n=n.parentNode;if(n)return n.closest(".block")}throw new Error}transformBlock(n,t){let o,i=n.querySelector(".swittable"),r=i?.innerText;switch(t){case"p":o=this.elementFactoryService.create(e.ELEMENT_TYPES.PARAGRAPH),o.innerText=r;break;case"h1":o=this.elementFactoryService.create(e.ELEMENT_TYPES.HEADER_1),o.innerText=r;break;case"h2":o=this.elementFactoryService.create(e.ELEMENT_TYPES.HEADER_2),o.innerText=r;break;case"h3":o=this.elementFactoryService.create(e.ELEMENT_TYPES.HEADER_3),o.innerText=r;break;case"h4":o=this.elementFactoryService.create(e.ELEMENT_TYPES.HEADER_4),o.innerText=r;break;case"h5":o=this.elementFactoryService.create(e.ELEMENT_TYPES.HEADER_5),o.innerText=r;break;case"h6":o=this.elementFactoryService.create(e.ELEMENT_TYPES.HEADER_6),o.innerText=r;break;case"code":o=document.createElement("pre");const n=document.createElement("code");n.innerText=r,o.appendChild(n);break;case"image":o=document.createElement("img"),o.src=r,o.alt="Descriptive text";break;case"quote":case"separator":break;case"bulleted-list":o=this.elementFactoryService.create(e.ELEMENT_TYPES.BULLETED_LIST,r);break;case"numbered-list":o=this.elementFactoryService.create(e.ELEMENT_TYPES.NUMBERED_LIST,r);break;case"todo-list":o=this.elementFactoryService.create(e.ELEMENT_TYPES.CHECK_LIST,r);break;default:return void console.error("Unsupported type")}o&&(n.replaceChild(o,i),o.closest(".focusable")||n.querySelector(".focusable"))}createNewElement(e){const n=e.target.closest(".johannes-content-element");n&&n.classList.contains("list")?this.createListItem(n):this.createDefaultBlock(n)}createListItem(e){let n=null,t=(document.activeElement,e.closest(".johannes-content-element"));t.classList.contains("checkbox-list")?n=this.elementFactoryService.create("checkboxItem",""):t.classList.contains("list")&&(n=this.elementFactoryService.create("listItem",""))}createDefaultBlock(n){const t=this.elementFactoryService.create(e.ELEMENT_TYPES.BLOCK_PARAGRAPH,"");n&&n.closest(".block")?n.closest(".block").insertAdjacentElement("afterend",t):document.querySelector("#johannesEditor .content").appendChild(t),t.querySelector(".johannes-content-element").focus()}deleteAndFocusOnPrevious(){const e=document.activeElement;this.focusOnPrevious(e),this.deleteTheCurrentElementAndTheDraggableBlockIfEmpty(e)}deleteAndFocusOnNext(){let e=this.getCurrentSelectedBlock()||this.getCurrentActiveBlock();e&&(this.focusOnNext(e),this.deleteTheCurrentElementAndTheDraggableBlockIfEmpty(e))}focusOnPrevious(e,n=null){let t=null;if("LI"===e.tagName.toUpperCase()){let o=e.previousElementSibling;if(!o)return;if(o&&o.classList.contains("focusable"))return t=o,void(n?this.applyCursorXEndPosition(t,n):this.focusOnTheEndOfTheText(t))}if("LI"===e.parentNode.tagName.toUpperCase()){let o=e.closest("li")?.previousElementSibling?.querySelector(".focusable");if(o&&o.classList.contains("focusable"))return t=o,void(n?this.applyCursorXEndPosition(t,n):this.focusOnTheEndOfTheText(t))}let o=e.closest(".block");if(!o)return;let i=o.previousElementSibling;for(;i;){let e=i.querySelectorAll(".focusable");if(e.length>0)return t=e[e.length-1],void(n?this.applyCursorXEndPosition(t,n):this.focusOnTheEndOfTheText(t));i=i.previousElementSibling}}focusOnNext(e,n=null){let t=null;if("LI"===e.tagName.toUpperCase()){let o=e.nextElementSibling;if(o&&o.classList.contains("focusable"))return t=o,n?this.applyCursorXStartPosition(t,n):this.focusOnTheStartOfTheText(t),t}if("LI"===e.parentNode.tagName.toUpperCase()){let o=e.closest("li")?.nextElementSibling?.querySelector(".focusable");if(o&&o.classList.contains("focusable"))return t=o,n?this.applyCursorXStartPosition(t,n):this.focusOnTheStartOfTheText(t),t}let o=e.closest(".block");if(!o)return;let i=o.nextElementSibling;for(;i;){let e=i.querySelectorAll(".focusable");if(e.length>0)return t=e[0],n?this.applyCursorXStartPosition(t,n):this.focusOnTheStartOfTheText(t),t;i=i.nextElementSibling}return t}deleteTheCurrentElementAndTheDraggableBlockIfEmpty(e){const n=e.closest(".block"),t=e.closest(".deletable");t?.remove(),n&&0==n.querySelectorAll(".editable").length&&n.remove()}applyCursorXEndPosition(e,n){const t=window.getSelection(),o=document.createRange();let i=e.lastChild,r=null;for(;i;){if(i.nodeType===Node.TEXT_NODE){r=this.adjustCursorOffset(i,n);break}i=(i.nodeName.toUpperCase(),i.previousSibling)}r&&r.closestNode?(o.setStart(r.closestNode,r.closestOffset),o.collapse(!0),t.removeAllRanges(),t.addRange(o),e.focus()):(o.selectNodeContents(e),o.collapse(!1),t.removeAllRanges(),t.addRange(o),e.focus())}applyCursorXStartPosition(e,n){const t=window.getSelection(),o=document.createRange();let i=e.firstChild,r=null;for(;i;){if(i.nodeType===Node.TEXT_NODE){r=this.adjustCursorOffset(i,n);break}i=i.nextSibling}r&&r.closestNode?(o.setStart(r.closestNode,r.closestOffset),o.collapse(!0),t.removeAllRanges(),t.addRange(o),e.focus()):(o.selectNodeContents(e),o.collapse(!0),t.removeAllRanges(),t.addRange(o),e.focus())}adjustCursorOffset(e,n){let t=document.createRange(),o=e,i=0,r=1/0;for(let o=0;o<e.textContent.length;o++){t.setStart(e,o),t.setEnd(e,o+1);const s=t.getBoundingClientRect(),a=Math.abs(s.left-n),l=Math.abs(s.right-n);(a<r||l<r)&&(r=Math.min(a,l),i=o+(l<a?1:0))}return n>t.getBoundingClientRect().right&&(i=e.textContent.length),{closestNode:o,closestOffset:i}}focusOnTheEndOfTheText(e){setTimeout((()=>{const n=document.createRange(),t=window.getSelection();n.selectNodeContents(e);let o=e;for(;o.lastChild&&o.lastChild.nodeType===Node.ELEMENT_NODE;)o=o.lastChild;o.lastChild&&(o=o.lastChild),n.setEnd(o,o.textContent.length),n.collapse(!1),t.removeAllRanges(),t.addRange(n),e.focus()}),10)}focusOnTheStartOfTheText(e){setTimeout((()=>{const n=document.createRange(),t=window.getSelection();n.selectNodeContents(e),n.collapse(!0),t.removeAllRanges(),t.addRange(n),e.focus()}),10)}getCurrentSelectedFocusable(){const e=window.getSelection();if(!e||0===e.rangeCount)return null;let n=e.getRangeAt(0).commonAncestorContainer;return n.nodeType===Node.TEXT_NODE&&(n=n.parentNode),n.closest(".focusable")}getCurrentSelectedBlock(){const e=window.getSelection();if(!e||0===e.rangeCount)return null;let n=e.getRangeAt(0).commonAncestorContainer;return n.nodeType===Node.TEXT_NODE&&(n=n.parentNode),n.closest(".block")}getCurrentActiveBlock(){let e=document.activeElement;return e?e.closest(".block"):null}duplicateSelectedBlock(){let e=this.getCurrentSelectedBlock()||this.getCurrentActiveBlock();if(!e||!e.parentNode)return void console.error("O elemento fornecido Ã© invÃ¡lido ou nÃ£o estÃ¡ no DOM.");const n=e.cloneNode(!0),t=e.nextSibling;e.parentNode.insertBefore(n,t)}}class o{_canHide;props;htmlElement;constructor(e){this.props=e,this.htmlElement=this.init(),this._canHide=!0}get display(){return"block"}documentAppendTo(e){e.appendChild(this.htmlElement)}get isVisible(){let e=this.htmlElement;if("none"===e.style.display||"hidden"===e.style.visibility||!document.contains(e))return!1;for(;e;){const n=window.getComputedStyle(e);if("none"===n.display||"hidden"===n.visibility)return!1;if(!e.parentElement)break;e=e.parentElement}return!0}show(){this._canHide=!1,this.htmlElement.style.display=this.display,setTimeout((()=>{this._canHide=!0}),100)}hide(){this._canHide||console.warn("Attempted to hide the element before 100 milliseconds have passed since the last display."),this.htmlElement.style.display="none"}get canHide(){return this._canHide&&this.isVisible}set canHide(e){this._canHide=e}focus(){this.htmlElement.focus()}changeVisibilityToVisible(){this.htmlElement.style.visibility="visible"}changeVisibilityToHidden(){this.htmlElement.style.visibility="hidden"}}class i extends o{constructor(){super({})}init(){const e=document.createElement("span");return e.innerText="No results",e.classList.add("empty-block-options"),e.style.padding="10px",e.style.color="rgba(55, 53, 47, 0.65)",e.style.display="none",e}}class r{head=null;tail=null;length=0;getFirst(){return this.head}getLast(){return this.tail}*[Symbol.iterator](){let e=this.head;if(e)do{yield e,e=e.nextNode}while(e&&e!==this.head)}forEach(e){let n=0;for(let t of this)e(t.value,n,this),n++}any(e){let n=this.head;for(;n;){if(e(n.value))return!0;if(n=n.nextNode,n===this.head)break}return!1}findFirst(e){if(!this.head)return null;let n=this.head;do{if(e(n.value))return n;n=n.nextNode}while(n&&n!==this.head);return null}findLast(e){if(!this.tail)return null;let n=this.tail;do{if(e(n.value))return n;n=n.previousNode}while(n&&n!==this.tail);return null}find(e){let n=this.head;for(;n;){if(n.value==e)return n;if(n=n.nextNode,n===this.head)break}return null}}class s{parentList;previousNode;nextNode;value;constructor(e,n){this.previousNode=null,this.nextNode=null,this.value=e,this.parentList=n}setNext(e){this.nextNode=e}setPrevious(e){this.previousNode=e}getNextSatisfying(e){let n=this.nextNode;const t=this;for(;n;){if(e(n.value))return n;if(n=n.nextNode,n===t)break}return null}getPreviousSatisfying(e){let n=this.previousNode;const t=this;for(;n&&n!==t;){if(e(n.value))return n;if(n=n.previousNode,n===this)break}return null}}class a extends r{constructor(){super()}append(e){const n=new s(e,this);this.head&&this.tail?(n.setPrevious(this.tail),n.setNext(this.head),this.tail.setNext(n),this.head.setPrevious(n),this.tail=n):(this.head=n,this.tail=n,this.head.setNext(this.tail),this.head.setPrevious(this.tail)),this.length++}}class l extends Error{constructor(e){super(`Service not found: ${e}`),this.name="ServiceNotFoundException"}}class c{static instance;services=new Map;constructor(){}static getInstance(){return c.instance||(c.instance=new c),c.instance}getInstanceOf(e){const n=this.services.get(e);if(!n)throw new l(e);return n}registerService(e,n){this.services.set(e,n)}registerServices(e){e.forEach(((e,n)=>{this.registerService(n,e)}))}reset(){this.services.clear()}}class d extends o{blockOperationsService;currentFocusedMenuItem;htmlFocusedElementBeforeOpenQuickMenu;menuSections;quickMenuEmpty;filterInput;static instance;constructor(){super({}),this.blockOperationsService=c.getInstance().getInstanceOf("IBlockOperationsService"),this.currentFocusedMenuItem=null,this.htmlFocusedElementBeforeOpenQuickMenu=null,this.menuSections=new a,this.quickMenuEmpty=new i;let e=this.htmlElement.querySelector(".block-options");this.quickMenuEmpty.documentAppendTo(e),this.attachEvents(),this.filterInput=""}init(){const e=document.createElement("div");e.id="quickMenu",e.classList.add("block-options-wrapper","soft-box-shadow"),e.style.display="none";const n=document.createElement("div");return n.classList.add("block-options"),n.style.position="relative",e.appendChild(n),e}append(e){this.menuSections.append(e),this.htmlElement.querySelector(".block-options").appendChild(e.htmlElement)}static getInstance(){return d.instance||(d.instance=new d),d.instance}switchVisualFocus(e){this.currentFocusedMenuItem!=e&&(this.currentFocusedMenuItem&&this.currentFocusedMenuItem.value.removeFocus(),this.currentFocusedMenuItem=e,this.currentFocusedMenuItem.value.focus(),this.htmlFocusedElementBeforeOpenQuickMenu?.focus())}focusOnTheFirstVisibleItem(){const e=this.menuSections.getFirst();let n=e;for(;n;){const t=n.value.menuItems.findFirst((e=>e.isVisible));if(t)return void this.switchVisualFocus(t);if(n=n.nextNode,n==e)return}}focusPreviousVisibleItem(){let e;if(this.currentFocusedMenuItem){if(e=this.currentFocusedMenuItem.getPreviousSatisfying((e=>e.isVisible)),!e){let n=this.menuSections.find(this.currentFocusedMenuItem.value.quickMenuSectionInstance).getPreviousSatisfying((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findLast((e=>e.isVisible))}}else{let n=this.menuSections.findLast((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findLast((e=>e.isVisible))}this.switchVisualFocus(e)}focusNextVisibleItem(){let e;if(this.currentFocusedMenuItem){if(e=this.currentFocusedMenuItem.getNextSatisfying((e=>e.isVisible)),!e){let n=this.menuSections.find(this.currentFocusedMenuItem.value.quickMenuSectionInstance).getNextSatisfying((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findFirst((e=>e.isVisible))}}else{let n=this.menuSections.findFirst((e=>e.isVisible));if(!n)return;e=n.value.menuItems.findFirst((e=>e.isVisible))}this.switchVisualFocus(e)}filterItems(){this.menuSections.forEach((e=>{e.filterSection(this.filterInput)})),this.menuSections.any((e=>e.isVisible))?this.quickMenuEmpty.hide():this.quickMenuEmpty.show(),this.focusOnTheFirstVisibleItem()}show(){setTimeout((()=>{if(this.htmlFocusedElementBeforeOpenQuickMenu=document.activeElement,!this.htmlFocusedElementBeforeOpenQuickMenu)throw new Error("Failed to capture the focused element before displaying the QuickMenu. Ensure an element is focused.");const e=document.getSelection().getRangeAt(0).getBoundingClientRect(),n=parseFloat(getComputedStyle(document.documentElement).fontSize),t=19*n;let o=e.right,i=e.bottom+window.scrollY;const r=1.25*n;o+this.htmlElement.offsetWidth+r>window.innerWidth&&(o=e.left-t,o<0&&(o=0)),this.htmlElement.style.left=`${o}px`,this.htmlElement.style.top=`${i}px`,super.show(),this.focusOnTheFirstVisibleItem(),this.htmlFocusedElementBeforeOpenQuickMenu.focus()}),10)}restore(){this.filterInput="",this.menuSections.forEach((e=>{e.restore()}))}hide(){this.restore(),this.htmlFocusedElementBeforeOpenQuickMenu?.focus(),super.hide()}attachEvents(){document.addEventListener("keydown",(e=>{if(this.isVisible||"/"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowLeft"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowRight"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowDown"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||"ArrowUp"!==e.key||e.ctrlKey||e.shiftKey||e.altKey)if(!this.isVisible||!/^[a-z0-9 ]$/i.test(e.key)||e.ctrlKey||e.shiftKey||e.altKey)if(this.isVisible&&"Backspace"===e.key)""==this.filterInput?this.hide():(this.removeLastFilterInputCharacter(),this.filterItems());else if(!this.isVisible||"Escape"!==e.key||e.ctrlKey||e.shiftKey||e.altKey){if("Enter"===e.key&&this.isVisible&&!e.ctrlKey&&!e.shiftKey&&!e.altKey){e.preventDefault(),e.stopPropagation();let n=this.currentFocusedMenuItem.value.htmlElement.getAttribute("data-type");n&&this.transformHtmlFocusedElementBeforeOpenQuickMenu(n)}}else this.hide();else this.concatFilterInput(e.key),this.filterItems();else e.preventDefault(),this.focusPreviousVisibleItem();else e.preventDefault(),this.focusNextVisibleItem();else e.preventDefault(),e.stopPropagation();else e.preventDefault(),e.stopPropagation();else this.show()})),document.addEventListener("click",(e=>{this.isVisible&&!e.target.closest(`#${this.htmlElement.id}`)&&this.hide()})),document.addEventListener("keydown",(e=>{if("Enter"===e.key&&this.isVisible){const e=this.currentFocusedMenuItem?.value.blockType;e&&this.transformHtmlFocusedElementBeforeOpenQuickMenu(e)}}))}transformHtmlFocusedElementBeforeOpenQuickMenu(e){let n=this.htmlFocusedElementBeforeOpenQuickMenu?.closest(".block");n&&e&&this.blockOperationsService.formatBlock(n,e),this.hide()}concatFilterInput(e){this.filterInput+=e.toLowerCase()}removeLastFilterInputCharacter(){this.filterInput.length>0&&(this.filterInput=this.filterInput.slice(0,-1))}}class u extends r{constructor(){super()}append(e){const n=new s(e,this);this.head&&this.tail?(this.tail.setNext(n),n.setPrevious(this.tail),this.tail=n):(this.head=n,this.tail=n),this.length++}}class A extends o{quickMenuInstance;menuItems=new u;constructor(e){super({title:e.title,classList:e.classList}),this.quickMenuInstance=e.quickMenuInstance}init(){const e=document.createElement("section");e.classList.add(this.props.classList);const n=document.createElement("h2");return n.textContent=this.props.title,e.appendChild(n),e}appendQuickMenuItems(e){e.forEach((e=>{this.appendQuickMenuItem(e)}))}appendQuickMenuItem(e){this.menuItems.append(e),this.htmlElement.appendChild(e.htmlElement)}filterSection(e){this.restore(),""!==e&&(this.menuItems.forEach((n=>{n.filterValue.toLocaleLowerCase().includes(e)||n.hide()})),this.menuItems.any((n=>n.filterValue.toLocaleLowerCase().includes(e)))||this.hide())}restore(){this.show(),this.menuItems.forEach((e=>{e.show()}))}}class p extends o{useElement;constructor(e,n="1rem",t="1rem"){super({hrefUseId:e,width:n,height:t}),this.useElement=this.htmlElement.querySelector("use")}init(){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.style.color="rgba(55, 53, 47, 0.85)";let n=document.createElementNS("http://www.w3.org/2000/svg","use");return n.setAttributeNS("http://www.w3.org/1999/xlink","href",`#${this.props.hrefUseId}`),e.appendChild(n),e.setAttribute("width",this.props.width),e.setAttribute("height",this.props.height),e.setAttribute("fill","currentColor"),e}clone(){return new p(this.props.hrefUseId,this.props.width,this.props.height)}setUseTo(e){this.useElement.setAttributeNS("http://www.w3.org/1999/xlink","href",`#${e}`)}}class m extends o{blockType;title;filterValue;description;quickMenuSectionInstance;constructor(e,n,t,o,i,r){super({title:n,description:t,SVGHrefUseId:o}),this.blockType=i,this.title=n,this.description=t,this.filterValue=r,this.quickMenuSectionInstance=e,this.blockType=i,this.attachEvents()}init(){const e=document.createElement("div");e.classList.add("option","option-hover","block-operation"),e.setAttribute("data-block-operation","apply-selected-block-type"),e.setAttribute("tabindex","0"),e.setAttribute("role","option");const n=document.createElement("div");n.classList.add("option-image");const t=new p(this.props.SVGHrefUseId,"100%","100%");n.appendChild(t.htmlElement),e.appendChild(n);const o=document.createElement("div");o.classList.add("option-text");const i=document.createElement("p");i.classList.add("block-title"),i.innerText=this.props.title,o.appendChild(i);const r=document.createElement("p");return r.classList.add("block-description"),r.innerText=this.props.description,o.appendChild(r),e.appendChild(o),e}get display(){return"flex"}focus(){this.htmlElement.classList.add("option-focused"),this.htmlElement.focus()}removeFocus(){this.htmlElement.classList.remove("option-focused")}attachEvents(){this.htmlElement.addEventListener("mousemove",(()=>{const e=this.quickMenuSectionInstance.menuItems.find(this);this.quickMenuSectionInstance.quickMenuInstance.switchVisualFocus(e)})),this.htmlElement.addEventListener("click",(()=>{this.quickMenuSectionInstance.quickMenuInstance.transformHtmlFocusedElementBeforeOpenQuickMenu(this.blockType)}))}}class h{static build(){const n=new d,t=new A({quickMenuInstance:n,title:"Basic blocks",classList:"basic-section"});t.appendQuickMenuItems([new m(t,"Paragraph","Just start writing with plain text.","icon-wordpress-paragraph",e.ELEMENT_TYPES.PARAGRAPH,"paragraph text p"),new m(t,"Image","Just start writing with plain text.","icon-wordpress-paragraph","image","image figure photo illustration picture "),new m(t,"Bulleted list","Organize items with bullet points.","icon-wordpress-bulleted-list","bulleted-list","bulleted list unordered list ul"),new m(t,"Numbered list","List items in a numbered format.","icon-wordpress-numbered-list","numbered-list","numbered list number list sequential list ol enumerated list ordered list"),new m(t,"Code","Insert code snippets with syntax highlighting.","icon-wordpress-code-mark","code","code script source markup"),new m(t,"Quote","Highlight text as a significant quote.","icon-wordpress-quote","quote","quote blockquote citation quotation"),new m(t,"Heading 2","Medium header for subsections.","icon-julia-head-2",e.ELEMENT_TYPES.HEADER_2,"header 2 heading 2 h2"),new m(t,"Heading 3","Small header for detailed sections.","icon-julia-head-2",e.ELEMENT_TYPES.HEADER_3,"header 3 heading 3 h3"),new m(t,"Separator","Visually divide blocks.","icon-wordpress-separator","separator","separator divider rule line")]),n.append(t);const o=new A({quickMenuInstance:n,title:"Heading",classList:"heading-section"});o.appendQuickMenuItems([new m(o,"Heading 1","Large header to organize content.","icon-julia-head-1",e.ELEMENT_TYPES.HEADER_1,"header 1 heading 1 h1"),new m(o,"Heading 2","Medium header for subsections.","icon-julia-head-2",e.ELEMENT_TYPES.HEADER_2,"header 2 heading 2 h2"),new m(o,"Heading 3","Small header for detailed sections.","icon-julia-head-3",e.ELEMENT_TYPES.HEADER_3,"header 3 heading 3 h3"),new m(o,"Heading 4","Small header for detailed sections.","icon-julia-head-4",e.ELEMENT_TYPES.HEADER_4,"header 4 heading 4 h4"),new m(o,"Heading 5","Small header for detailed sections.","icon-julia-head-5",e.ELEMENT_TYPES.HEADER_5,"header 5 heading 5 h5"),new m(o,"Heading 6","Small header for detailed sections.","icon-julia-head-6",e.ELEMENT_TYPES.HEADER_6,"header 6 heading 6 h6")]),n.append(o);const i=new A({quickMenuInstance:n,title:"List",classList:"list-section"});return i.appendQuickMenuItems([new m(i,"Todo list","Organize items with bullet points.","icon-material-check-list","todo-list","todo list task list checklist"),new m(i,"Bulleted list","Organize items with bullet points.","icon-wordpress-bulleted-list","bulleted-list","bulleted list unordered list ul"),new m(i,"Numbered list","List items in a numbered format.","icon-wordpress-numbered-list","numbered-list","numbered list number list sequential list ol enumerated list ordered list")]),n.append(i),n}}class E extends o{dropdownButton;dropdownList;constructor(e,n){super({}),this.dropdownButton=e,this.dropdownList=n,e.documentAppendTo(this.htmlElement),n.documentAppendTo(this.htmlElement)}init(){const e=document.createElement("div");return e.classList.add("select-wrapper"),e}}class C{static instance;constructor(){if(C.instance)throw new Error}static getInstance(){return this.instance||(this.instance=new C),this.instance}execCommand(e,n,t){if(e==C.QUERY_TEXT_OPERATIONS.INLINE_CODE)return this.toggleCodeExecCommand(),!0;let o=t||void 0;if("initial"==o&&(o=this.getInitialColorAsHex()),e==C.QUERY_TEXT_OPERATIONS.CREATE_LINK){const e=C.getSelectedHTMLElement();if(e?.closest("a"))return document.execCommand("unlink",!1,o);if(n){const e=new CustomEvent("showInputLinkBoxRequested",{bubbles:!0,cancelable:!0});return document.dispatchEvent(e),!0}}return document.execCommand(e,!1,o)}static QUERY_TEXT_OPERATIONS={HILITE_COLOR:"hiliteColor",FORE_COLOR:"foreColor",INLINE_CODE:"inlineCode",CREATE_LINK:"createLink",UNDERLINE:"underline"};queryCommandState(e,n){if(e===C.QUERY_TEXT_OPERATIONS.UNDERLINE){const e=C.getSelectedHTMLElement();if(e?.closest("a"))return!1}if(e===C.QUERY_TEXT_OPERATIONS.HILITE_COLOR)return this.queryHiliteColor(n);if(e===C.QUERY_TEXT_OPERATIONS.FORE_COLOR)return this.queryForeColor(n);if(e===C.QUERY_TEXT_OPERATIONS.CREATE_LINK){const e=C.getSelectedHTMLElement();return!!e?.closest("a")}return document.queryCommandState(e)}toggleCodeExecCommand(){const e=window.getSelection();if(!e||0===e.rangeCount)return;const n=e.getRangeAt(0);let t=n.commonAncestorContainer;for(;t&&"CODE"!==t.nodeName;)t=t.parentNode;if(t&&"CODE"===t.nodeName){const e=t,o=document.createRange();if(o.selectNodeContents(e),n.toString()===o.toString()){const n=e.parentNode;for(;n&&e.firstChild;)n.insertBefore(e.firstChild,e);n?.removeChild(e)}else{const e=n.toString();document.execCommand("insertHTML",!1,e)}document.getSelection()?.removeAllRanges()}else{const e=(new XMLSerializer).serializeToString(n.cloneContents());document.execCommand("insertHTML",!1,`<code>${e}</code>`)}}queryForeColor(e){const n=window.getSelection();if(!n)return!1;if(!n.rangeCount)return!1;let t=n.getRangeAt(0).commonAncestorContainer;t.nodeType===Node.TEXT_NODE&&(t=t.parentNode);const o=t.closest("font[color]");if(!o)return!1;const i=window.getComputedStyle(o).color;return this.rgbToHex(i).toUpperCase()===e.toUpperCase()}queryHiliteColor(e){const n=window.getSelection();if(!n)return!1;if(!n.rangeCount)return!1;let t=n.getRangeAt(0).commonAncestorContainer;t.nodeType===Node.TEXT_NODE&&(t=t.parentNode);const o=t.closest("span[style*='background-color']");if(!o)return!1;const i=window.getComputedStyle(o).backgroundColor;return this.rgbToHex(i).toUpperCase()===e.toUpperCase()}rgbToHex(e){return"#"+e.match(/\d+/g).map(Number).map((e=>{const n=e.toString(16);return 1===n.length?"0"+n:n})).join("")}getInitialColorAsHex(){const e=document.createElement("div");document.body.appendChild(e),e.style.color="initial";const n=window.getComputedStyle(e).color;return document.body.removeChild(e),this.rgbToHex(n)}getTargetElementMap(e){switch(e){case"strong":case"bold":case"b":return"strong";case"italic":case"i":case"em":return"em";case"underline":case"u":return"u";case"strikethrough":case"s":return"s";case"background":case"color":return"span";default:throw new Error}}static getSelectedHTMLElement(){const e=window.getSelection();if(e&&e.rangeCount>0){let n=e.getRangeAt(0).commonAncestorContainer;for(n.nodeType===Node.TEXT_NODE&&(n=n.parentNode);n&&!(n instanceof HTMLElement);)n=n.parentNode;if(n)return n}return null}getSelectedTextNodes(){const e=window.getSelection();if(!e||0===e.rangeCount)return[];const n=[];for(let t=0;t<e.rangeCount;++t){const o=e.getRangeAt(t),i=document.createNodeIterator(o.commonAncestorContainer,NodeFilter.SHOW_TEXT,{acceptNode:e=>o.intersectsNode(e)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT});let r;for(;r=i.nextNode();)if(r.nodeType===Node.TEXT_NODE){const e=document.createRange();e.selectNodeContents(r),-1===o.compareBoundaryPoints(Range.END_TO_START,e)&&1===o.compareBoundaryPoints(Range.START_TO_END,e)&&n.push(r)}}return n}findClosestMatchingParent(e,n){for(e&&e.nodeType===Node.TEXT_NODE&&(e=e.parentElement);e&&e!==document.body;){if(e.nodeType===Node.ELEMENT_NODE){const t=e;if(t.tagName.toLowerCase()===n.nodeType.toLowerCase()&&(!n.classes||n.classes.every((e=>t.classList.contains(e)))))return t}e=e.parentElement}return null}extractSelectedText(e){const n=window.getSelection();if(!n||0===n.rangeCount)return"";const t=n.getRangeAt(0);if(e.nodeType!==Node.TEXT_NODE)return"";const o=e.textContent||"";let i=0,r=o.length;return t.intersectsNode(e)?(t.startContainer===e?i=t.startOffset:t.startContainer.contains(e)&&(i=0),t.endContainer===e?r=t.endOffset:t.endContainer.contains(e)&&(r=o.length),i<r?o.substring(i,r):""):""}}class g extends o{parentWrapper;constructor(){super({}),this.attachEvent()}init(){const e=document.createElement("input");return e.id="linkBoxInput",e.type="url",e.placeholder="Paste or type a link...",e.style.position="relative",e}setParentWrapper(e){this.parentWrapper=e}attachEvent(){document.addEventListener("keydown",(e=>{if("Enter"==e.key&&this.isVisible){e.preventDefault(),e.stopPropagation();const n=this.htmlElement.value;setTimeout((()=>{C.getInstance().execCommand(C.QUERY_TEXT_OPERATIONS.CREATE_LINK,!1,n)}),10),this.htmlElement.value="",this.parentWrapper?.hide()}"Escape"==e.key&&this.isVisible&&(this.htmlElement.value="",this.parentWrapper?.hide())})),document.addEventListener("click",(e=>{!this.canHide||e.target.closest(`#${this.htmlElement.id}`)||e.target.closest("#floatingToolbar")||this.parentWrapper?.hide()})),this.htmlElement.addEventListener("keydown",(e=>{"/"==e.key&&e.stopPropagation()}))}}class b extends o{inputLinkBox;range;highlights=[];constructor(){const e=new g;super({inputLinkBox:e}),this.inputLinkBox=e,this.attachEvent(),e.setParentWrapper(this)}init(){const e=document.createElement("div");return e.id="linkBox",e.style.display="none",e.classList.add("dependent-box"),e.style.position="absolute",e.appendChild(this.props.inputLinkBox.htmlElement),e}attachEvent(){document.addEventListener("showInputLinkBoxRequested",(()=>{this.show(),this.highlightSelectedText(),this.inputLinkBox.focus()}))}hide(){super.hide(),this.removeHighlights(),setTimeout((()=>{const e=new CustomEvent("showInputLinkBoxFinished",{bubbles:!0,cancelable:!0});document.dispatchEvent(e)}),0)}highlightSelectedText(){const e=window.getSelection();if(!e?.rangeCount)return;const n=e.getRangeAt(0).getClientRects();for(let e=0;e<n.length;e++){const t=n[e],o=document.createElement("div");o.style.position="absolute",o.style.left=`${t.left}px`,o.style.top=`${t.top}px`,o.style.width=`${t.width}px`,o.style.height=`${t.height}px`,o.style.backgroundColor="#c2c2c2",o.style.opacity="0.3",document.body.appendChild(o),this.highlights.push(o)}e.removeAllRanges()}removeHighlights(){this.highlights.forEach((e=>{document.body.removeChild(e)})),this.highlights=[]}}class f{static isSelectedTextDescendantOf(e){const n=document.getSelection();if(!n)return!1;if(!n.rangeCount)return!1;let t=n.getRangeAt(0).startContainer;return t.nodeType===Node.TEXT_NODE&&(t=t.parentNode),!!t&&null!==t.closest(e)}}class B extends o{dropdowns;currentSelectionRange;inputLinkBoxWrapper;constructor(){const e=new b;super({inputLinkBoxWrapper:e}),this.inputLinkBoxWrapper=e,this.attachEvents(),this.dropdowns=[],this.currentSelectionRange=null}init(){const e=document.createElement("div");e.id="floatingToolbar",e.style.display="none",e.classList.add("soft-box-shadow");const n=document.createElement("div");n.classList.add("select-wrapper"),e.appendChild(n);const t=document.getElementById("johannesEditor");return t?.appendChild(this.props.inputLinkBoxWrapper.htmlElement),e}get display(){return"flex"}show(){setTimeout((()=>{const e=window.getSelection();if(!e||0===e.rangeCount)throw new Error("Nenhuma seleÃ§Ã£o encontrada");this.currentSelectionRange=e.getRangeAt(0);const n=e.getRangeAt(0).getBoundingClientRect();this.htmlElement.style.display="flex";const t=this.htmlElement.offsetWidth;let o=n.left+window.scrollX-50;o+t>window.innerWidth&&(o=window.innerWidth-t-20);const i=this.htmlElement.offsetHeight;let r=n.top+window.scrollY-i-10;r<0&&(r=n.bottom+window.scrollY+10),this.htmlElement.style.left=`${o}px`,this.htmlElement.style.top=`${r}px`,super.show()}),10)}hide(){this.currentSelectionRange=null,super.hide()}appendDropdown(e){this.dropdowns.push(e),this.htmlElement.appendChild(e.htmlElement)}appendSeparator(e){this.htmlElement.appendChild(e.htmlElement)}appendTextToolbar(e){this.htmlElement.appendChild(e.htmlElement)}anyDropdownVisible(){for(const e of this.dropdowns)if(e.dropdownList.isVisible)return!0;return!1}hideAllDropdownVisible(){for(const e of this.dropdowns)e.dropdownList.canHide&&e.dropdownList.hide();return!1}attachEvents(){document.addEventListener("showInputLinkBoxRequested",(()=>{this.canHide=!1})),document.addEventListener("showInputLinkBoxFinished",(()=>{this.canHide=!0,this.restoreRangeSelection()})),document.addEventListener("keydown",(e=>{this.canHide&&"Escape"===e.key&&(this.anyDropdownVisible()?this.hideAllDropdownVisible():this.hide()),!this.canHide||"ArrowLeft"!==e.key&&"ArrowRight"!==e.key&&"ArrowUp"!==e.key&&"ArrowDown"!==e.key||setTimeout((()=>{this.isSelectionEmpty()&&this.hide()}),10)})),document.addEventListener("keyup",(e=>{"Shift"!==e.key&&"Control"!==e.key||setTimeout((()=>{if(""!==window.getSelection().toString().trim()){if(f.isSelectedTextDescendantOf(".title"))return;e.preventDefault(),e.stopPropagation(),this.show()}}),10)})),document.addEventListener("click",(e=>{!this.canHide||e.target.closest(`#${this.htmlElement.id}`)||this.anyDropdownVisible()?!this.isVisible||e.target.closest(`#${this.htmlElement.id}`)||this.inputLinkBoxWrapper.isVisible||this.restoreRangeSelection():this.hide()})),document.addEventListener("mouseup",(e=>{this.isVisible||setTimeout((()=>{if(""!==window.getSelection().toString().trim()){if(f.isSelectedTextDescendantOf(".title"))return;e.preventDefault(),e.stopPropagation(),this.show()}}),10)})),document.addEventListener("selectedBlockDeleted",(e=>{this.canHide&&this.hide()})),document.addEventListener("requestHideFloatingToolbar",(()=>{this.canHide&&(this.anyDropdownVisible()&&this.hideAllDropdownVisible(),this.hide())}))}isSelectionEmpty(){const e=document.getSelection();return!e||0===e.rangeCount||""===e.toString().trim()}restoreRangeSelection(){document.getSelection()?.removeAllRanges(),document.getSelection()?.addRange(this.currentSelectionRange)}}class I extends o{textOperationService;command;value;activeIcon;parentDropdownMenuList;constructor(e,n,t,o,i,r,s,a=null){const l=new p("icon-material-small-check");l.htmlElement.style.visibility="hidden",i&&(r.style.color=i),super({id:e,leftIcon:r,title:s,icon:l,shortcut:a}),this.command=o,this.value=i,this.textOperationService=t,this.parentDropdownMenuList=n,this.activeIcon=l,this.attachEvent()}focus(){this.htmlElement.classList.add("option-focused")}removeFocus(){this.htmlElement.classList.remove("option-focused")}init(){const e=document.createElement("li");e.id=this.props.id,e.classList.add("option","option-hover","block-operation"),e.tabIndex=2,e.style.color="#37352F";const n=document.createElement("div");n.classList.add("text-option"),n.appendChild(this.props.leftIcon);const t=document.createElement("span");if(t.innerText=this.props.title,n.appendChild(t),e.appendChild(n),e.appendChild(this.props.icon.htmlElement),this.props.shortcut){const n=document.createElement("span");n.innerText=this.props.shortcut,n.style.color="rgba(55, 53, 47, 0.5)",e.appendChild(n)}return e}performAction(){setTimeout((()=>{this.textOperationService.execCommand(this.command,!1,this.value);const e=window.getSelection();if(!e||0===e.rangeCount)return;let n=e.getRangeAt(0).commonAncestorContainer;n?.nodeType===Node.TEXT_NODE&&(n=n.parentNode);const t=n.closest(".focusable");t&&this.normalizeAndMergeElements(t)}),10)}attachEvent(){this.htmlElement.addEventListener("mousemove",(()=>{const e=this.parentDropdownMenuList.dropdownItems.find(this);this.parentDropdownMenuList.switchVisualFocus(e)})),this.htmlElement.addEventListener("click",(()=>{this.performAction()})),document.addEventListener("selectionchange",(()=>{this.command!=C.QUERY_TEXT_OPERATIONS.HILITE_COLOR&&this.command!=C.QUERY_TEXT_OPERATIONS.FORE_COLOR||setTimeout((()=>{this.textOperationService.queryCommandState(this.command,this.value)?this.activeIcon?.changeVisibilityToVisible():this.activeIcon?.changeVisibilityToHidden()}),10)}))}normalizeAndMergeElements(e){if(!e)return;let n=e.firstChild;for(;n;){n.nodeType===Node.ELEMENT_NODE&&this.normalizeAndMergeElements(n);let e=n.nextSibling;for(;e&&this.shouldMerge(n,e);){n.innerHTML+=e.innerHTML;const t=e.nextSibling;e.parentNode.removeChild(e),e=t}n=n.nextSibling}e.normalize()}shouldMerge(e,n){if(e?.nodeType!==Node.ELEMENT_NODE||n?.nodeType!==Node.ELEMENT_NODE)return!1;const t=e,o=n;return t.tagName===o.tagName&&t.style.cssText===o.style.cssText&&window.getComputedStyle(t).color===window.getComputedStyle(o).color}}class y extends o{parentDropdownParentButton;dropdownItems;currentFocusedMenuItem;constructor(e){super({id:e}),this.dropdownItems=new a,this.currentFocusedMenuItem=null,this.attachEvents()}get display(){return"flex"}init(){const e=document.createElement("ul");return e.id=this.props.id,e.setAttribute("name","block-type"),e.style.display="none",e.classList.add("soft-box-shadow","dependent-box","checkable-items"),e.style.position="absolute",e.style.maxHeight="25vmax",e.style.overflowY="auto",e}append(e){this.dropdownItems.append(e),this.htmlElement.appendChild(e.htmlElement)}setParentDropdownMenuButton(e){this.parentDropdownParentButton=e}attachEvents(){document.addEventListener("keydown",(e=>{this.isVisible&&this.currentFocusedMenuItem&&"Enter"===e.key&&this.currentFocusedMenuItem.value.performAction()})),document.addEventListener("click",(e=>{this.clickedOutsideTheDropdownWhileDropdownIsVisible(e)&&this.hide()})),document.addEventListener("keydown",(e=>{this.keyPressedOutsideTheDropdownWhileDropdownIsVisible(e)&&("ArrowDown"==e.key&&(e.preventDefault(),this.focusNextVisibleItem()),"ArrowUp"==e.key&&(e.preventDefault(),this.focusPreviousVisibleItem()))}))}show(){this.htmlElement.style.left="0",this.htmlElement.style.right="auto",this.doesElementOverflowScreen(this.htmlElement)&&(this.htmlElement.style.left="auto",this.htmlElement.style.right="0"),this.parentDropdownParentButton?.svgIcon?.setUseTo("icon-wordpress-chevron-up"),super.show()}hide(){this.parentDropdownParentButton?.svgIcon?.setUseTo("icon-wordpress-chevron-down"),this.currentFocusedMenuItem?.value.removeFocus(),this.currentFocusedMenuItem=null,super.hide()}switchVisualFocus(e){this.currentFocusedMenuItem!=e&&(this.currentFocusedMenuItem&&this.currentFocusedMenuItem.value.removeFocus(),this.currentFocusedMenuItem=e,this.currentFocusedMenuItem.value.focus())}focusNextVisibleItem(){let e;e=this.currentFocusedMenuItem?this.currentFocusedMenuItem.getNextSatisfying((e=>e instanceof I)):this.dropdownItems.findFirst((e=>e instanceof I)),this.switchVisualFocus(e)}focusPreviousVisibleItem(){let e;e=this.currentFocusedMenuItem?this.currentFocusedMenuItem.getPreviousSatisfying((e=>e instanceof I)):this.dropdownItems.findFirst((e=>e instanceof I)),this.switchVisualFocus(e)}clickedOutsideTheDropdownWhileDropdownIsVisible(e){return this.canHide&&!e.target.closest(`#${this.htmlElement.id}`)}keyPressedOutsideTheDropdownWhileDropdownIsVisible(e){return this.canHide&&!e.target.closest(`#${this.htmlElement.id}`)}doesElementOverflowScreen(e){const n=e.style.display,t=e.style.visibility,o=e.style.position;"none"===n&&(e.style.display="block",e.style.visibility="hidden",e.style.position="absolute");const i=e.getBoundingClientRect(),r=window.innerWidth;return"none"===n&&(e.style.display=n,e.style.visibility=t,e.style.position=o),i.right>r||i.left<0}}class w extends o{constructor(){super({})}init(){const e=document.createElement("div");return e.style.height="24px",e.style.width="1px",e.style.borderRight="1px solid #d0d0d0",e.style.margin="auto 6px",e}}class T extends o{constructor(){super({})}init(){const e=document.createElement("div");return e.classList.add("item"),e.style.marginLeft="10px",e.style.marginRight="10px",e}}class v extends o{commandService;command;showUI;constructor(e,n,t,o){super({title:t,svgUseHref:o}),this.commandService=e,this.command=n,this.showUI=n==C.QUERY_TEXT_OPERATIONS.CREATE_LINK,this.attachEvents()}init(){const e=document.createElement("button");return e.role="button",e.classList.add("entry","button-reset","text-formatting-operation","option-hover"),e.title=this.props.title,e.tabIndex=1,new p(this.props.svgUseHref,"1.5rem","1.5rem").documentAppendTo(e),e}attachEvents(){this.htmlElement.addEventListener("click",(e=>{setTimeout((()=>{const e=this.getParentEditable();this.commandService.execCommand(this.command,this.showUI),setTimeout((()=>{e?.normalize()}),10)}),10)})),document.addEventListener("selectionchange",(e=>{setTimeout((()=>{const e=window.getSelection();e?.isCollapsed||(this.commandService.queryCommandState(this.command)?this.htmlElement.style.color="#2382e2":this.htmlElement.style.color="")}),10)}))}getParentEditable(){let e=window.getSelection().getRangeAt(0).commonAncestorContainer;return 3===e.nodeType&&(e=e.parentNode),e.closest(".editable")}}class x extends o{constructor(e){super({color:e})}init(){const e=document.createElement("div");return e.style.width="1.25rem",e.style.height="1.25rem",e.style.borderRadius="50%",e.style.backgroundColor=this.props.color,e.style.border="1px solid #d0d0d0",e}}class k extends o{dropdownList;svgIcon;constructor(e,n,t,o=!0){const i=new p("icon-wordpress-chevron-down");super({id:e,title:n,dropdownList:t,svgIcon:o?i:null}),this.dropdownList=t,this.svgIcon=i,this.attachEvents(),t.setParentDropdownMenuButton(this)}init(){const e=document.createElement("button");if(e.id=this.props.id,e.role="button",e.classList.add("button-reset","text-formatting-select-button","text-formatting-operation","option-hover"),e.tabIndex=1,e.style.position="relative",e.setAttribute("aria-controls",this.props.dropdownList.htmlElement.id),"string"==typeof this.props.title){const n=document.createElement("span");n.textContent=this.props.title,e.appendChild(n)}else e.appendChild(this.props.title);return this.props.svgIcon&&e.appendChild(this.props.svgIcon.htmlElement),e}attachEvents(){this.htmlElement.addEventListener("click",(()=>{this.dropdownList.isVisible||this.dropdownList.show()}))}}class O extends o{parentDropdownMenuList;constructor(e,n){super({title:n}),this.parentDropdownMenuList=e}performAction(){throw new Error("Method not implemented.")}removeFocus(){throw new Error("Method not implemented.")}focus(){throw new Error("Method not implemented.")}init(){const e=document.createElement("li"),n=document.createElement("h3");return n.innerText=this.props.title,e.appendChild(n),e}}class L{static build(){const e=new B;return e.appendDropdown(L.turnIntoDropdown()),e.appendSeparator(L.separator()),e.appendSeparator(L.groupButton()),e.appendDropdown(L.colorDropdown()),e.appendSeparator(L.separator()),e.appendDropdown(L.moreOptionsDropdown()),e}static turnIntoDropdown(){const t=new y("turnIntoSelect"),o=new k("turnIntoButton","Text",t),i=new E(o,t);return t.append(new O(t,"Turn into")),t.append(new I("turnIntoOptionText",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.PARAGRAPH,S.paragraph.htmlElement,"Text")),t.append(new I("turnIntoOptionTodoList",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.CHECKBOX_ITEM,S.todo_list.htmlElement,"Todo list","Ctrl+1")),t.append(new I("turnIntoOptionBulletedList",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.BULLETED_LIST,S.b_list.htmlElement,"Bulleted list","Ctrl+.")),t.append(new I("turnIntoOptionNumberedList",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.NUMBERED_LIST,S.n_list.htmlElement,"Numbered list","Ctrl+/")),t.append(new I("turnIntoOptionBlockCode",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,"code",S.code.htmlElement,"Block Code")),t.append(new I("turnIntoOptionQuote",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,"quote",S.quote.htmlElement,"Quote")),t.append(new I("turnIntoOptionHeading1",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.HEADER_1,S.head1.htmlElement,"Heading 1","Ctrl+Alt+1")),t.append(new I("turnIntoOptionHeading2",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.HEADER_2,S.head2.htmlElement,"Heading 2","Ctrl+Alt+2")),t.append(new I("turnIntoOptionHeading3",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.HEADER_3,S.head3.htmlElement,"Heading 3","Ctrl+Alt+3")),t.append(new I("turnIntoOptionHeading4",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.HEADER_4,S.head4.htmlElement,"Heading 4","Ctrl+Alt+4")),t.append(new I("turnIntoOptionHeading5",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.HEADER_5,S.head5.htmlElement,"Heading 5","Ctrl+Alt+5")),t.append(new I("turnIntoOptionHeading6",t,n.getInstance(),n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,e.ELEMENT_TYPES.HEADER_6,S.head6.htmlElement,"Heading 6","Ctrl+Alt+6")),i}static separator(){return new w}static groupButton(){const e=new T;return new v(C.getInstance(),C.QUERY_TEXT_OPERATIONS.CREATE_LINK,"Link","icon-material-link").documentAppendTo(e.htmlElement),new v(C.getInstance(),"bold","Bold","icon-wordpress-bold").documentAppendTo(e.htmlElement),new v(C.getInstance(),"italic","Italic","icon-material-italic").documentAppendTo(e.htmlElement),new v(C.getInstance(),C.QUERY_TEXT_OPERATIONS.UNDERLINE,"Underline","icon-material-underline").documentAppendTo(e.htmlElement),new v(C.getInstance(),C.QUERY_TEXT_OPERATIONS.INLINE_CODE,"Code","icon-wordpress-code-mark").documentAppendTo(e.htmlElement),new v(C.getInstance(),"strikeThrough","Strike-through","icon-wordpress-strike-through").documentAppendTo(e.htmlElement),e}static colorDropdown(){const e=new y("colorTextOptionSelect"),n=new k("colorTextButton",new x("#FAF4D1").htmlElement,e),t=new E(n,e);e.append(new O(e,"Background"));const o=C.getInstance();return e.append(new I("backgroundOptionRed",e,o,C.QUERY_TEXT_OPERATIONS.HILITE_COLOR,"#FDDEDE",new x("#FDDEDE").htmlElement,"Red")),e.append(new I("backgroundOptionGreen",e,o,C.QUERY_TEXT_OPERATIONS.HILITE_COLOR,"#D7F7DC",new x("#D7F7DC").htmlElement,"Green")),e.append(new I("backgroundOptionBlue",e,o,C.QUERY_TEXT_OPERATIONS.HILITE_COLOR,"#D9EDF6",new x("#D9EDF6").htmlElement,"Blue")),e.append(new I("backgroundOptionYellow",e,o,C.QUERY_TEXT_OPERATIONS.HILITE_COLOR,"#FAF4D1",new x("#FAF4D1").htmlElement,"Yellow")),e.append(new I("backgroundOptionGrey",e,o,C.QUERY_TEXT_OPERATIONS.HILITE_COLOR,"#E1E0E0",new x("#E1E0E0").htmlElement,"Grey")),e.append(new I("backgroundOptionNone",e,o,C.QUERY_TEXT_OPERATIONS.HILITE_COLOR,"transparent",new x("transparent").htmlElement,"None")),e.append(new O(e,"Color")),e.append(new I("colorOptionRed",e,o,C.QUERY_TEXT_OPERATIONS.FORE_COLOR,"#D44C47",new p("icon-material-format","1.25rem","1.25rem").htmlElement,"Red")),e.append(new I("colorOptionGreen",e,o,C.QUERY_TEXT_OPERATIONS.FORE_COLOR,"#448361",new p("icon-material-format","1.25rem","1.25rem").htmlElement,"Green")),e.append(new I("colorOptionBlue",e,o,C.QUERY_TEXT_OPERATIONS.FORE_COLOR,"#337EA9",new p("icon-material-format","1.25rem","1.25rem").htmlElement,"Blue")),e.append(new I("colorOptionYellow",e,o,C.QUERY_TEXT_OPERATIONS.FORE_COLOR,"#CB912F",new p("icon-material-format","1.25rem","1.25rem").htmlElement,"Yellow")),e.append(new I("colorOptionGrey",e,o,C.QUERY_TEXT_OPERATIONS.FORE_COLOR,"#787774",new p("icon-material-format","1.25rem","1.25rem").htmlElement,"Grey")),e.append(new I("colorOptionNone",e,o,C.QUERY_TEXT_OPERATIONS.FORE_COLOR,"initial",new p("icon-material-format","1.25rem","1.25rem").htmlElement,"None")),t}static moreOptionsDropdown(){const e=new p("icon-material-more","1.5rem","1.5rem"),t=new y("moreTextOptionSelect"),o=new k("moreTextOptionButton",e.htmlElement,t,!1),i=new E(o,t);return t.append(new O(t,"More options")),t.append(new I("copyOption",t,n.getInstance(),n.BLOCK_OPERATIONS.COPY,null,S.copy.htmlElement,"Copy","Ctrl+C")),t.append(new I("cutOption",t,n.getInstance(),n.BLOCK_OPERATIONS.CUT,null,S.cut.htmlElement,"Cut","Ctrl+X")),t.append(new I("pasteOption",t,n.getInstance(),n.BLOCK_OPERATIONS.PASTE,null,S.paste.htmlElement,"Replace","Ctrl+V")),t.append(new I("duplicateOption",t,n.getInstance(),n.BLOCK_OPERATIONS.DUPLICATE,null,S.duplicate.htmlElement,"Clone Block","Ctrl+D")),t.append(new I("resetOption",t,n.getInstance(),n.BLOCK_OPERATIONS.REMOVE_FORMAT,null,S.eraser.htmlElement,"Reset Style","Ctrl+\\")),t.append(new I("deleteOption",t,n.getInstance(),n.BLOCK_OPERATIONS.DELETE,null,S.delete.htmlElement,"Delete Block","Shift+Del")),i}}const S={paragraph:new p("icon-wordpress-paragraph","1.375rem","1.375rem"),todo_list:new p("icon-material-check-list","1.375rem","1.375rem"),b_list:new p("icon-wordpress-bulleted-list","1.375rem","1.375rem"),n_list:new p("icon-wordpress-numbered-list","1.375rem","1.375rem"),code:new p("icon-wordpress-numbered-list","1.375rem","1.375rem"),quote:new p("icon-wordpress-quote","1.375rem","1.375rem"),head1:new p("icon-julia-head-1","1.375rem","1.375rem"),head2:new p("icon-julia-head-2","1.375rem","1.375rem"),head3:new p("icon-julia-head-3","1.375rem","1.375rem"),head4:new p("icon-julia-head-4","1.375rem","1.375rem"),head5:new p("icon-julia-head-5","1.375rem","1.375rem"),head6:new p("icon-julia-head-6","1.375rem","1.375rem"),duplicate:new p("icon-material-duplicate","1.25rem","1.25rem"),delete:new p("icon-material-trash","1.25rem","1.25rem"),eraser:new p("icon-material-clear","1.25rem","1.25rem"),copy:new p("icon-material-copy","1.25rem","1.25rem"),cut:new p("icon-material-cut","1.25rem","1.25rem"),paste:new p("icon-material-paste","1.25rem","1.25rem")};class N extends o{blockOperationsService;constructor(e){super({}),this.blockOperationsService=e,this.attachEvents()}init(){const e=document.createElement("button");e.title="Add a new block",e.classList.add("add-block","block-operation");const n=new p("icon-add-block","1.5rem","1.5rem");return e.appendChild(n.htmlElement),e}attachEvents(){this.htmlElement.addEventListener("click",(()=>{this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.CREATE_DEFAULT_BLOCK,!1)}))}}class _ extends o{constructor(e){super({blockOperationService:e})}init(){const e=document.createElement("div");e.classList.add("add-block-wrapper");const n=new N(this.props.blockOperationService);return e.appendChild(n.htmlElement),e}}class R extends o{blockOperationsService;constructor(e,n){super({elementFactoryService:e,blockOperationsService:n}),this.blockOperationsService=n,this.attachEvent()}init(){const n=document.createElement("div");n.classList.add("content"),window.editorConfig;{const t=this.props.elementFactoryService.create(e.ELEMENT_TYPES.BLOCK_PARAGRAPH);n.append(t)}return n}attachEvent(){document.addEventListener("copiedText",(()=>{const e=document.querySelector("#copyOption .text-option span");e&&(e.textContent="Copied!",setTimeout((()=>{e.textContent="Copy"}),1500))})),document.addEventListener("keydown",(t=>{console.log(`Key: ${t.key}, Code: ${t.code}, Ctrl: ${t.ctrlKey}, Alt: ${t.altKey}, AltGr: ${"AltGraph"===t.key}, NumLock: ${t.getModifierState("NumLock")}`);const o=t.code.startsWith("Numpad"),i=t.getModifierState("NumLock");t.ctrlKey&&t.altKey&&("Digit1"===t.code||o&&i&&"Numpad1"===t.code)?(t.preventDefault(),t.stopPropagation(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,!1,e.ELEMENT_TYPES.HEADER_1)):t.ctrlKey&&t.altKey&&("Digit2"===t.code||o&&i&&"Numpad2"===t.code)?(t.preventDefault(),t.stopPropagation(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,!1,e.ELEMENT_TYPES.HEADER_2)):t.ctrlKey&&t.altKey&&("Digit3"===t.code||o&&i&&"Numpad3"===t.code)?(t.preventDefault(),t.stopPropagation(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,!1,e.ELEMENT_TYPES.HEADER_3)):t.ctrlKey&&t.altKey&&("Digit4"===t.code||o&&i&&"Numpad4"===t.code)?(t.preventDefault(),t.stopPropagation(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,!1,e.ELEMENT_TYPES.HEADER_4)):t.ctrlKey&&t.altKey&&("Digit5"===t.code||o&&i&&"Numpad5"===t.code)?(t.preventDefault(),t.stopPropagation(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,!1,e.ELEMENT_TYPES.HEADER_5)):t.ctrlKey&&t.altKey&&("Digit6"===t.code||o&&i&&"Numpad6"===t.code)?(t.preventDefault(),t.stopPropagation(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.TRANSFORM_BLOCK,!1,e.ELEMENT_TYPES.HEADER_6)):"D"!==t.key&&"d"!==t.key||!t.ctrlKey?"Delete"!==t.key&&"Backspace"!==t.key||!t.shiftKey?"\\"===t.key&&(t.ctrlKey||t.metaKey)?this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.REMOVE_FORMAT,!1):t.ctrlKey&&t.altKey&&"Digit1"===t.code&&t.preventDefault():(t.preventDefault(),t.stopPropagation(),setTimeout((()=>{this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.DELETE,!1)}),10)):(t.preventDefault(),t.stopPropagation(),setTimeout((()=>{this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.DUPLICATE,!1)}),10))})),this.htmlElement.addEventListener("keydown",(async e=>{if(!(e.ctrlKey||e.shiftKey||e.altKey))if("Enter"===e.key)e.preventDefault(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.CREATE_DEFAULT_BLOCK,!1);else if("Backspace"===e.key){const t=e.target;t.classList.contains("johannes-content-element")&&""===t.textContent?.trim()?this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.DELETE_FOCUS_ON_PREVIOUS,!1):t.classList.contains("johannes-content-element")&&t.textContent?.trim()}else if("Delete"===e.key){const t=e.target;t.classList.contains("johannes-content-element")&&""===t.textContent?.trim()?this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.DELETE_FOCUS_ON_NEXT,!1):t.classList.contains("johannes-content-element")&&t.textContent?.trim()}else"ArrowRight"===e.key&&R.isCursorAtEnd(e.target)?this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.FOCUS_ON_NEXT,!1):"ArrowLeft"===e.key&&R.isCursorAtStart(e.target)?this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.FOCUS_ON_PREVIOUS,!1):"ArrowDown"===e.key&&R.isCursorOnLastLine()?this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.FOCUS_ON_NEXT,!1):"ArrowUp"===e.key&&R.isCursorOnFirstLine()&&this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.FOCUS_ON_PREVIOUS,!1)}))}static isCursorAtEnd(e){const n=e.closest(".focusable");if(!n)return!1;const t=window.getSelection();if(!t.rangeCount)return!1;const o=t.getRangeAt(0);let i=o.endContainer;return i.nodeType===Node.TEXT_NODE&&(i=i.parentNode),o.collapsed&&i===n&&o.endOffset===(o.endContainer.textContent||"").length}static isCursorAtStart(e){const n=e.closest(".focusable");if(!n)return!1;const t=window.getSelection();if(!t.rangeCount)return!1;const o=t.getRangeAt(0);let i=o.startContainer;return i.nodeType===Node.TEXT_NODE&&(i=i.parentNode),o.collapsed&&i===n&&0===o.startOffset}static isAtFirstVisibleLine(e){const n=window.getSelection();if(!n.rangeCount)return!1;const t=n.getRangeAt(0).cloneRange();return t.collapse(!0),t.setStart(e,0),t.getBoundingClientRect().top===e.getBoundingClientRect().top}static isAtLastVisibleLine(e){const n=window.getSelection();if(!n.rangeCount)return!1;const t=n.getRangeAt(0).cloneRange();return t.collapse(!1),t.setEnd(e,e.childNodes.length),t.getBoundingClientRect().bottom===e.getBoundingClientRect().bottom}static didCursorMove(e){const n=window.getSelection();if(!n.rangeCount)return Promise.resolve(!1);const t=n.getRangeAt(0).cloneRange().getBoundingClientRect();return new Promise((o=>{setTimeout((()=>{const i=n.getRangeAt(0).cloneRange().getBoundingClientRect(),r=!(t.top===i.top&&t.left===i.left);r||e.preventDefault(),o(r)}),0)}))}static isCursorOnFirstLine(){const e=window.getSelection();if(!e||!e.rangeCount)return!1;const n=e.getRangeAt(0);return 0===n.startOffset&&n.startContainer===n.commonAncestorContainer}static isCursorOnLastLine(){const e=window.getSelection();if(!e||!e.rangeCount)return!1;const n=e.getRangeAt(0);return n.endOffset===n.endContainer.textContent?.length&&n.endContainer===n.commonAncestorContainer}}class M extends o{blockOperationsService;constructor(e){super({}),this.blockOperationsService=e,this.attachEvents()}init(){const e=document.createElement("div");e.classList.add("title");const n=document.createElement("h1");return n.setAttribute("contentEditable","true"),n.setAttribute("data-placeholder","Untitled"),window.editorConfig?.title&&(n.textContent=window.editorConfig?.title),e.appendChild(n),e}attachEvents(){this.htmlElement.addEventListener("keydown",(e=>{"Enter"==e.key&&(e.preventDefault(),this.blockOperationsService.execCommand(n.BLOCK_OPERATIONS.FOCUS_ON_FIRST,!1))}))}}class H extends o{elementFactoryService;static editorId="johannesEditor";static instance;title;content;constructor(e,n){if(super({elementFactoryService:e,blockOperationsService:n}),H.instance)throw new Error("Use BlockOperationsService.getInstance() to get instance.");this.elementFactoryService=e,this.attachEvents(),H.instance=this}init(){const e=document.getElementById(H.editorId)||document.createElement("div");return e.classList.add("johannes-editor"),window.editorConfig,this.title=new M(this.props.blockOperationsService),e.appendChild(this.title.htmlElement),this.content=new R(this.props.elementFactoryService,this.props.blockOperationsService),e.appendChild(this.content.htmlElement),e}static getInstance(e,n){return H.instance||(H.instance=new H(e,n)),H.instance}attachEvents(){const e=document.getElementById(H.editorId);if(e?.addEventListener("mouseover",(e=>{const n=e.target;if(n instanceof Node){let e=n;if(e.nodeType===Node.TEXT_NODE&&(e=e.parentElement),e instanceof Element){const n=e.closest(".block");n&&this.appendDragHandler(n)}else console.error("Event target is not an HTMLElement and cannot handle HTMLElement specific methods:",e)}else console.error("Event target is not a Node:",n)})),"loading"===document.readyState)document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("#johannesEditor > .content .block p");e&&e.focus()}));else{const e=document.querySelector("#johannesEditor > .content .block p");e&&e.focus()}document.addEventListener("paste",(function(e){if("true"===e.target.getAttribute("contenteditable")){e.preventDefault();const n=e.clipboardData;if(n){const e=n.getData("text/plain");H.insertTextAtCursor(e)}}}),!0)}static insertTextAtCursor(e){const n=window.getSelection();if(n&&n.rangeCount>0){const t=n.getRangeAt(0);t.deleteContents();const o=document.createTextNode(e);t.insertNode(o),t.setStartAfter(o),t.setEndAfter(o),n.removeAllRanges(),n.addRange(t)}}appendDragHandler(n){if(n.nodeType===Node.TEXT_NODE&&(n=n.parentNode),!(n instanceof HTMLElement))return void console.error("Provided element is not an HTMLElement:",n);const t=n.closest(".block");let o=t?.querySelector(".drag-handler");!o&&t&&(o=this.elementFactoryService.create(e.ELEMENT_TYPES.DRAG_HANDLE_BUTTON),t.prepend(o))}removeDragHandler(e){if(e.nodeType===Node.TEXT_NODE&&(e=e.parentNode),!(e instanceof HTMLElement))return void console.error("Provided element is not an HTMLElement:",e);const n=e.closest(".block");if(n){const e=n.querySelector(".drag-handler");e?.remove()}}extractContent(){throw new Error("Not implemented Exception")}}class D{static instance;editor;addBlock;floatingToolbar;quickMenu;constructor(e,n,t,o){if(D.instance)throw new Error;this.editor=e,this.addBlock=n,this.floatingToolbar=t,this.quickMenu=o,D.instance=this}static build(t){if(D.instance)return D.instance;const o=c.getInstance();t?(o.reset(),o.registerServices(t)):(o.registerService("IBlockOperationsService",n.getInstance()),o.registerService("IElementFactoryService",e.getInstance()),o.registerService("ITextOperationService",C.getInstance()));const i=H.getInstance(o.getInstanceOf("IElementFactoryService"),o.getInstanceOf("IBlockOperationsService")),r=new _(o.getInstanceOf("IBlockOperationsService")),s=L.build(),a=h.build();return new D(i,r,s,a)}start(){return window.editorConfig,this.editor.htmlElement.appendChild(this.addBlock.htmlElement),window.editorConfig,this.editor.htmlElement.appendChild(this.floatingToolbar.htmlElement),window.editorConfig,this.editor.htmlElement.appendChild(this.quickMenu.htmlElement),this.editor}}document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".johannes-editor");if(e){let n=e.querySelectorAll(".block");if(1==n.length){const e=n[0].querySelector(".johannes-content-element");""==e.innerText&&e.focus()}}})),document.addEventListener("DOMContentLoaded",(function(){D.build().start()})),document.addEventListener("DOMContentLoaded",(function(){const e=document.createElement("div");e.innerHTML='<svg shape-rendering="geometricPrecision">\r\n\r\n    <symbol id="icon-add-block" viewBox="0 0 24 24" aria-hidden="true">\r\n        <path d="M11 12.5V17.5H12.5V12.5H17.5V11H12.5V6H11V11H6V12.5H11Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-drag" viewBox="0 -960 960 960" aria-hidden="true">\r\n        <path\r\n            d="M360-160q-33 0-56.5-23.5T280-240q0-33 23.5-56.5T360-320q33 0 56.5 23.5T440-240q0 33-23.5 56.5T360-160Zm240 0q-33 0-56.5-23.5T520-240q0-33 23.5-56.5T600-320q33 0 56.5 23.5T680-240q0 33-23.5 56.5T600-160ZM360-400q-33 0-56.5-23.5T280-480q0-33 23.5-56.5T360-560q33 0 56.5 23.5T440-480q0 33-23.5 56.5T360-400Zm240 0q-33 0-56.5-23.5T520-480q0-33 23.5-56.5T600-560q33 0 56.5 23.5T680-480q0 33-23.5 56.5T600-400ZM360-640q-33 0-56.5-23.5T280-720q0-33 23.5-56.5T360-800q33 0 56.5 23.5T440-720q0 33-23.5 56.5T360-640Zm240 0q-33 0-56.5-23.5T520-720q0-33 23.5-56.5T600-800q33 0 56.5 23.5T680-720q0 33-23.5 56.5T600-640Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-paragraph" viewBox="0 -960 960 960" aria-hidden="true">\r\n        <path\r\n            d="M360-160v-240q-83 0-141.5-58.5T160-600q0-83 58.5-141.5T360-800h360v80h-80v560h-80v-560H440v560h-80Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-paragraph" viewBox="0 0 24 24">\r\n        <path\r\n            d="m9.99609 14v-.2251l.00391.0001v6.225h1.5v-14.5h2.5v14.5h1.5v-14.5h3v-1.5h-8.50391c-2.76142 0-5 2.23858-5 5 0 2.7614 2.23858 5 5 5z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-list" viewBox="0 0 24 24">\r\n        <path\r\n            d="M4 4v1.5h16V4H4zm8 8.5h8V11h-8v1.5zM4 20h16v-1.5H4V20zm4-8c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-numbered-list" viewBox="0 0 24 24">\r\n        <path\r\n            d="M11.1 15.8H20v-1.5h-8.9v1.5zm0-8.6v1.5H20V7.2h-8.9zM5 6.7V10h1V5.3L3.8 6l.4 1 .8-.3zm-.4 5.7c-.3.1-.5.2-.7.3l.1 1.1c.2-.2.5-.4.8-.5.3-.1.6 0 .7.1.2.3 0 .8-.2 1.1-.5.8-.9 1.6-1.4 2.5h2.7v-1h-1c.3-.6.8-1.4.9-2.1.1-.3 0-.8-.2-1.1-.5-.6-1.3-.5-1.7-.4z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-bulleted-list" viewBox="0 0 24 24">\r\n        <path\r\n            d="M11.1 15.8H20v-1.5h-8.9v1.5zm0-8.6v1.5H20V7.2h-8.9zM6 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-separator" viewBox="0 0 24 24">\r\n        <path d="M4.5 12.5v4H3V7h1.5v3.987h15V7H21v9.5h-1.5v-4h-15Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-quote" viewBox="0 0 24 24">\r\n        <path\r\n            d="M13 6v6h5.2v4c0 .8-.2 1.4-.5 1.7-.6.6-1.6.6-2.5.5h-.3v1.5h.5c1 0 2.3-.1 3.3-1 .6-.6 1-1.6 1-2.8V6H13zm-9 6h5.2v4c0 .8-.2 1.4-.5 1.7-.6.6-1.6.6-2.5.5h-.3v1.5h.5c1 0 2.3-.1 3.3-1 .6-.6 1-1.6 1-2.8V6H4v6z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-twitter" viewBox="0 0 24 24">\r\n        <path\r\n            d="M22.23 5.924c-.736.326-1.527.547-2.357.646.847-.508 1.498-1.312 1.804-2.27-.793.47-1.67.812-2.606.996C18.325 4.498 17.258 4 16.078 4c-2.266 0-4.103 1.837-4.103 4.103 0 .322.036.635.106.935-3.41-.17-6.433-1.804-8.457-4.287-.353.607-.556 1.312-.556 2.064 0 1.424.724 2.68 1.825 3.415-.673-.022-1.305-.207-1.86-.514v.052c0 1.988 1.415 3.647 3.293 4.023-.344.095-.707.145-1.08.145-.265 0-.522-.026-.773-.074.522 1.63 2.038 2.817 3.833 2.85-1.404 1.1-3.174 1.757-5.096 1.757-.332 0-.66-.02-.98-.057 1.816 1.164 3.973 1.843 6.29 1.843 7.547 0 11.675-6.252 11.675-11.675 0-.178-.004-.355-.012-.53.802-.578 1.497-1.3 2.047-2.124z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-1" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM563.187 113.659L658.781 53.5511H710.198V487.341C710.198 504.238 710.922 514.136 712.371 517.032C713.819 519.929 718.405 521.86 726.13 522.826L765.961 527.171V546H576.947V527.171L631.261 522.826C638.986 522.343 643.573 520.653 645.021 517.757C646.469 514.377 647.193 504.238 647.193 487.341V88.3122L575.499 133.212L563.187 113.659Z"\r\n            fill="#343434" />\r\n        <line x1="49.7258" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-2" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM857.208 402.61H876.037V546H585.637V507.618C585.637 474.305 591.189 446.545 602.294 424.336C613.398 402.128 627.64 383.299 645.021 367.849C662.884 351.917 681.955 337.433 702.232 324.398C719.612 312.811 736.51 300.983 752.925 288.913C769.34 276.843 782.858 262.118 793.48 244.737C804.584 226.874 810.136 204.665 810.136 178.112C810.136 141.419 802.894 114.142 788.41 96.2782C774.409 78.4149 754.615 69.4832 729.027 69.4832C695.714 69.4832 672.54 81.5531 659.505 105.693C646.952 129.35 643.09 163.386 647.918 207.803L584.913 196.216C580.085 170.146 582.016 145.765 590.707 123.073C599.88 100.382 616.053 82.0359 639.227 68.0349C662.401 53.5511 692.576 46.3092 729.751 46.3092C765.478 46.3092 794.445 52.5855 816.654 65.1381C838.862 77.6907 855.036 94.1057 865.175 114.383C875.313 134.66 880.383 156.386 880.383 179.56C880.383 206.114 875.313 228.322 865.175 246.185C855.036 264.049 841.759 278.774 825.344 290.361C808.929 301.948 791.066 312.328 771.754 321.501C752.442 330.191 733.613 339.365 715.267 349.02C697.404 358.193 680.989 369.056 666.022 381.609C651.539 394.162 639.469 409.37 629.813 427.233C620.64 444.613 615.088 466.098 613.157 491.686H799.997C816.895 491.686 827.034 490.72 830.413 488.789C834.276 486.375 837.173 481.064 839.104 472.857L857.208 402.61Z"\r\n            fill="#343434" />\r\n        <line x1="49.7258" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-3" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM693.542 304.121H673.988V280.947H693.542C733.613 280.947 761.615 270.808 777.548 250.531C793.963 230.253 802.17 204.183 802.17 172.318C802.17 138.523 795.17 112.935 781.169 95.5541C767.168 78.1735 747.373 69.4832 721.785 69.4832C688.472 69.4832 665.298 81.5531 652.263 105.693C639.71 129.35 635.848 163.386 640.676 207.803L577.671 196.216C573.326 170.146 575.499 145.765 584.189 123.073C593.362 100.382 609.294 82.0359 631.985 68.0349C655.16 53.5511 685.334 46.3092 722.509 46.3092C758.236 46.3092 786.962 52.3441 808.688 64.4139C830.896 76.0009 847.07 91.4503 857.208 110.762C867.347 129.591 872.416 150.11 872.416 172.318C872.416 206.114 862.036 232.909 841.276 252.703C820.999 272.498 791.549 285.775 752.925 292.534C793.963 298.81 825.344 312.811 847.07 334.537C869.278 356.262 880.383 385.713 880.383 422.888C880.383 446.545 874.589 468.27 863.002 488.065C851.898 507.859 834.517 523.792 810.86 535.861C787.686 547.448 757.512 553.242 720.337 553.242C685.093 553.242 654.194 545.034 627.64 528.619C601.57 512.204 582.982 482.754 571.878 440.268L617.502 427.233C621.364 453.787 628.123 474.547 637.779 489.513C647.918 504.48 659.746 515.101 673.264 521.378C687.265 527.171 701.99 530.068 717.44 530.068C779.237 530.068 810.136 494.341 810.136 422.888C810.136 388.127 801.446 359.642 784.065 337.433C766.685 315.225 736.51 304.121 693.542 304.121Z"\r\n            fill="#343434" />\r\n        <line x1="49.7257" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7257" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7257" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-4" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM762.34 487.341V418.543H553.049V395.369C577.671 369.298 598.914 343.951 616.778 319.329C634.641 294.223 650.09 268.394 663.126 241.84C676.161 215.287 687.507 186.802 697.163 156.386C707.301 125.487 716.474 91.2089 724.682 53.5511H801.446C782.134 121.625 753.891 182.698 716.716 236.771C679.541 290.844 635.124 343.71 583.465 395.369H762.34V281.671L825.344 271.532V395.369H881.107V418.543H825.344V487.341C825.344 504.238 826.068 514.136 827.517 517.032C828.965 519.929 833.552 521.86 841.276 522.826L881.107 527.171V546H692.093V527.171L746.407 522.826C754.132 522.343 758.719 520.653 760.167 517.757C761.615 514.377 762.34 504.238 762.34 487.341Z"\r\n            fill="#343434" />\r\n        <line x1="49.7258" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7258" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-5" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM834.759 -5.83247H853.588V109.314H630.537L621.847 264.29C635.848 254.634 651.056 247.392 667.471 242.565C684.369 237.737 701.749 235.323 719.612 235.323C767.409 235.323 805.308 250.048 833.31 279.498C861.312 308.466 875.313 347.331 875.313 396.093C875.313 423.612 870.002 449.441 859.381 473.581C848.76 497.238 831.62 516.55 807.964 531.516C784.79 546 754.374 553.242 716.716 553.242C683.403 553.242 654.435 545.034 629.813 528.619C605.19 511.722 587.327 482.271 576.223 440.268L621.847 427.233C627.64 466.822 638.986 493.858 655.884 508.342C672.782 522.826 691.852 530.068 713.095 530.068C743.028 530.068 765.719 519.205 781.169 497.479C797.101 475.271 805.067 441.475 805.067 396.093C805.067 356.021 798.066 323.432 784.065 298.327C770.547 272.739 746.407 259.945 711.646 259.945C695.231 259.945 678.334 263.083 660.953 269.36C643.573 275.153 626.433 285.533 609.536 300.5L595.052 293.982L608.811 53.5511H788.41C805.791 53.5511 816.171 52.8269 819.551 51.3785C823.413 49.4473 826.068 43.8952 827.517 34.7221L834.759 -5.83247Z"\r\n            fill="#343434" />\r\n        <line x1="49.7256" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-julia-head-6" viewBox="0 0 1080 1080">\r\n        <path\r\n            d="M507.001 527.171V546H332.471V527.171L372.301 522.826C380.026 521.86 384.613 519.929 386.061 517.032C387.509 514.136 388.233 504.238 388.233 487.341V309.19H169.528V487.341C169.528 504.238 170.252 514.136 171.701 517.032C173.149 519.929 177.736 521.86 185.46 522.826L225.291 527.171V546H50.7611V527.171L90.5915 522.826C98.3162 521.86 102.903 519.929 104.351 517.032C105.8 514.136 106.524 504.238 106.524 487.341V112.21C106.524 95.3127 105.8 85.4154 104.351 82.5186C102.903 79.6219 98.3162 77.6907 90.5915 76.7252L50.7611 73.1042V53.5511H225.291V73.1042L185.46 76.7252C177.736 77.6907 173.149 79.6219 171.701 82.5186C170.252 85.4154 169.528 95.3127 169.528 112.21V286.016H388.233V112.21C388.233 95.3127 387.509 85.4154 386.061 82.5186C384.613 79.6219 380.026 77.6907 372.301 76.7252L332.471 73.1042V53.5511H507.001V73.1042L467.17 76.7252C459.445 77.6907 454.859 79.6219 453.411 82.5186C451.962 85.4154 451.238 95.3127 451.238 112.21V487.341C451.238 504.238 451.962 514.136 453.411 517.032C454.859 519.929 459.445 521.86 467.17 522.826L507.001 527.171ZM915.868 407.68C915.868 437.13 909.35 462.96 896.315 485.168C883.279 506.894 865.175 523.792 842 535.861C818.826 547.448 791.79 553.242 760.891 553.242C708.267 553.242 667.471 533.93 638.503 495.307C610.018 456.683 595.776 399.955 595.776 325.122V279.498C595.776 199.837 610.501 141.178 639.952 103.52C669.402 65.3795 708.991 46.3092 758.719 46.3092C791.066 46.3092 818.585 52.8269 841.276 65.8623C864.45 78.8977 881.59 96.0369 892.694 117.28C904.281 138.523 908.626 161.697 905.729 186.802L843.449 197.665C847.311 156.145 842 124.522 827.517 102.796C813.033 80.5875 789.859 69.4832 757.994 69.4832C740.614 69.4832 724.682 74.0698 710.198 83.2428C696.197 91.9331 685.093 108.348 676.885 132.488C668.678 156.627 664.574 191.388 664.574 236.771V307.017C678.575 289.154 694.749 276.36 713.095 268.635C731.924 260.428 751.96 256.324 773.202 256.324C816.171 256.324 850.691 269.36 876.762 295.43C902.832 321.501 915.868 356.504 915.868 400.438V407.68ZM664.574 367.849C664.574 408.887 668.195 441.234 675.437 464.891C683.162 488.548 694.266 505.445 708.75 515.584C723.716 525.24 741.58 530.068 762.34 530.068C788.41 530.068 809.171 521.136 824.62 503.273C840.552 484.927 848.518 453.545 848.518 409.128V401.886C848.518 364.711 841.518 335.744 827.517 314.984C813.516 293.741 791.79 283.119 762.34 283.119C744.959 283.119 727.337 287.706 709.474 296.879C692.093 306.052 677.127 321.501 664.574 343.227V367.849Z"\r\n            fill="#343434" />\r\n        <line x1="49.7256" y1="721.29" x2="1035" y2="721.29" stroke="#7E7B7B" stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="865.829" x2="737.402" y2="865.829" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n        <line x1="49.7256" y1="1010.37" x2="980.46" y2="1010.37" stroke="#7E7B7B"\r\n            stroke-width="54.2021" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-check-list" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M222-200 80-342l56-56 85 85 170-170 56 57-225 226Zm0-320L80-662l56-56 85 85 170-170 56 57-225 226Zm298 240v-80h360v80H520Zm0-320v-80h360v80H520Z" />\r\n    </symbol>\r\n\r\n\r\n    \x3c!-- tags --\x3e\r\n\r\n    <symbol id="icon-wordpress-bold" viewBox="0 0 24 24">\r\n        <path\r\n            d="M14.7 11.3c1-.6 1.5-1.6 1.5-3 0-2.3-1.3-3.4-4-3.4H7v14h5.8c1.4 0 2.5-.3 3.3-1 .8-.7 1.2-1.7 1.2-2.9.1-1.9-.8-3.1-2.6-3.7zm-5.1-4h2.3c.6 0 1.1.1 1.4.4.3.3.5.7.5 1.2s-.2 1-.5 1.2c-.3.3-.8.4-1.4.4H9.6V7.3zm4.6 9c-.4.3-1 .4-1.7.4H9.6v-3.9h2.9c.7 0 1.3.2 1.7.5.4.3.6.8.6 1.5s-.2 1.2-.6 1.5z">\r\n        </path>\r\n    </symbol>\r\n    <symbol id="icon-wordpress-italic" viewBox="0 0 24 24">\r\n        <path d="M12.5 5L10 19h1.9l2.5-14z"></path>\r\n    </symbol>\r\n    <symbol id="icon-wordpress-anchor" viewBox="0 0 24 24">\r\n        <path\r\n            d="M10 17.389H8.444A5.194 5.194 0 1 1 8.444 7H10v1.5H8.444a3.694 3.694 0 0 0 0 7.389H10v1.5ZM14 7h1.556a5.194 5.194 0 0 1 0 10.39H14v-1.5h1.556a3.694 3.694 0 0 0 0-7.39H14V7Zm-4.5 6h5v-1.5h-5V13Z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-underline" viewBox="0 0 24 24">\r\n\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-wordpress-strike-through" viewBox="0 0 24 24">\r\n        <path\r\n            d="M9.1 9v-.5c0-.6.2-1.1.7-1.4.5-.3 1.2-.5 2-.5.7 0 1.4.1 2.1.3.7.2 1.4.5 2.1.9l.2-1.9c-.6-.3-1.2-.5-1.9-.7-.8-.1-1.6-.2-2.4-.2-1.5 0-2.7.3-3.6 1-.8.7-1.2 1.5-1.2 2.6V9h2zM20 12H4v1h8.3c.3.1.6.2.8.3.5.2.9.5 1.1.8.3.3.4.7.4 1.2 0 .7-.2 1.1-.8 1.5-.5.3-1.2.5-2.1.5-.8 0-1.6-.1-2.4-.3-.8-.2-1.5-.5-2.2-.8L7 18.1c.5.2 1.2.4 2 .6.8.2 1.6.3 2.4.3 1.7 0 3-.3 3.9-1 .9-.7 1.3-1.6 1.3-2.8 0-.9-.2-1.7-.7-2.2H20v-1z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-code-mark" viewBox="0 0 24 24">\r\n        <path\r\n            d="M20.8 10.7l-4.3-4.3-1.1 1.1 4.3 4.3c.1.1.1.3 0 .4l-4.3 4.3 1.1 1.1 4.3-4.3c.7-.8.7-1.9 0-2.6zM4.2 11.8l4.3-4.3-1-1-4.3 4.3c-.7.7-.7 1.8 0 2.5l4.3 4.3 1.1-1.1-4.3-4.3c-.2-.1-.2-.3-.1-.4z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-equation-mark" viewBox="0 0 24 24">\r\n        <path\r\n            d="M16.9 10.3l.8-1.3c.4-.6.7-1.2.9-1.6.2-.4.3-.8.3-1.2 0-.3-.1-.7-.2-1-.2-.2-.4-.4-.7-.6-.3-.2-.6-.3-1-.3s-.8.1-1.1.2c-.3.1-.7.3-1 .6l.1 1.3c.3-.3.5-.5.8-.6s.6-.2.9-.2c.3 0 .5.1.7.2.2.2.2.4.2.7 0 .3-.1.5-.2.8-.1.3-.4.7-.8 1.3l-1.8 2.8h4.3v-1.2h-2.2zm-2.8-3.1h-2L9.5 11 6.9 7.2h-2l3.6 5.3L4.7 18h2l2.7-4 2.7 4h2l-3.8-5.5 3.8-5.3z">\r\n        </path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-underline" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M213.85-155v-60h532.3v60h-532.3ZM480-298.85q-93.31 0-145.65-56.65Q282-412.15 282-507.31v-316.15h74.15v319.84q0 60.62 32.23 97.16T480-369.92q59.39 0 91.62-36.54 32.23-36.54 32.23-97.16v-319.84H678v316.15q0 95.16-52.35 151.81-52.34 56.65-145.65 56.65Z" />\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-link" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M440-280H280q-83 0-141.5-58.5T80-480q0-83 58.5-141.5T280-680h160v80H280q-50 0-85 35t-35 85q0 50 35 85t85 35h160v80ZM320-440v-80h320v80H320Zm200 160v-80h160q50 0 85-35t35-85q0-50-35-85t-85-35H520v-80h160q83 0 141.5 58.5T880-480q0 83-58.5 141.5T680-280H520Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-italic" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M215.77-215v-72.31h152.69l129.62-385.38H345.39V-745h366.15v72.31H571.15L441.54-287.31h140.38V-215H215.77Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-chevron-down" viewBox="0 0 24 24">\r\n        <path d="M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z"></path>\r\n    </symbol>\r\n\r\n    <symbol id="icon-wordpress-chevron-up" viewBox="0 0 24 24">\r\n        <path d="M6.5 12.4L12 8l5.5 4.4-.9 1.2L12 10l-4.5 3.6-1-1.2z"></path>\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-trash" viewBox="0 0 512 512">\r\n\r\n        <path d="M112 112l20 320c.95 18.49 14.4 32 32 32h184c17.67 0 30.87-13.51 32-32l20-320"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" />\r\n        <path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="32"\r\n            d="M80 112h352" />\r\n        <path\r\n            d="M192 112V72h0a23.93 23.93 0 0124-24h80a23.93 23.93 0 0124 24h0v40M256 176v224M184 176l8 224M328 176l-8 224"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-copy" viewBox="0 0 512 512">\r\n\r\n        <rect x="128" y="128" width="336" height="336" rx="57" ry="57" fill="none"\r\n            stroke="currentColor"\r\n            stroke-linejoin="round" stroke-width="32" />\r\n        <path\r\n            d="M383.5 128l.5-24a56.16 56.16 0 00-56-56H112a64.19 64.19 0 00-64 64v216a56.16 56.16 0 0056 56h24"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-clear" viewBox="0 0 512 512">\r\n        <path d="M320 146s24.36-12-64-12a160 160 0 10160 160" fill="none" stroke="currentColor"\r\n            stroke-linecap="round" stroke-miterlimit="10" stroke-width="32" />\r\n        <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" d="M256 58l80 80-80 80" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-small-check" viewBox="0 -960 960 960">\r\n        <path d="M400-304 240-464l56-56 104 104 264-264 56 56-320 320Z" />\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-more" viewBox="0 0 24 24">\r\n        <path d="M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-letter" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M276-280h76l40-112h176l40 112h76L520-720h-80L276-280Zm138-176 64-182h4l64 182H414Zm66 376q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 320q133 0 226.5-93.5T800-480q0-133-93.5-226.5T480-800q-133 0-226.5 93.5T160-480q0 133 93.5 226.5T480-160Z" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-format" viewBox="0 0 512 512">\r\n        <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32"\r\n            d="M32 415.5l120-320 120 320M230 303.5H74M326 239.5c12.19-28.69 41-48 74-48h0c46 0 80 32 80 80v144" />\r\n        <path\r\n            d="M320 358.5c0 36 26.86 58 60 58 54 0 100-27 100-106v-15c-20 0-58 1-92 5-32.77 3.86-68 19-68 58z"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-eraser" viewBox="0 -960 960 960">\r\n        <path\r\n            d="M690-240h190v80H610l80-80Zm-500 80-85-85q-23-23-23.5-57t22.5-58l440-456q23-24 56.5-24t56.5 23l199 199q23 23 23 57t-23 57L520-160H190Zm296-80 314-322-198-198-442 456 64 64h262Zm-6-240Z" />\r\n    </symbol>\r\n\r\n\r\n    <symbol id="icon-material-cut" viewBox="0 0 512 512">\r\n        <circle cx="104" cy="152" r="56" fill="none" stroke="currentColor" stroke-linecap="round"\r\n            stroke-linejoin="round" stroke-width="32" />\r\n        <circle cx="104" cy="360" r="56" fill="none" stroke="currentColor" stroke-linecap="round"\r\n            stroke-linejoin="round" stroke-width="32" />\r\n        <path d="M157 175l-11 15 37 15s3.46-6.42 7-10z" fill="none" stroke="currentColor"\r\n            stroke-linecap="square" stroke-miterlimit="10" stroke-width="32" />\r\n        <path\r\n            d="M154.17 334.43L460 162c-2.5-6.7-28-12-64-4-29.12 6.47-121.16 29.05-159.16 56.05C205.85 236.06 227 272 192 298c-25.61 19-44.43 22.82-44.43 22.82zM344.47 278.24L295 306.67c14.23 6.74 65.54 33.27 117 36.33 14.92.89 30 .39 39-6z"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10"\r\n            stroke-width="32" />\r\n        <circle cx="256" cy="240" r="32" fill="none" stroke="currentColor" stroke-miterlimit="10"\r\n            stroke-width="32" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-paste" viewBox="0 0 512 512">\r\n        <path\r\n            d="M336 64h32a48 48 0 0148 48v320a48 48 0 01-48 48H144a48 48 0 01-48-48V112a48 48 0 0148-48h32"\r\n            fill="none" stroke="currentColor" stroke-linejoin="round" stroke-width="32" />\r\n        <rect x="176" y="32" width="160" height="64" rx="26.13" ry="26.13" fill="none"\r\n            stroke="currentColor" stroke-linejoin="round" stroke-width="32" />\r\n    </symbol>\r\n\r\n    <symbol id="icon-material-duplicate" viewBox="0 0 512 512">\r\n        <path\r\n            d="M434.8 137.65l-149.36-68.1c-16.19-7.4-42.69-7.4-58.88 0L77.3 137.65c-17.6 8-17.6 21.09 0 29.09l148 67.5c16.89 7.7 44.69 7.7 61.58 0l148-67.5c17.52-8 17.52-21.1-.08-29.09zM160 308.52l-82.7 37.11c-17.6 8-17.6 21.1 0 29.1l148 67.5c16.89 7.69 44.69 7.69 61.58 0l148-67.5c17.6-8 17.6-21.1 0-29.1l-79.94-38.47"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" />\r\n        <path\r\n            d="M160 204.48l-82.8 37.16c-17.6 8-17.6 21.1 0 29.1l148 67.49c16.89 7.7 44.69 7.7 61.58 0l148-67.49c17.7-8 17.7-21.1.1-29.1L352 204.48"\r\n            fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"\r\n            stroke-width="32" />\r\n    </symbol>\r\n\r\n\r\n</svg>',e.className="svg-icons-container",document.body.appendChild(e)})),document.addEventListener("DOMContentLoaded",(function(){})),document.addEventListener("DOMContentLoaded",(function(){document.addEventListener("keydown",(function(e){}))})),document.addEventListener("keyup",(function(e){})),t(528),t(167);var P=t(72),V=t.n(P),F=t(825),q=t.n(F),j=t(659),K=t.n(j),U=t(56),Y=t.n(U),z=t(540),X=t.n(z),Q=t(113),Z=t.n(Q),W=t(282),G={};G.styleTagTransform=Z(),G.setAttributes=Y(),G.insert=K().bind(null,"head"),G.domAPI=q(),G.insertStyleElement=X(),V()(W.A,G),W.A&&W.A.locals&&W.A.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,