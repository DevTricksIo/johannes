/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/add-block.css":
/*!***************************!*\
  !*** ./src/add-block.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://johannes/./src/add-block.css?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://johannes/./src/style.css?");

/***/ }),

/***/ "./src/switch-block.css":
/*!******************************!*\
  !*** ./src/switch-block.css ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://johannes/./src/switch-block.css?");

/***/ }),

/***/ "./src/block-operation.js":
/*!********************************!*\
  !*** ./src/block-operation.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createADefaultBlock: () => (/* binding */ createADefaultBlock),\n/* harmony export */   deleteDraggableParentBlock: () => (/* binding */ deleteDraggableParentBlock),\n/* harmony export */   deleteTheCurrentElementAndTheDraggableBlockIfEmpty: () => (/* binding */ deleteTheCurrentElementAndTheDraggableBlockIfEmpty),\n/* harmony export */   duplicateBlock: () => (/* binding */ duplicateBlock),\n/* harmony export */   moveDownBlock: () => (/* binding */ moveDownBlock),\n/* harmony export */   moveUpBlock: () => (/* binding */ moveUpBlock),\n/* harmony export */   transformBlock: () => (/* binding */ transformBlock)\n/* harmony export */ });\n/* harmony import */ var _add_block_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-block.css */ \"./src/add-block.css\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element-factory */ \"./src/element-factory.js\");\n/* harmony import */ var _j_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./j-selection */ \"./src/j-selection.js\");\n/* harmony import */ var _j_window__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./j-window */ \"./src/j-window.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n//** Just create a new paragraph draggable block and insert in the DOM */\r\nfunction createADefaultBlock(eventParagraph) {\r\n\r\n    const newBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewDraggableParagraphElement();\r\n\r\n    if (eventParagraph && eventParagraph.closest('.draggable-block')) {\r\n        const sibling = eventParagraph.closest('.draggable-block');\r\n        sibling.insertAdjacentElement('afterend', newBlock);\r\n    } else {\r\n        document.querySelector('.johannes-editor > .content').appendChild(newBlock);\r\n    }\r\n\r\n    const focusable = newBlock.querySelector('.johannes-content-element');\r\n    focusable.focus();\r\n}\r\n\r\n//** Delete the closest draggable-block parent of a child. Take the current selection if a child is not passed. */\r\nfunction deleteDraggableParentBlock(child) {\r\n\r\n    let draggableBlockToRemove = null;\r\n\r\n    if (child && child.closest('.draggable-block')) {\r\n        draggableBlockToRemove = child.closest('.draggable-block');\r\n    } else {\r\n        draggableBlockToRemove = _j_selection__WEBPACK_IMPORTED_MODULE_2__.getCurrentDraggableBlockFocused();\r\n    }\r\n\r\n    if (draggableBlockToRemove) {\r\n        draggableBlockToRemove.remove();\r\n    } else {\r\n        throw new Error('Focusable Element Not Found Exception');\r\n    }\r\n\r\n    clearAllAfterDelete();\r\n}\r\n\r\n//** Delete the current element and the draggable-block parent if empty. A block is empty if has no editable element inside. */\r\nfunction deleteTheCurrentElementAndTheDraggableBlockIfEmpty(element) {\r\n\r\n    const parentBlock = element.closest('.draggable-block');\r\n    const actual = element.closest('.deletable');\r\n\r\n    actual.remove();\r\n\r\n    if (parentBlock && parentBlock.querySelectorAll('.editable').length == 0) {\r\n        parentBlock.remove();\r\n    }\r\n}\r\n\r\n/** Transform a block type into another */\r\nfunction transformBlock(blockElement, type) {\r\n\r\n    let contentElement = blockElement.querySelector('.swittable');\r\n    let content = contentElement.innerText;\r\n\r\n    if (content.endsWith('/')) {\r\n        content = content.slice(0, -1); // Remove the last '/'\r\n    }\r\n\r\n    let newContentBlock;\r\n\r\n    switch (type) {\r\n        case 'p':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewParagraphElement();\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'h1':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewHeadingElement(1);\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'h2':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewHeadingElement(2);\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'h3':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewHeadingElement(3);\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'h4':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewHeadingElement(4);\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'h5':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewHeadingElement(5);\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'h6':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewHeadingElement(6);\r\n                newContentBlock.innerText = content;\r\n                break;\r\n            }\r\n        case 'code':\r\n            newContentBlock = document.createElement('pre');\r\n            const code = document.createElement('code');\r\n            code.innerText = content;\r\n            newContentBlock.appendChild(code);\r\n            break;\r\n        case 'image':\r\n            newContentBlock = document.createElement('img');\r\n            newContentBlock.src = content;\r\n            newContentBlock.alt = \"Descriptive text\";\r\n            break;\r\n        case 'quote':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewQuoteElement(content);\r\n\r\n                break;\r\n            }\r\n        case 'bulleted-list':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewListElement(content);\r\n\r\n                break;\r\n            }\r\n\r\n        case 'numbered-list':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewListElement(content, 'ol');\r\n\r\n                break;\r\n            }\r\n        case 'todo-list':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewTodoListElement(content, 'ul');\r\n\r\n                break;\r\n            }\r\n\r\n        case 'separator':\r\n            {\r\n                newContentBlock = _element_factory__WEBPACK_IMPORTED_MODULE_1__.createNewSeparatorElement();\r\n                break;\r\n            }\r\n\r\n        default:\r\n            console.error('Unsupported type');\r\n            return;\r\n    }\r\n\r\n    removeDisplayNoneFromAllBlockOptions();\r\n    blockElement.replaceChild(newContentBlock, contentElement);\r\n\r\n    const focus = newContentBlock.querySelector('.focus') || newContentBlock;\r\n\r\n    if (focus) {\r\n        setTimeout(() => {\r\n            focusOnTheEndOfTheText(focus);\r\n        }, 0);\r\n    }\r\n\r\n    document.querySelector('.block-options-wrapper').style.display = 'none';\r\n}\r\n\r\n\r\nfunction moveDownBlock() {\r\n\r\n}\r\n\r\nfunction moveUpBlock() {\r\n\r\n}\r\n\r\nfunction duplicateBlock(block) {\r\n\r\n}\r\n\r\nfunction clearAllAfterDelete() {\r\n    _j_selection__WEBPACK_IMPORTED_MODULE_2__.clearSelection();\r\n    (0,_j_window__WEBPACK_IMPORTED_MODULE_3__.closeAll)();\r\n}\n\n//# sourceURL=webpack://johannes/./src/block-operation.js?");

/***/ }),

/***/ "./src/block-options-manager.js":
/*!**************************************!*\
  !*** ./src/block-options-manager.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySelectedFakeFocusType: () => (/* binding */ applySelectedFakeFocusType),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   filterContact: () => (/* binding */ filterContact),\n/* harmony export */   hideBlockOptions: () => (/* binding */ hideBlockOptions),\n/* harmony export */   isShowingBlockOptions: () => (/* binding */ isShowingBlockOptions),\n/* harmony export */   moveTheFakeFocusToPreviousBlockOption: () => (/* binding */ moveTheFakeFocusToPreviousBlockOption),\n/* harmony export */   moveTheFakeFocusToTheNextBlockOption: () => (/* binding */ moveTheFakeFocusToTheNextBlockOption),\n/* harmony export */   removeDisplayNoneFromAllBlockOptions: () => (/* binding */ removeDisplayNoneFromAllBlockOptions),\n/* harmony export */   setCurrentDraggableBlock: () => (/* binding */ setCurrentDraggableBlock),\n/* harmony export */   setCurrentFakeFocusElement: () => (/* binding */ setCurrentFakeFocusElement),\n/* harmony export */   setRealFocusedElement: () => (/* binding */ setRealFocusedElement),\n/* harmony export */   showBlockOptions: () => (/* binding */ showBlockOptions)\n/* harmony export */ });\n// import * as commandFactory from './command-factory';\r\n\r\nlet currentDraggableBlock = null; //This element represents the block where block-options will be displayed close to\r\nlet currentFakeFocusedOption = null;\r\nlet realFocusedElement = null;   // This element is where the real/actual focus is on / TODO: change the name\r\nlet filterText = '';\r\n\r\n\r\nfunction isShowingBlockOptions() {\r\n    return blockOptionsWrapper.style.display !== 'none'\r\n}\r\n\r\nfunction setCurrentDraggableBlock(element) {\r\n    if (!element.classList.contains('draggable-block')) {\r\n        throw new Error('The Element is Not a Draggable Block');\r\n    }\r\n\r\n    currentDraggableBlock = element;\r\n}\r\n\r\nfunction setRealFocusedElement(element) {\r\n    realFocusedElement = element;\r\n}\r\n\r\nfunction setCurrentFakeFocusElement(element) {\r\n    currentFakeFocusedOption = element;\r\n}\r\n\r\nfunction filterContact(str) {\r\n    filterText += str;\r\n}\r\n\r\nfunction clearFilter() {\r\n    filterText = '';\r\n}\r\n\r\nfunction clear() {\r\n    throw new Error('Not Implement Exception')\r\n}\r\n\r\nfunction showBlockOptions() {\r\n\r\n    // The timeout in necessary to wait the browser process the selection before show the Block Options\r\n    setTimeout(() => {\r\n\r\n        const realFocusedElement = document.activeElement;\r\n        const currentDraggableBlock = realFocusedElement.closest('.draggable-block');\r\n        const firstBlockOption = getTheFirstVisibleBlockOption();\r\n\r\n        setRealFocusedElement(realFocusedElement);\r\n        setCurrentDraggableBlock(currentDraggableBlock);\r\n        setCurrentFakeFocusElement(firstBlockOption);\r\n\r\n        applyVisualFakeFocus(realFocusedElement, firstBlockOption);\r\n\r\n\r\n        //TODO: create a clear filter\r\n        // removeDisplayNoneFromAllBlockOptions();\r\n\r\n        const range = document.getSelection().getRangeAt(0);\r\n        const cursorPos = range.getBoundingClientRect();\r\n\r\n        const remSize = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n        const menuWidth = 19 * remSize;\r\n\r\n        let xPosition = cursorPos.right;\r\n        let yPosition = cursorPos.bottom + window.scrollY;\r\n\r\n        const margin = remSize * 1.25;\r\n\r\n        blockOptionsWrapper.style.display = 'block';\r\n\r\n        let blockWidth = blockOptionsWrapper.offsetWidth;\r\n\r\n\r\n        if (xPosition + blockWidth + margin > window.innerWidth) {\r\n            xPosition = cursorPos.left - menuWidth;\r\n            if (xPosition < 0) xPosition = 0;\r\n        }\r\n\r\n        blockOptionsWrapper.style.left = `${xPosition}px`;\r\n        blockOptionsWrapper.style.top = `${yPosition}px`;\r\n\r\n\r\n    }, 10);\r\n}\r\n\r\nfunction hideBlockOptions(elementToFocus) {\r\n\r\n    if (elementToFocus) {\r\n        elementToFocus.focus();\r\n    }\r\n\r\n    blockOptionsWrapper.style.display = 'none';\r\n    clearFilter();\r\n\r\n    //TODO: rename this\r\n    removeDisplayNoneFromAllBlockOptions();\r\n}\r\n\r\n\r\n\r\n// TODO:Rename this function\r\nfunction removeDisplayNoneFromAllBlockOptions() {\r\n    let sections = document.querySelectorAll('.johannes-editor .block-options-wrapper section');\r\n\r\n    sections.forEach(section => {\r\n        let options = section.querySelectorAll('.option');\r\n\r\n        options.forEach(option => {\r\n            option.style.display = '';\r\n        });\r\n\r\n        section.style.display = '';\r\n    });\r\n}\r\n\r\nfunction moveTheFakeFocusToPreviousBlockOption() {\r\n    let previous = currentFakeFocusedOption.previousElementSibling;\r\n\r\n    while (previous && (!previous.classList.contains('option') || !isElementVisible(previous))) {\r\n        previous = previous.previousElementSibling;\r\n    }\r\n\r\n    if (!previous) {\r\n        let currentSection = currentFakeFocusedOption.closest('section');\r\n        let siblingSection = currentSection.previousElementSibling;\r\n\r\n        while (siblingSection) {\r\n            let options = siblingSection.querySelectorAll('.option');\r\n            for (let i = options.length - 1; i >= 0; i--) {\r\n                if (isElementVisible(options[i])) {\r\n                    previous = options[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (previous) break;\r\n            siblingSection = siblingSection.previousElementSibling;\r\n        }\r\n\r\n        if (!previous) {\r\n            let options = document.querySelectorAll('.block-options-wrapper .option');\r\n            for (let i = options.length - 1; i >= 0; i--) {\r\n                if (isElementVisible(options[i])) {\r\n                    previous = options[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeAllVisualFakeFocus();\r\n    setCurrentFakeFocusElement(previous);\r\n    applyVisualFakeFocus(realFocusedElement, previous);\r\n}\r\n\r\nfunction moveTheFakeFocusToTheNextBlockOption() {\r\n\r\n    let next = currentFakeFocusedOption.nextElementSibling;\r\n\r\n    while (next && (!next.classList.contains('option') || !isElementVisible(next))) {\r\n        next = next.nextElementSibling;\r\n    }\r\n\r\n    if (!next) {\r\n        let currentSection = currentFakeFocusedOption.closest('section');\r\n        let siblingSection = currentSection.nextElementSibling;\r\n\r\n        while (siblingSection) {\r\n            next = siblingSection.querySelector('.option');\r\n            if (next && isElementVisible(next)) {\r\n                break;\r\n            }\r\n            siblingSection = siblingSection.nextElementSibling;\r\n        }\r\n\r\n        if (!next) {\r\n            next = document.querySelector('.block-options-wrapper .option');\r\n            while (next && !isElementVisible(next)) {\r\n                next = next.nextElementSibling;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeAllVisualFakeFocus();\r\n    setCurrentFakeFocusElement(next);\r\n    applyVisualFakeFocus(realFocusedElement, next);\r\n}\r\n\r\n\r\nfunction applySelectedFakeFocusType() {\r\n\r\n    const draggableBlock = realFocusedElement.closest('.draggable-block');\r\n    const newBlockType = option.getAttribute('data-type');\r\n\r\n    const lastSlashIndex = realFocusedElement.innerText.lastIndexOf('/');\r\n    realFocusedElement.innerText = lastSlashIndex !== -1 ? realFocusedElement.innerText.slice(0, lastSlashIndex) : realFocusedElement.innerText;\r\n\r\n    const command = commandFactory.createCommand(commandFactory.OPERATIONS.BLOCK.TRANSFORM_BLOCK, [draggableBlock, newBlockType]);\r\n    command.execute();\r\n\r\n}\r\n\r\n\r\nfunction isElementVisible(element) {\r\n    return element && element.style.display !== 'none' && element.style.visibility !== 'hidden' && element.offsetParent !== null;\r\n}\r\n\r\nfunction getTheFirstVisibleBlockOption() {\r\n\r\n    let options = blockOptionsWrapper.querySelectorAll('.option');\r\n\r\n    for (let option of options) {\r\n        if (option.style.display !== 'none') {\r\n            return option;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction applyVisualFakeFocus(realFocusedElement, elementToApplyFakeFocus) {\r\n\r\n    if (elementToApplyFakeFocus) {\r\n        elementToApplyFakeFocus.focus();\r\n        elementToApplyFakeFocus.classList.add('block-options-focused');\r\n    }\r\n\r\n    realFocusedElement.focus();\r\n}\r\n\r\nfunction removeAllVisualFakeFocus() {\r\n    let focusedElements = blockOptionsWrapper.querySelectorAll('.block-options-focused');\r\n\r\n    focusedElements.forEach(element => {\r\n        element.classList.remove('block-options-focused');\r\n    });\r\n}\n\n//# sourceURL=webpack://johannes/./src/block-options-manager.js?");

/***/ }),

/***/ "./src/clear-form-pasting.js":
/*!***********************************!*\
  !*** ./src/clear-form-pasting.js ***!
  \***********************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function () {\r\n\r\n    const editor = document.querySelector('.johannes-editor');\r\n\r\n    if (editor) {\r\n        document.addEventListener('paste', function (e) {\r\n            if (e.target.getAttribute('contenteditable') === 'true') {\r\n                e.preventDefault();\r\n                const text = (e.clipboardData || window.clipboardData).getData('text/plain');\r\n                insertTextAtCursor(text);\r\n            }\r\n        }, true);\r\n\r\n        function insertTextAtCursor(text) {\r\n            const sel = window.getSelection();\r\n            if (sel.rangeCount > 0) {\r\n                const range = sel.getRangeAt(0);\r\n                range.deleteContents();\r\n\r\n                const textNode = document.createTextNode(text);\r\n                range.insertNode(textNode);\r\n\r\n                range.setStartAfter(textNode);\r\n                range.setEndAfter(textNode);\r\n                sel.removeAllRanges();\r\n                sel.addRange(range);\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://johannes/./src/clear-form-pasting.js?");

/***/ }),

/***/ "./src/click-events.js":
/*!*****************************!*\
  !*** ./src/click-events.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _command_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./command-factory */ \"./src/command-factory.js\");\n// The start point for click events\r\n\r\n\r\n\r\n// Block operations events\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    if (johannesEditor) {\r\n        document.querySelectorAll('.block-operation').forEach(option => {\r\n            option.addEventListener('click', function () {\r\n                const operation = this.getAttribute('data-block-operation');\r\n                (0,_command_factory__WEBPACK_IMPORTED_MODULE_0__.executeCommand)(this, operation);\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Text operations events\r\n//CODE...\n\n//# sourceURL=webpack://johannes/./src/click-events.js?");

/***/ }),

/***/ "./src/command-factory.js":
/*!********************************!*\
  !*** ./src/command-factory.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPERATIONS: () => (/* binding */ OPERATIONS),\n/* harmony export */   createCommand: () => (/* binding */ createCommand),\n/* harmony export */   getBlockOperationFunction: () => (/* binding */ getBlockOperationFunction),\n/* harmony export */   operationMap: () => (/* binding */ operationMap)\n/* harmony export */ });\n/* harmony import */ var _block_operation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block-operation */ \"./src/block-operation.js\");\n/* harmony import */ var _create_list_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-list-item */ \"./src/create-list-item.js\");\n/* harmony import */ var _j_window__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./j-window */ \"./src/j-window.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nfunction createCommand(operationName, elements = null) {\r\n    return new Command(operationName, elements);\r\n}\r\n\r\n\r\nclass Command {\r\n\r\n    constructor(operationName, elements) {\r\n        this.elements = elements;\r\n        this.operation = getBlockOperationFunction(operationName);\r\n    }\r\n\r\n    execute() {\r\n        if (this.elements !== null) {\r\n            this.operation(...this.elements);\r\n        } else {\r\n            this.operation();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst OPERATIONS = {\r\n    BLOCK: {\r\n        CREATE_DEFAULT_BLOCK: 'create-default-block',\r\n        CREATE_LIST_ELEMENT: 'create-list-element',\r\n        DELETE_DRAGGABLE_BLOCK: 'delete-draggable-block',\r\n        DELETE_CURRENT_ELEMENT_AND_PARENT_BLOCK_IF_EMPTY: 'delete-current-element-and-parent-block-if-empty',\r\n        DUPLICATE_BLOCK: 'duplicate-block',\r\n        TRANSFORM_BLOCK: 'transform-block',\r\n        MOVE_UP_BLOCK: 'move-up-block',\r\n        MOVE_DOWN_BLOCK: 'move-down-block',\r\n        \r\n        \r\n        SHOW_TURN_INTO_BOX: 'show-turn-into-box',\r\n        SHOW_COLOR_BOX: 'show-color-box',\r\n        SHOW_MORE_OPTIONS_BOX: 'show-more-options-box'\r\n    },\r\n    BLOCK_OPTIONS:{\r\n        SHOW_BLOCK_OPTIONS: 'show-block-options',\r\n        HIDE_BLOCK_OPTIONS: 'hide-block-options',\r\n        MOVE_FAKE_FOCUS_TO_NEXT_OPTION: 'move-fake-focus-to-next-option',\r\n        MOVE_FAKE_FOCUS_TO_PREVIOUS_OPTION: 'move-fake-focus-to-previous-option',\r\n        APPLY_SELECTED_FAKE_FOCUS_TYPE: 'apply-selected-fake-focus-type',\r\n    },\r\n    FORMATTING_BAR:{\r\n        SHOW_TEXT_FORMATTING_BAR: 'show-text-formatting-bar',\r\n    },\r\n\r\n};\r\n\r\nconst operationMap = {\r\n    [OPERATIONS.BLOCK.CREATE_DEFAULT_BLOCK]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.createADefaultBlock,\r\n    [OPERATIONS.BLOCK.CREATE_LIST_ELEMENT]: _create_list_item__WEBPACK_IMPORTED_MODULE_1__.createListItem,\r\n    [OPERATIONS.BLOCK.DELETE_DRAGGABLE_BLOCK]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.deleteDraggableParentBlock,\r\n    [OPERATIONS.BLOCK.DELETE_CURRENT_ELEMENT_AND_PARENT_BLOCK_IF_EMPTY]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.deleteTheCurrentElementAndTheDraggableBlockIfEmpty,\r\n    [OPERATIONS.BLOCK.DUPLICATE_BLOCK]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.duplicateBlock,\r\n    [OPERATIONS.BLOCK.TRANSFORM_BLOCK]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.transformBlock,\r\n    [OPERATIONS.BLOCK.MOVE_UP_BLOCK]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.moveUpBlock,\r\n    [OPERATIONS.BLOCK.MOVE_DOWN_BLOCK]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.moveDownBlock,\r\n    [OPERATIONS.BLOCK_OPTIONS.SHOW_BLOCK_OPTIONS]: _j_window__WEBPACK_IMPORTED_MODULE_2__.blockOptionsManager.showBlockOptions,\r\n    [OPERATIONS.BLOCK_OPTIONS.HIDE_BLOCK_OPTIONS]: _j_window__WEBPACK_IMPORTED_MODULE_2__.blockOptionsManager.hideBlockOptions,\r\n    [OPERATIONS.BLOCK_OPTIONS.MOVE_FAKE_FOCUS_TO_NEXT_OPTION]: _j_window__WEBPACK_IMPORTED_MODULE_2__.blockOptionsManager.moveTheFakeFocusToTheNextBlockOption,\r\n    [OPERATIONS.BLOCK_OPTIONS.MOVE_FAKE_FOCUS_TO_PREVIOUS_OPTION]: _j_window__WEBPACK_IMPORTED_MODULE_2__.blockOptionsManager.moveTheFakeFocusToPreviousBlockOption,\r\n    [OPERATIONS.BLOCK_OPTIONS.APPLY_SELECTED_FAKE_FOCUS_TYPE]: _j_window__WEBPACK_IMPORTED_MODULE_2__.blockOptionsManager.applySelectedFakeFocusType,\r\n    [OPERATIONS.SHOW_TEXT_FORMATTING_BAR]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.transformBlock,\r\n    [OPERATIONS.SHOW_TURN_INTO_BOX]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.transformBlock,\r\n    [OPERATIONS.SHOW_COLOR_BOX]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.transformBlock,\r\n    [OPERATIONS.SHOW_MORE_OPTIONS_BOX]: _block_operation__WEBPACK_IMPORTED_MODULE_0__.transformBlock\r\n};\r\n\r\n\r\nfunction getBlockOperationFunction(blockOperation) {\r\n    const operationFunction = operationMap[blockOperation];\r\n    if (!operationFunction) {\r\n        throw new Error('Operation Not Found Exception');\r\n    }\r\n    return operationFunction;\r\n}\r\n\r\n\r\n// export function executeCommand(element, operation) {\r\n\r\n//     const command = getBlockOperationFunction(operation);\r\n\r\n//     command(element);\r\n// }\r\n\r\n// function getBlockOperationFunction(blockOperation) {\r\n//     if (blockOperation == 'create-default-block') {\r\n//         return block.createADefaultBlock;\r\n//     } if (blockOperation == 'create-list-element') {\r\n//         return createListItem;\r\n//     } else if (blockOperation == 'delete-draggable-block') {\r\n//         return block.deleteDraggableParentBlock;\r\n//     } else if (blockOperation == 'delete-current-element-and-parent-block-if-empty') {\r\n//         return block.deleteTheCurrentElementAndTheDraggableBlockIfEmpty;\r\n//     } else if (blockOperation == 'duplicate-block') {\r\n//         return block.duplicateBlock\r\n//     } else if (blockOperation == 'transform-block') {\r\n//         return block.transformBlock;\r\n//     } else if (blockOperation == 'move-up-block') {\r\n//         return block.moveUpBlock\r\n//     } else if (blockOperation == 'move-down-block') {\r\n//         return block.moveDownBlock\r\n//     } else if (blockOperation == 'show-block-options') {\r\n//         return block.transformBlock\r\n//     } else if (blockOperation == 'show-text-formatting-bar') {\r\n//         return block.transformBlock\r\n//     } else if (blockOperation == 'show-turn-into-box') {\r\n//         return block.transformBlock\r\n//     } else if (blockOperation == 'show-color-box') {\r\n//         return block.transformBlock\r\n//     } else if (blockOperation == 'show-more-options-box') {\r\n//         return block.transformBlock\r\n//     } else {\r\n//         throw Error('Operation Not Found Exception')\r\n//     }\r\n// }\n\n//# sourceURL=webpack://johannes/./src/command-factory.js?");

/***/ }),

/***/ "./src/create-list-item.js":
/*!*********************************!*\
  !*** ./src/create-list-item.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createListItem: () => (/* binding */ createListItem)\n/* harmony export */ });\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element-factory */ \"./src/element-factory.js\");\n\r\n\r\n\r\n\r\nfunction createListItem(element) {\r\n\r\n    let newContentElement = null;\r\n\r\n    let activeElement = document.activeElement;\r\n    let contentElement = element.closest('.johannes-content-element');\r\n\r\n    if (contentElement.classList.contains('checkbox-list')) {\r\n        newContentElement = (0,_element_factory__WEBPACK_IMPORTED_MODULE_0__.createNewCheckboxLiElement)();\r\n    } else if (contentElement.classList.contains('list')) {\r\n        newContentElement = (0,_element_factory__WEBPACK_IMPORTED_MODULE_0__.createNewLiElement)();\r\n    } else {\r\n        newContentElement = (0,_element_factory__WEBPACK_IMPORTED_MODULE_0__.createNewDraggableParagraphElement)();\r\n    }\r\n\r\n    let parentBlock = null;\r\n\r\n    if (contentElement.classList.contains('list')) {\r\n\r\n        parentBlock = contentElement;\r\n\r\n        const textContent = activeElement.textContent.trim();\r\n\r\n        if (textContent === '') {\r\n\r\n            parentBlock = element.closest('.draggable-block');\r\n\r\n            element.closest('.deletable').remove();\r\n\r\n            newContentElement = (0,_element_factory__WEBPACK_IMPORTED_MODULE_0__.createNewDraggableParagraphElement)();\r\n            parentBlock.insertAdjacentElement('afterend', newContentElement);\r\n\r\n        } else {\r\n            element.closest('.list-item').insertAdjacentElement('afterend', newContentElement);\r\n        }\r\n\r\n    } else {\r\n        parentBlock = element.closest('.draggable-block');\r\n\r\n        if (parentBlock) {\r\n            if (parentBlock.nextSibling) {\r\n                parentBlock.parentNode.insertBefore(newContentElement, parentBlock.nextSibling);\r\n            } else {\r\n                parentBlock.parentNode.appendChild(newContentElement);\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://johannes/./src/create-list-item.js?");

/***/ }),

/***/ "./src/drag-and-drop.js":
/*!******************************!*\
  !*** ./src/drag-and-drop.js ***!
  \******************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function () {\r\n    const content = document.querySelector('.johannes-editor');\r\n\r\n    let draggedItem = null;\r\n\r\n    let dropLine = document.createElement('div');\r\n    dropLine.classList.add('drop-line');\r\n    dropLine.style.height = '2px';\r\n    dropLine.style.display = 'none';\r\n\r\n    content.addEventListener('dragstart', (e) => {\r\n        if (e.target.classList.contains('drag-handler')) {\r\n            draggedItem = e.target.closest('.draggable-block');\r\n            draggedItem.setAttribute('draggable', 'true');\r\n            setTimeout(() => {\r\n                draggedItem.style.opacity = '0.5';\r\n            }, 0);\r\n        }\r\n    });\r\n\r\n    content.addEventListener('dragend', () => {\r\n        setTimeout(() => {\r\n            if (draggedItem) {\r\n                draggedItem.style.opacity = '';\r\n                draggedItem.removeAttribute('draggable');\r\n                draggedItem = null;\r\n            }\r\n            dropLine.remove();\r\n        }, 0);\r\n    });\r\n\r\n    content.addEventListener('dragover', (e) => {\r\n        e.preventDefault();\r\n        let target = e.target.closest('.draggable-block');\r\n\r\n        if (target && target !== draggedItem) {\r\n            let bounding = target.getBoundingClientRect();\r\n            let offset = bounding.y + bounding.height / 2;\r\n\r\n            if (e.clientY > offset) {\r\n                if (target.nextElementSibling !== dropLine) {\r\n                    target.insertAdjacentElement('afterend', dropLine);\r\n                }\r\n            } else {\r\n                if (target.previousElementSibling !== dropLine) {\r\n                    target.insertAdjacentElement('beforebegin', dropLine);\r\n                }\r\n            }\r\n        }\r\n\r\n        dropLine.style.display = 'block';\r\n    });\r\n\r\n    content.addEventListener('drop', (e) => {\r\n        e.preventDefault();\r\n        if (dropLine.parentElement) {\r\n            dropLine.parentElement.insertBefore(draggedItem, dropLine);\r\n            dropLine.remove();\r\n        }\r\n    });\r\n});\n\n//# sourceURL=webpack://johannes/./src/drag-and-drop.js?");

/***/ }),

/***/ "./src/element-factory.js":
/*!********************************!*\
  !*** ./src/element-factory.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNewCheckboxLiElement: () => (/* binding */ createNewCheckboxLiElement),\n/* harmony export */   createNewDraggableParagraphElement: () => (/* binding */ createNewDraggableParagraphElement),\n/* harmony export */   createNewHeadingElement: () => (/* binding */ createNewHeadingElement),\n/* harmony export */   createNewLiElement: () => (/* binding */ createNewLiElement),\n/* harmony export */   createNewListElement: () => (/* binding */ createNewListElement),\n/* harmony export */   createNewParagraphElement: () => (/* binding */ createNewParagraphElement),\n/* harmony export */   createNewQuoteElement: () => (/* binding */ createNewQuoteElement),\n/* harmony export */   createNewSeparatorElement: () => (/* binding */ createNewSeparatorElement),\n/* harmony export */   createNewTodoListElement: () => (/* binding */ createNewTodoListElement)\n/* harmony export */ });\nfunction createNewHeadingElement(number = 2) {\r\n\r\n    let newElement = document.createElement(`h${number}`);\r\n    newElement.classList.add('johannes-content-element');\r\n    newElement.classList.add('swittable');\r\n    newElement.classList.add('focusable');\r\n    newElement.classList.add('focus');\r\n\r\n    newElement.contentEditable = true;\r\n\r\n    newElement.setAttribute('data-placeholder', `Heading ${number}`);\r\n\r\n    return newElement;\r\n}\r\n\r\nfunction createNewParagraphElement(text) {\r\n\r\n    let newElement = document.createElement('p');\r\n    newElement.classList.add('johannes-content-element');\r\n    newElement.classList.add('swittable');\r\n    newElement.classList.add('focusable');\r\n    newElement.classList.add('key-trigger');\r\n\r\n    newElement.contentEditable = true;\r\n\r\n    newElement.innerText = text || \"\";\r\n\r\n    newElement.setAttribute('data-placeholder', 'Write something or type / (slash) to choose a block...');\r\n\r\n    return newElement;\r\n}\r\n\r\nfunction createNewDraggableParagraphElement() {\r\n\r\n    let newDiv = document.createElement('div');\r\n    let newElement = createNewParagraphElement();\r\n\r\n    let newButton = document.createElement('button');\r\n    newButton.innerHTML = '<svg width=\"20\" height=\"20\" fill=\"currentColor\"><use href=\"#icon-material-drag\"></use></svg>';\r\n\r\n    newDiv.appendChild(newButton);\r\n    newDiv.appendChild(newElement);\r\n\r\n    newDiv.classList.add('draggable-block');\r\n    newDiv.classList.add('deletable');\r\n    newButton.classList.add('drag-handler');\r\n    newButton.classList.add('button-reset');\r\n    newButton.draggable = true;\r\n\r\n    return newDiv;\r\n}\r\n\r\nfunction createNewListElement(text, type = 'ul') {\r\n    const newList = document.createElement(type);\r\n    newList.classList.add('johannes-content-element');\r\n    newList.classList.add('swittable');\r\n    newList.classList.add('list');\r\n\r\n    const initialItem = createNewLiElement(text);\r\n\r\n    newList.appendChild(initialItem);\r\n\r\n    return newList;\r\n}\r\n\r\nfunction createNewTodoListElement(text, type = 'ul') {\r\n    const newList = document.createElement(type);\r\n    newList.classList.add('johannes-content-element');\r\n    newList.classList.add('checkbox-list');\r\n    newList.classList.add('list');\r\n\r\n    const initialItem = createNewCheckboxLiElement(text);\r\n\r\n    newList.appendChild(initialItem);\r\n\r\n    return newList;\r\n}\r\n\r\n\r\nfunction createNewLiElement(text = '') {\r\n\r\n    let initialItem = document.createElement('li');\r\n\r\n    initialItem.classList.add('focusable');\r\n    initialItem.classList.add('deletable');\r\n    initialItem.classList.add('editable');\r\n    initialItem.classList.add('focus');\r\n    initialItem.classList.add('key-trigger');\r\n    initialItem.classList.add('list-item');\r\n\r\n    initialItem.innerText = text;\r\n\r\n    initialItem.contentEditable = true;\r\n    initialItem.setAttribute('data-placeholder', 'Item');\r\n\r\n    return initialItem;\r\n\r\n}\r\n\r\nfunction createNewCheckboxLiElement(text = '') {\r\n\r\n    let li = document.createElement('li');\r\n    li.classList.add('deletable');\r\n    li.classList.add('list-item');\r\n    initialItem.classList.add('key-trigger');\r\n\r\n    let checkbox = document.createElement('input');\r\n    checkbox.setAttribute('type', 'checkbox');\r\n\r\n    let span = document.createElement('span');\r\n    span.textContent = text || \"\";\r\n    span.setAttribute('data-placeholder', 'To-do');\r\n    span.contentEditable = true;\r\n\r\n    span.classList.add('focusable');\r\n    span.classList.add('editable');    \r\n    span.classList.add('focus');  \r\n\r\n    li.appendChild(checkbox);\r\n    li.appendChild(span);\r\n\r\n    return li;\r\n}\r\n\r\nfunction createNewSeparatorElement() {\r\n    let newElement = document.createElement('hr');\r\n    return newElement;\r\n}\r\n\r\n\r\nfunction createNewQuoteElement(text) {\r\n    const quote = document.createElement('blockquote');\r\n    quote.classList.add('swittable');\r\n    quote.classList.add('johannes-content-element');\r\n\r\n    const p = createNewNoSwittableParagraphElement(text);\r\n    const cite = createNewNoSwittableCiteElement();\r\n\r\n    quote.appendChild(p);\r\n    quote.appendChild(cite);\r\n\r\n    return quote;\r\n}\r\n\r\nfunction createNewNoSwittableParagraphElement(text) {\r\n\r\n    let newElement = document.createElement('p');\r\n    newElement.classList.add('focus');\r\n    newElement.classList.add('focusable');\r\n    newElement.classList.add('editable');\r\n\r\n    newElement.contentEditable = true;\r\n\r\n    newElement.innerText = text || \"\";\r\n\r\n    newElement.setAttribute('data-placeholder', '”To be, or not to be, that is the question”');\r\n\r\n    return newElement;\r\n}\r\n\r\nfunction createNewNoSwittableCiteElement(text) {\r\n\r\n    let newElement = document.createElement('cite');\r\n    newElement.classList.add('johannes-content-element');\r\n    newElement.classList.add('focusable');\r\n    newElement.classList.add('deletable');\r\n    newElement.classList.add('editable');\r\n\r\n    newElement.contentEditable = true;\r\n\r\n    newElement.innerText = text || \"\";\r\n\r\n    newElement.setAttribute('data-placeholder', '— Socrates');\r\n\r\n    return newElement;\r\n}\n\n//# sourceURL=webpack://johannes/./src/element-factory.js?");

/***/ }),

/***/ "./src/focus-on-p.js":
/*!***************************!*\
  !*** ./src/focus-on-p.js ***!
  \***************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function(){\r\n    const editor = document.querySelector('.johannes-editor');\r\n\r\n    if(editor){\r\n        let blocks = editor.querySelectorAll('.draggable-block');\r\n\r\n        if(blocks.length == 1){\r\n\r\n            const p = blocks[0].querySelector('.johannes-content-element'); \r\n            if(p.innerText == ''){\r\n                p.focus();\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://johannes/./src/focus-on-p.js?");

/***/ }),

/***/ "./src/helper.js":
/*!***********************!*\
  !*** ./src/helper.js ***!
  \***********************/
/***/ (() => {

eval("\r\n\r\n\n\n//# sourceURL=webpack://johannes/./src/helper.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _block_operation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block-operation.js */ \"./src/block-operation.js\");\n/* harmony import */ var _drag_and_drop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drag-and-drop.js */ \"./src/drag-and-drop.js\");\n/* harmony import */ var _drag_and_drop_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_drag_and_drop_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _switch_block_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./switch-block.js */ \"./src/switch-block.js\");\n/* harmony import */ var _keyboard_navigation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./keyboard-navigation.js */ \"./src/keyboard-navigation.js\");\n/* harmony import */ var _text_blocks_from_newlines_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text-blocks-from-newlines.js */ \"./src/text-blocks-from-newlines.js\");\n/* harmony import */ var _focus_on_p_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./focus-on-p.js */ \"./src/focus-on-p.js\");\n/* harmony import */ var _focus_on_p_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_focus_on_p_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _clear_form_pasting_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clear-form-pasting.js */ \"./src/clear-form-pasting.js\");\n/* harmony import */ var _clear_form_pasting_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_clear_form_pasting_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _rich_text_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rich-text.js */ \"./src/rich-text.js\");\n/* harmony import */ var _click_events_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./click-events.js */ \"./src/click-events.js\");\n/* harmony import */ var _memento_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./memento.js */ \"./src/memento.js\");\n/* harmony import */ var _memento_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_memento_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _keypress_events_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./keypress-events.js */ \"./src/keypress-events.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://johannes/./src/index.js?");

/***/ }),

/***/ "./src/j-anchor.js":
/*!*************************!*\
  !*** ./src/j-anchor.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   save: () => (/* binding */ save),\n/* harmony export */   setURL: () => (/* binding */ setURL)\n/* harmony export */ });\nlet anchorElement = null;\r\n\r\nfunction save(a){\r\n    anchorElement = a;\r\n}\r\n\r\nfunction clear(){\r\n    anchorElement = null;\r\n}\r\n\r\nfunction any(){\r\n    anchorElement == null;\r\n}\r\n\r\nfunction setURL(url){\r\n    anchorElement.href = url;\r\n}\n\n//# sourceURL=webpack://johannes/./src/j-anchor.js?");

/***/ }),

/***/ "./src/j-selection.js":
/*!****************************!*\
  !*** ./src/j-selection.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearSelection: () => (/* binding */ clearSelection),\n/* harmony export */   getCurrentDraggableBlockFocused: () => (/* binding */ getCurrentDraggableBlockFocused),\n/* harmony export */   restoreSelection: () => (/* binding */ restoreSelection),\n/* harmony export */   saveSelection: () => (/* binding */ saveSelection),\n/* harmony export */   savedSelection: () => (/* binding */ savedSelection)\n/* harmony export */ });\nlet savedSelection = null;\r\n\r\nfunction saveSelection() {\r\n    if (window.getSelection) {\r\n        const sel = window.getSelection();\r\n        if (sel.rangeCount > 0) {\r\n            savedSelection = sel.getRangeAt(0).cloneRange();\r\n        }\r\n    }\r\n}\r\n\r\nfunction restoreSelection() {\r\n    const selection = window.getSelection();\r\n    if (savedSelection) {\r\n        selection.removeAllRanges();\r\n        selection.addRange(savedSelection);\r\n    }\r\n}\r\n\r\nfunction clearSelection() {\r\n    savedSelection = null;\r\n    window.getSelection().removeAllRanges();\r\n}\r\n\r\nfunction getCurrentDraggableBlockFocused() {\r\n\r\n    let currentBlockRange = window.getSelection().getRangeAt(0);\r\n\r\n    let commonAncestor = currentBlockRange.commonAncestorContainer;\r\n\r\n    if (commonAncestor.nodeType === 3) { //* text node */\r\n        commonAncestor = commonAncestor.parentNode;\r\n    }\r\n\r\n    const currentBlock = commonAncestor.closest('.draggable-block');\r\n\r\n    return currentBlock;\r\n}\n\n//# sourceURL=webpack://johannes/./src/j-selection.js?");

/***/ }),

/***/ "./src/j-window.js":
/*!*************************!*\
  !*** ./src/j-window.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockOptionsManager: () => (/* binding */ blockOptionsManager),\n/* harmony export */   closeAll: () => (/* binding */ closeAll),\n/* harmony export */   closeAllDependentBox: () => (/* binding */ closeAllDependentBox),\n/* harmony export */   closeBlockOptions: () => (/* binding */ closeBlockOptions),\n/* harmony export */   closeColorBox: () => (/* binding */ closeColorBox),\n/* harmony export */   closeMoreOptionsBox: () => (/* binding */ closeMoreOptionsBox),\n/* harmony export */   closeTextFormattingBar: () => (/* binding */ closeTextFormattingBar),\n/* harmony export */   closeTurnIntoBox: () => (/* binding */ closeTurnIntoBox),\n/* harmony export */   focusOnNext: () => (/* binding */ focusOnNext),\n/* harmony export */   focusOnPrevious: () => (/* binding */ focusOnPrevious),\n/* harmony export */   focusOnTheEndOfTheText: () => (/* binding */ focusOnTheEndOfTheText),\n/* harmony export */   focusOnTheStartOfTheText: () => (/* binding */ focusOnTheStartOfTheText),\n/* harmony export */   showInputLinkBox: () => (/* binding */ showInputLinkBox),\n/* harmony export */   tryHideTextFormattingBar: () => (/* binding */ tryHideTextFormattingBar)\n/* harmony export */ });\n/* harmony import */ var _block_options_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block-options-manager */ \"./src/block-options-manager.js\");\n\r\n\r\nconst blockOptionsManager = _block_options_manager__WEBPACK_IMPORTED_MODULE_0__;\r\n\r\n\r\n//**Show */\r\nfunction showInputLinkBox() {\r\n\r\n    const rect = window.getSelection().getRangeAt(0).getBoundingClientRect();\r\n\r\n    const containerWidth = textFormattingBar.offsetWidth;\r\n    const linkInputDivWidth = linkBox.offsetWidth;\r\n    const containerCenter = (textFormattingBar.getBoundingClientRect().left + containerWidth) / 2;\r\n    const linkInputDivCenter = (linkBox.getBoundingClientRect().left + linkInputDivWidth) / 2;\r\n\r\n    linkBox.style.position = 'absolute';\r\n    linkBox.style.left = `${containerCenter - linkInputDivCenter + window.scrollX}px`;\r\n    linkBox.style.top = `${rect.bottom + window.scrollY + 5}px`;\r\n    linkBox.style.display = 'block';\r\n\r\n    linkBoxInput.focus();\r\n}\r\n\r\n\r\n\r\nfunction closeAll() {\r\n    closeAllDependentBox();\r\n    closeTextFormattingBar();\r\n    closeBlockOptions();\r\n}\r\n\r\nfunction closeBlockOptions() {\r\n\r\n}\r\n\r\nfunction closeTextFormattingBar() {\r\n    textFormattingBar.style.display = 'none';\r\n}\r\n\r\nfunction closeAllDependentBox() {\r\n\r\n    const dependentBoxes = document.querySelectorAll('.dependent-box');\r\n\r\n    for (let box of dependentBoxes) {\r\n        box.style.display = 'none';\r\n    }\r\n}\r\n\r\nfunction closeTurnIntoBox() {\r\n\r\n}\r\n\r\nfunction closeColorBox() {\r\n\r\n}\r\n\r\nfunction closeMoreOptionsBox() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction tryHideTextFormattingBar() {\r\n\r\n    // check before if a dependent box is opened, then close the dependent box\r\n\r\n    //1. try  close text-formatting-bar before linkBox (the actual only one dependency box)\r\n    if (textFormattingBoxVisible() && !anyDependentBoxVisible()) {\r\n        // only hide if the dependency box is closed\r\n        textFormattingBar.style.display = 'none';\r\n        // restoreSelection();\r\n    }\r\n\r\n    // 2. close the dependency box (linkBox)\r\n    if (anyDependentBoxVisible()) {\r\n\r\n        // Remove a if has no href attribute or if href is empty\r\n        if (anchorElement && (anchorElement.href == '' || anchorElement.href == null)) {\r\n            const parent = anchorElement.parentNode;\r\n            while (anchorElement.firstChild) {\r\n                parent.insertBefore(anchorElement.firstChild, anchorElement);\r\n            }\r\n\r\n            if (parent) {\r\n                parent.removeChild(anchorElement);\r\n                parent.normalize(); // Mesclar nós de texto adjacentes, se necessário\r\n            }\r\n        }\r\n\r\n        // linkBox.style.display = 'none';\r\n        // closeAllDependentBox();\r\n        // restoreSelection();\r\n    }\r\n}\r\n\r\nfunction textFormattingBoxVisible() {\r\n    return textFormattingBar.style.display != 'none';\r\n}\r\n\r\n\r\nfunction anyDependentBoxVisible() {\r\n    const dependentBoxes = document.querySelectorAll('.dependent-box');\r\n\r\n    for (const box of dependentBoxes) {\r\n        if (box.style.display !== 'none') {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction focusOnTheEndOfTheText(contentBlock) {\r\n    const range = document.createRange();\r\n    const selection = window.getSelection();\r\n\r\n    range.selectNodeContents(contentBlock);\r\n\r\n    let lastChild = contentBlock;\r\n    while (lastChild.lastChild && lastChild.lastChild.nodeType === Node.ELEMENT_NODE) {\r\n        lastChild = lastChild.lastChild;\r\n    }\r\n    if (lastChild.lastChild) {\r\n        lastChild = lastChild.lastChild;\r\n    }\r\n\r\n    range.setEnd(lastChild, lastChild.textContent.length);\r\n    range.collapse(false);\r\n\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n\r\n    contentBlock.focus();\r\n}\r\n\r\nfunction focusOnTheStartOfTheText(contentBlock) {\r\n    const range = document.createRange();\r\n    const selection = window.getSelection();\r\n\r\n    range.selectNodeContents(contentBlock);\r\n    range.collapse(true);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n\r\n    contentBlock.focus();\r\n}\r\n\r\nfunction focusOnNext(actualElement, position) {\r\n    let tag = actualElement.tagName.toUpperCase();\r\n    let focusedElement = null;\r\n\r\n    if (tag === 'LI') {\r\n        let nextElement = actualElement.nextElementSibling;\r\n\r\n        if (nextElement && nextElement.classList.contains('focusable')) {\r\n            focusedElement = nextElement;\r\n            if (position) {\r\n                applyCursorXStartPosition(focusedElement, position);\r\n            } else {\r\n                focusOnTheStartOfTheText(focusedElement);\r\n            }\r\n            return focusedElement;\r\n        }\r\n    }\r\n\r\n    if (actualElement.parentNode.tagName.toUpperCase() === 'LI' /* focusable SPAN inside LI*/) {\r\n        let nextElement = actualElement.closest('li').nextElementSibling?.querySelector('.focusable');\r\n\r\n        if (nextElement && nextElement.classList.contains('focusable')) {\r\n            focusedElement = nextElement;\r\n            if (position) {\r\n                applyCursorXStartPosition(focusedElement, position);\r\n            } else {\r\n                focusOnTheStartOfTheText(focusedElement);\r\n            }\r\n            return focusedElement;\r\n        }\r\n    }\r\n\r\n    let parent = actualElement.closest('.draggable-block');\r\n    let sibling = parent.nextElementSibling;\r\n\r\n    while (sibling) {\r\n        let focusableCandidates = sibling.querySelectorAll('.focusable');\r\n        if (focusableCandidates.length > 0) {\r\n            focusedElement = focusableCandidates[0];\r\n            if (position) {\r\n                applyCursorXStartPosition(focusedElement, position);\r\n            } else {\r\n                focusOnTheStartOfTheText(focusedElement);\r\n            }\r\n            return focusedElement;\r\n        }\r\n\r\n        sibling = sibling.nextElementSibling;\r\n    }\r\n\r\n    return focusedElement;\r\n}\r\n\r\n\r\nfunction focusOnPrevious(actualElement, position) {\r\n    let tag = actualElement.tagName.toUpperCase();\r\n    let focusedElement = null;\r\n\r\n    if (tag === 'LI') {\r\n        let previousElement = actualElement.previousElementSibling;\r\n\r\n        if (previousElement && previousElement.classList.contains('focusable')) {\r\n            focusedElement = previousElement;\r\n            if (position) {\r\n                applyCursorXEndPosition(focusedElement, position);\r\n            } else {\r\n                focusOnTheEndOfTheText(focusedElement);\r\n            }\r\n            return focusedElement;\r\n        }\r\n    }\r\n\r\n    if (actualElement.parentNode.tagName.toUpperCase() === 'LI' /* focusable SPAN inside LI*/) {\r\n        let previousElement = actualElement.closest('li').previousElementSibling?.querySelector('.focusable');\r\n\r\n        if (previousElement && previousElement.classList.contains('focusable')) {\r\n            focusedElement = previousElement;\r\n            if (position) {\r\n                applyCursorXEndPosition(focusedElement, position);\r\n            } else {\r\n                focusOnTheEndOfTheText(focusedElement);\r\n            }\r\n            return focusedElement;\r\n        }\r\n    }\r\n\r\n    let parent = actualElement.closest('.draggable-block');\r\n    let sibling = parent.previousElementSibling;\r\n\r\n    while (sibling) {\r\n        let focusableCandidates = sibling.querySelectorAll('.focusable');\r\n        if (focusableCandidates.length > 0) {\r\n            focusedElement = focusableCandidates[focusableCandidates.length - 1];\r\n            if (position) {\r\n                applyCursorXEndPosition(focusedElement, position);\r\n            } else {\r\n                focusOnTheEndOfTheText(focusedElement);\r\n            }\r\n            return focusedElement;\r\n        }\r\n\r\n        sibling = sibling.previousElementSibling;\r\n    }\r\n\r\n    return focusedElement;\r\n}\r\n\r\n\r\nfunction adjustCursorOffset(node, xPosition) {\r\n    let range = document.createRange();\r\n    let closestNode = node;\r\n    let closestOffset = 0;\r\n    let closestDiff = Infinity;\r\n\r\n    for (let i = 0; i < node.textContent.length; i++) {\r\n        range.setStart(node, i);\r\n        range.setEnd(node, i + 1);\r\n        const rect = range.getBoundingClientRect();\r\n        const leftDiff = Math.abs(rect.left - xPosition);\r\n        const rightDiff = Math.abs(rect.right - xPosition);\r\n\r\n        if (leftDiff < closestDiff || rightDiff < closestDiff) {\r\n            closestDiff = Math.min(leftDiff, rightDiff);\r\n            closestOffset = i + (rightDiff < leftDiff ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    if (xPosition > range.getBoundingClientRect().right) {\r\n        closestOffset = node.textContent.length;\r\n    }\r\n\r\n    return { closestNode, closestOffset };\r\n}\r\n\r\nfunction applyCursorXStartPosition(element, xPosition) {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n\r\n    let currentNode = element.firstChild;\r\n    let result = null;\r\n\r\n    while (currentNode) {\r\n        if (currentNode.nodeType === Node.TEXT_NODE) {\r\n            result = adjustCursorOffset(currentNode, xPosition);\r\n            break;\r\n        }\r\n        currentNode = currentNode.nextSibling;\r\n    }\r\n\r\n    if (result && result.closestNode) {\r\n        range.setStart(result.closestNode, result.closestOffset);\r\n        range.collapse(true);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        element.focus();\r\n    } else {\r\n        range.selectNodeContents(element);\r\n        range.collapse(true);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        element.focus();\r\n    }\r\n}\r\n\r\nfunction applyCursorXEndPosition(element, xPosition) {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n\r\n    let currentNode = element.lastChild;\r\n    let result = null;\r\n\r\n    while (currentNode) {\r\n        if (currentNode.nodeType === Node.TEXT_NODE) {\r\n            result = adjustCursorOffset(currentNode, xPosition);\r\n            break;\r\n        } else if (currentNode.nodeName.toUpperCase() === 'BR') {\r\n            currentNode = currentNode.previousSibling;\r\n            continue;\r\n        }\r\n        currentNode = currentNode.previousSibling;\r\n    }\r\n\r\n    if (result && result.closestNode) {\r\n        range.setStart(result.closestNode, result.closestOffset);\r\n        range.collapse(true);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        element.focus();\r\n    } else {\r\n        range.selectNodeContents(element);\r\n        range.collapse(false);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        element.focus();\r\n    }\r\n}\n\n//# sourceURL=webpack://johannes/./src/j-window.js?");

/***/ }),

/***/ "./src/keyboard-navigation.js":
/*!************************************!*\
  !*** ./src/keyboard-navigation.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper */ \"./src/helper.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_helper__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    \r\n    const content = document.querySelector('.johannes-editor > .content');\r\n    const blockSelection = document.querySelector('.block-options-wrapper');\r\n\r\n\r\n    content.addEventListener('keydown', function (event) {\r\n        const target = event.target;\r\n        if (blockSelection.style.display === 'none') {\r\n            if (event.key === 'ArrowRight' && isCursorAtEnd(target)) {\r\n                event.preventDefault();\r\n\r\n                (0,_helper__WEBPACK_IMPORTED_MODULE_0__.focusOnNext)(target);\r\n\r\n            } else if (event.key === 'ArrowLeft' && isCursorAtStart(target)) {\r\n                event.preventDefault();\r\n\r\n                (0,_helper__WEBPACK_IMPORTED_MODULE_0__.focusOnPrevious)(target);\r\n\r\n            } else if (event.key === 'ArrowDown' && isAtLastVisibleLine(target)) {\r\n                event.preventDefault();\r\n\r\n                let position = getCursorXPosition();\r\n                (0,_helper__WEBPACK_IMPORTED_MODULE_0__.focusOnNext)(target, position);\r\n\r\n\r\n            } else if (event.key === 'ArrowUp' && isAtFirstVisibleLine(target)) {\r\n                event.preventDefault();\r\n\r\n                let position = getCursorXPosition();\r\n                (0,_helper__WEBPACK_IMPORTED_MODULE_0__.focusOnPrevious)(target, position);\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n\r\nfunction getCursorXPosition() {\r\n    const selection = window.getSelection();\r\n    if (!selection.rangeCount) {\r\n        return 0;\r\n    }\r\n\r\n    const range = selection.getRangeAt(0).cloneRange();\r\n    const rect = range.getBoundingClientRect();\r\n    return rect.left;\r\n}\r\n\r\nfunction isCursorAtEnd(target) {\r\n    const selection = window.getSelection();\r\n    if (!selection.rangeCount) return false;\r\n\r\n    const range = selection.getRangeAt(0);\r\n    if (!range.collapsed) return false;\r\n\r\n    let node = range.endContainer;\r\n    while (node != target && node.nextSibling == null) {\r\n        node = node.parentNode;\r\n    }\r\n    return node == target && range.endOffset == range.endContainer.textContent.length;\r\n}\r\n\r\nfunction isCursorAtStart(target) {\r\n    const selection = window.getSelection();\r\n    if (!selection.rangeCount) return false;\r\n\r\n    const range = selection.getRangeAt(0);\r\n    if (!range.collapsed) return false;\r\n\r\n    let node = range.startContainer;\r\n    while (node != target && node.previousSibling == null) {\r\n        node = node.parentNode;\r\n    }\r\n    return node == target && range.startOffset == 0;\r\n}\r\n\r\nfunction isAtFirstVisibleLine(target) {\r\n    const selection = window.getSelection();\r\n\r\n    if (!selection.rangeCount || selection.anchorNode.parentNode !== target) {\r\n        return target.childNodes.length === 0;\r\n    }\r\n\r\n    const range = selection.getRangeAt(0);\r\n    const rect = range.getBoundingClientRect();\r\n    const contentRect = target.getBoundingClientRect();\r\n\r\n    return rect.top === contentRect.top;\r\n}\r\n\r\nfunction isAtLastVisibleLine(target) {\r\n    const selection = window.getSelection();\r\n    if (!selection.rangeCount) {\r\n        return target.textContent.length === 0;\r\n    }\r\n\r\n    const originalRange = selection.getRangeAt(0).cloneRange();\r\n    const originalRect = originalRange.getBoundingClientRect();\r\n\r\n    selection.modify('move', 'forward', 'line');\r\n    const newRect = selection.getRangeAt(0).getBoundingClientRect();\r\n\r\n    const isLastLine = originalRect.top === newRect.top;\r\n\r\n    selection.removeAllRanges();\r\n    selection.addRange(originalRange);\r\n\r\n    return isLastLine;\r\n}\n\n//# sourceURL=webpack://johannes/./src/keyboard-navigation.js?");

/***/ }),

/***/ "./src/keypress-events.js":
/*!********************************!*\
  !*** ./src/keypress-events.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _command_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./command-factory */ \"./src/command-factory.js\");\n/* harmony import */ var _j_window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./j-window */ \"./src/j-window.js\");\n//The start point for key press events\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import * as blockOptionsManager from './block-options-manager';\r\n\r\n\r\n// Block operations is operations related to the block it self. Create a block, delete a block, change the block type, etc...\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    document.addEventListener('keydown', function (event) {\r\n\r\n        if (event.target.classList.contains('key-trigger') && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions()) {\r\n            if (event.key === 'Enter' && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                event.preventDefault();\r\n\r\n                //TODO: transform into a command\r\n                createNewElementWhenHitEnter(event);\r\n\r\n            } else if (event.key === 'Backspace' && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && isActiveContentBlank(event) && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                event.preventDefault();\r\n\r\n                //TODO: transform into a command\r\n                let currentElement = document.activeElement;\r\n\r\n                _j_window__WEBPACK_IMPORTED_MODULE_1__.focusOnPrevious(document.activeElement);\r\n                (0,_command_factory__WEBPACK_IMPORTED_MODULE_0__.executeCommand)(currentElement, 'delete-current-element-and-parent-block-if-empty');\r\n\r\n            } else if (event.key === 'Delete' && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && isActiveContentBlank() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                event.preventDefault();\r\n\r\n                //TODO: transform into a command\r\n                let currentElement = document.activeElement;\r\n\r\n                _j_window__WEBPACK_IMPORTED_MODULE_1__.focusOnNext(document.activeElement);\r\n                (0,_command_factory__WEBPACK_IMPORTED_MODULE_0__.executeCommand)(currentElement, 'delete-current-element-and-parent-block-if-empty');\r\n\r\n            } else if (event.key === 'Escape' && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && isActiveContentBlank() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                //TODO: write the code to select the all text\r\n\r\n            } else if (event.key === 'Escape' && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && isActiveContentBlank() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                event.preventDefault();\r\n                selectContentWhenHitEscape();\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n\r\n// Block options operations is operations related to the Block Options. Show the block options, hide the block options, filter, ...\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    document.addEventListener('keydown', function (event) {\r\n\r\n        if (event.target.classList.contains('key-trigger')) {\r\n\r\n            if (event.key === '/' && !_j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n                const command = _command_factory__WEBPACK_IMPORTED_MODULE_0__.createCommand(\r\n                    _command_factory__WEBPACK_IMPORTED_MODULE_0__.OPERATIONS.BLOCK_OPTIONS.SHOW_BLOCK_OPTIONS);\r\n\r\n                command.execute();\r\n            } else if (event.key === 'Escape' && _j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                const elementToFocusAfterHide = event.target;\r\n\r\n                const command = _command_factory__WEBPACK_IMPORTED_MODULE_0__.createCommand(\r\n                    _command_factory__WEBPACK_IMPORTED_MODULE_0__.OPERATIONS.BLOCK_OPTIONS.HIDE_BLOCK_OPTIONS, [elementToFocusAfterHide]);\r\n\r\n                command.execute();\r\n            } else if (event.key === 'ArrowDown' && _j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && event.target.isContentEditable) {\r\n                event.preventDefault();\r\n\r\n                const command = _command_factory__WEBPACK_IMPORTED_MODULE_0__.createCommand(\r\n                    _command_factory__WEBPACK_IMPORTED_MODULE_0__.OPERATIONS.BLOCK_OPTIONS.MOVE_FAKE_FOCUS_TO_NEXT_OPTION);\r\n\r\n                command.execute();\r\n\r\n            } else if (event.key === 'ArrowUp' && _j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && event.target.isContentEditable) {\r\n                event.preventDefault();\r\n\r\n                const command = _command_factory__WEBPACK_IMPORTED_MODULE_0__.createCommand(\r\n                    _command_factory__WEBPACK_IMPORTED_MODULE_0__.OPERATIONS.BLOCK_OPTIONS.MOVE_FAKE_FOCUS_TO_PREVIOUS_OPTION);\r\n\r\n                command.execute();\r\n\r\n            } else if (event.key === 'Enter' && _j_window__WEBPACK_IMPORTED_MODULE_1__.blockOptionsManager.isShowingBlockOptions() && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n                const command = _command_factory__WEBPACK_IMPORTED_MODULE_0__.createCommand(\r\n                    _command_factory__WEBPACK_IMPORTED_MODULE_0__.OPERATIONS.BLOCK_OPTIONS.APPLY_SELECTED_FAKE_FOCUS_TYPE);\r\n\r\n                command.execute();\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\nfunction isActiveContentBlank() {\r\n    return document.activeElement.textContent.trim() === '';\r\n}\r\n\r\nfunction createNewElementWhenHitEnter(event) {\r\n    let contentElement = event.target.closest('.johannes-content-element');\r\n\r\n    if (contentElement.classList.contains('list')) {\r\n        (0,_command_factory__WEBPACK_IMPORTED_MODULE_0__.executeCommand)(event.target, 'create-list-element');\r\n    } else {\r\n        (0,_command_factory__WEBPACK_IMPORTED_MODULE_0__.executeCommand)(event.target, 'create-default-block');\r\n    }\r\n}\n\n//# sourceURL=webpack://johannes/./src/keypress-events.js?");

/***/ }),

/***/ "./src/memento.js":
/*!************************!*\
  !*** ./src/memento.js ***!
  \************************/
/***/ (() => {

eval("// Pilhas para undo e redo\r\nlet undoStack = [];\r\nlet redoStack = [];\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Elemento do editor\r\n    const editor = document.querySelector('.content');\r\n\r\n    if (editor) {\r\n        // Evento para detectar mudanças e salvar o estado antes de mudar\r\n        editor.addEventListener('input', () => {\r\n            saveState();\r\n        });\r\n\r\n        // Função para salvar o estado atual do editor\r\n        function saveState() {\r\n            // Clone do conteúdo atual do editor\r\n            const currentState = editor.innerHTML;\r\n            undoStack.push(currentState);\r\n        }\r\n        \r\n        // Função para desfazer\r\n        function undo() {\r\n            if (undoStack.length > 0) {\r\n                const stateToRestore = undoStack.pop();\r\n                redoStack.push(editor.innerHTML);\r\n                editor.innerHTML = stateToRestore;\r\n            }\r\n        }\r\n\r\n        // Função para refazer\r\n        function redo() {\r\n            if (redoStack.length > 0) {\r\n                const stateToApply = redoStack.pop();\r\n                undoStack.push(editor.innerHTML);\r\n                editor.innerHTML = stateToApply;\r\n            }\r\n        }\r\n\r\n        // Adicionando eventos de teclado para undo e redo\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                undo();\r\n                event.preventDefault();\r\n            } else if (event.ctrlKey && event.key === 'y') {\r\n                redo();\r\n                event.preventDefault();\r\n            }\r\n        });\r\n\r\n        // Inicializar o estado do editor\r\n        saveState();\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://johannes/./src/memento.js?");

/***/ }),

/***/ "./src/rich-text.js":
/*!**************************!*\
  !*** ./src/rich-text.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _j_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./j-window */ \"./src/j-window.js\");\n/* harmony import */ var _j_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./j-selection */ \"./src/j-selection.js\");\n/* harmony import */ var _j_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./j-anchor */ \"./src/j-anchor.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction showTextFormattingBar(event) {\r\n\r\n    (0,_j_selection__WEBPACK_IMPORTED_MODULE_1__.saveSelection)();\r\n\r\n    changeTurnIntoButtonText();\r\n\r\n    const selection = window.getSelection();\r\n\r\n    if (selection.rangeCount > 0 && document.querySelector('.johannes-editor').contains(selection.anchorNode) && selection.toString().trim() !== '') {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        let range = selection.getRangeAt(0);\r\n        let rect = range.getBoundingClientRect();\r\n\r\n        textFormattingBar.style.display = 'flex';\r\n        textFormattingBar.style.left = `${rect.left + window.scrollX - 50}px`;\r\n        textFormattingBar.style.top = `${rect.top + window.scrollY - textFormattingBar.offsetHeight - 10}px`;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction clearTextFormattingButtonActive() {\r\n    linkTextButton.classList.remove('text-formatting-button-active');\r\n    boldTextButton.classList.remove('text-formatting-button-active');\r\n    italicTextButton.classList.remove('text-formatting-button-active');\r\n    underlineTextButton.classList.remove('text-formatting-button-active');\r\n    codeTextButton.classList.remove('text-formatting-button-active');\r\n    strikeThroughTextButton.classList.remove('text-formatting-button-active');\r\n    mathTextButton.classList.remove('text-formatting-button-active');\r\n}\r\n\r\nfunction updateTextFormattingActiveButtons() {\r\n\r\n    const selectedTags = getSelectedTags();\r\n\r\n    selectedTags.forEach(tag => {\r\n\r\n        if (tag == \"a\") {\r\n            linkTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n\r\n        if (tag == \"strong\") {\r\n            boldTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n\r\n        if (tag == \"em\") {\r\n            italicTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n\r\n        if (tag == \"u\") {\r\n            underlineTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n\r\n        if (tag == \"s\") {\r\n            strikeThroughTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n\r\n        if (tag == \"code\") {\r\n            codeTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n\r\n        if (tag == \"math\") {\r\n            mathTextButton.classList.add('text-formatting-button-active');\r\n        }\r\n    });\r\n}\r\n\r\nfunction getSelectedTags() {\r\n    const selection = window.getSelection();\r\n    const tags = [];\r\n\r\n    const tagNames = [\"STRONG\", \"S\", \"EM\", \"U\", \"CODE\", \"MATH\", \"A\"];\r\n\r\n    if (selection.rangeCount) {\r\n        const range = selection.getRangeAt(0);\r\n        const startContainer = range.startContainer;\r\n        const endContainer = range.endContainer;\r\n\r\n        if (startContainer !== endContainer) {\r\n            const commonAncestor = range.commonAncestorContainer;\r\n            const elements = commonAncestor.nodeType === 1 ? commonAncestor.querySelectorAll(\"*\") : [];\r\n\r\n            elements.forEach(el => {\r\n                if (tagNames.includes(el.tagName) && selection.containsNode(el, true)) {\r\n                    tags.push(el.tagName.toLowerCase());\r\n                }\r\n            });\r\n        } else {\r\n            let node = startContainer.nodeType === 1 ? startContainer : startContainer.parentNode;\r\n            while (node && node !== document) {\r\n                if (tagNames.includes(node.tagName)) {\r\n                    tags.push(node.tagName.toLowerCase());\r\n                }\r\n                node = node.parentNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    return [...new Set(tags)];\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    boldTextButton.addEventListener('click', function (event) {\r\n        toggleSelectedTextTo('strong');\r\n        clearSelection();\r\n        (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n    });\r\n\r\n    italicTextButton.addEventListener('click', function () {\r\n        toggleSelectedTextTo('em');\r\n        clearSelection();\r\n        (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n    });\r\n\r\n    underlineTextButton.addEventListener('click', function () {\r\n        toggleSelectedTextTo('u');\r\n        clearSelection();\r\n        (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n    });\r\n\r\n    codeTextButton.addEventListener('click', function () {\r\n        toggleSelectedTextTo('code');\r\n        clearSelection();\r\n        (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n    });\r\n\r\n    strikeThroughTextButton.addEventListener('click', function () {\r\n        toggleSelectedTextTo('s');\r\n        clearSelection();\r\n        (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n    });\r\n\r\n    mathTextButton.addEventListener('click', function () {\r\n        toggleSelectedTextTo('math');\r\n        clearSelection();\r\n        (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n    });\r\n\r\n    linkTextButton.addEventListener('click', function () {\r\n        _j_anchor__WEBPACK_IMPORTED_MODULE_2__.save(toggleSelectedTextTo('a'));\r\n\r\n        if (_j_anchor__WEBPACK_IMPORTED_MODULE_2__.any()) {\r\n            showInputLinkBox();\r\n        }\r\n    });\r\n\r\n    linkBoxInput.addEventListener('keypress', function (event) {\r\n        if (event.key === 'Enter') {\r\n            urlInsert();\r\n            clearSelection();\r\n            (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\nfunction urlInsert() {\r\n    const url = linkBoxInput.value.trim();\r\n    if (!url) return;\r\n\r\n    // Simples verificação de URL\r\n    if (!url.match(/^https?:\\/\\/.+/)) {\r\n        alert('Please enter a valid URL.');\r\n        return;\r\n    }\r\n\r\n    _j_anchor__WEBPACK_IMPORTED_MODULE_2__.setURL(url);\r\n\r\n    //Move this to windows manager\r\n    linkBox.style.display = 'none';\r\n\r\n    _j_anchor__WEBPACK_IMPORTED_MODULE_2__.clear();\r\n\r\n\r\n    //Ops\r\n    linkBoxInput.value = '';\r\n}\r\n\r\n\r\nfunction toggleSelectedTextTo(tagName, classList = '') {\r\n    let newElement = null;\r\n    const selection = window.getSelection();\r\n    if (!selection.rangeCount) return;\r\n\r\n    const range = selection.getRangeAt(0);\r\n    const selectedText = range.toString().trim();\r\n    if (!selectedText) return;\r\n\r\n    const container = range.commonAncestorContainer;\r\n\r\n    // Verificar se a seleção atual está dentro de uma tag específica\r\n    let formattedElement = null;\r\n\r\n    if (container.nodeType === 3) { // Nó de texto\r\n        formattedElement = container.parentNode.tagName.toLowerCase() === tagName.toLowerCase() ? container.parentNode : null;\r\n    } else {\r\n        formattedElement = container.tagName.toLowerCase() === tagName.toLowerCase() ? container : container.querySelector(tagName);\r\n    }\r\n\r\n    if (formattedElement) {\r\n        // A seleção está dentro da formatação especificada, então devemos remover\r\n        const parent = formattedElement.parentNode;\r\n        while (formattedElement.firstChild) {\r\n            parent.insertBefore(formattedElement.firstChild, formattedElement);\r\n        }\r\n        parent.removeChild(formattedElement);\r\n\r\n        // Mesclar nós de texto adjacentes\r\n        parent.normalize();\r\n\r\n        // Atualizar a seleção para refletir as mudanças\r\n        range.setStart(parent, 0);\r\n        range.setEnd(parent, parent.childNodes.length);\r\n    } else {\r\n        // A seleção não está na formatação especificada, então adicionar\r\n        newElement = document.createElement(tagName);\r\n\r\n        if (tagName == 'mark') {\r\n            let classes = classList.split(',').filter(e => e.length > 0);\r\n\r\n            for (let className of classes) {\r\n                newElement.classList.add(className);\r\n            }\r\n        }\r\n\r\n        try {\r\n            range.surroundContents(newElement);\r\n        } catch (e) {\r\n            console.error(\"Erro ao aplicar a tag:\", e);\r\n            return;\r\n        }\r\n\r\n        // Atualizar a seleção para refletir as mudanças\r\n        range.selectNodeContents(newElement);\r\n    }\r\n\r\n    // Restaurar a seleção\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n\r\n    return newElement;\r\n}\r\n\r\n\r\nfunction clearSelection() {\r\n    const selection = window.getSelection();\r\n    selection.removeAllRanges();\r\n}\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    //MOUSE-UP\r\n    document.addEventListener('mouseup', function (event) {\r\n        if (window.getSelection().toString().trim() !== '') {\r\n\r\n            clearTextFormattingButtonActive();\r\n            showTextFormattingBar(event);\r\n            updateTextFormattingActiveButtons();\r\n\r\n        } else if (!event.target.closest('#linkBox') && !event.target.closest('#link-text-button')) {\r\n\r\n            console.log('MOUSEUP ocultar tool text-formatting-bar e link-box');\r\n\r\n            (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n        }\r\n    });\r\n\r\n    //KEY\r\n    document.addEventListener('keyup', function (event) {\r\n        if (event.key === 'Shift' && window.getSelection().toString().trim() !== '') {\r\n            // text selected\r\n\r\n            showTextFormattingBar(event);\r\n\r\n        } else if (event.key === 'Escape') {\r\n            // scape hide the link-box and text-formatting-bar\r\n            console.log('ESC ocultar tool text-formatting-bar e link-box');\r\n\r\n            (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n        }\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n\r\n// function adjustWidth() {\r\n//     const selectedOption = turnIntoSelect.options[turnIntoSelect.selectedIndex];\r\n//     const tempSpan = document.createElement(\"span\");\r\n//     tempSpan.style.visibility = \"hidden\";\r\n//     tempSpan.style.position = \"fixed\";\r\n//     tempSpan.style.whiteSpace = \"nowrap\";\r\n//     tempSpan.innerText = selectedOption.text;\r\n//     document.body.appendChild(tempSpan);\r\n//     turnIntoSelect.style.width = tempSpan.offsetWidth + 24 + \"px\"; // +20 para incluir o padding e o botão de dropdown\r\n//     document.body.removeChild(tempSpan);\r\n// }\r\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    turnIntoButton.addEventListener('click', function () {\r\n\r\n        if (turnIntoSelect.style.display == 'none') {\r\n            (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.closeAllDependentBox)();\r\n            turnIntoSelect.style.display = 'flex';\r\n        } else {\r\n            turnIntoSelect.style.display = 'none';\r\n        }\r\n    });\r\n});\r\n\r\n\r\nfunction changeTurnIntoButtonText() {\r\n\r\n    let text = getBlockTypeText();\r\n\r\n    turnIntoButton.querySelector('span').innerText = text;\r\n}\r\n\r\nfunction getBlockTypeText() {\r\n    let currentBlockRange = window.getSelection().getRangeAt(0);\r\n\r\n    let commonAncestor = currentBlockRange.commonAncestorContainer;\r\n\r\n    if (commonAncestor.nodeType === 3) { //* text node */\r\n        commonAncestor = commonAncestor.parentNode;\r\n    }\r\n\r\n    const currentBlock = commonAncestor.closest('.johannes-content-element');\r\n\r\n    if (currentBlock.tagName === 'H1') {\r\n        return 'Heading 1';\r\n    } else if (currentBlock.tagName === 'H2') {\r\n        return 'Heading 2';\r\n    } else if (currentBlock.tagName === 'H3') {\r\n        return 'Heading 3';\r\n    } else if (currentBlock.tagName === 'H4') {\r\n        return 'Heading 4';\r\n    } else if (currentBlock.tagName === 'H5') {\r\n        return 'Heading 5';\r\n    } else if (currentBlock.tagName === 'H6') {\r\n        return 'Heading 6';\r\n    } else if (currentBlock.tagName === 'P') {\r\n        return 'Text';\r\n    } else if (currentBlock.tagName === 'UL' && currentBlock.classList.contains('checkbox-list')) {\r\n        return 'Todo list';\r\n    } else if (currentBlock.tagName === 'UL') {\r\n        return 'Bulleted list';\r\n    } else if (currentBlock.tagName === 'OL') {\r\n        return 'Numbered list';\r\n    } else if (currentBlock.tagName === 'BLOCKQUOTE') {\r\n        return 'Quote';\r\n    } else if (currentBlock.tagName === 'PRE') {\r\n        return 'Code';\r\n    } else {\r\n        return '';\r\n    }\r\n\r\n}\r\n\r\n\r\n//Show more options\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    moreTextOptionButton.addEventListener('click', function () {\r\n        if (moreTextOptionSelect.style.display == 'none') {\r\n            showMoreOptions();\r\n        } else {\r\n            hideMoreOptions();\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\nfunction showMoreOptions() {\r\n    (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.closeAllDependentBox)();\r\n    moreTextOptionSelect.style.display = 'flex';\r\n}\r\n\r\nfunction hideMoreOptions() {\r\n    moreTextOptionSelect.style.display = 'none';\r\n\r\n}\r\n\r\n//Show color options\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    colorTextButton.addEventListener('click', function () {\r\n        if (colorTextOptionSelect.style.display == 'none') {\r\n            showColorOptions();\r\n        } else {\r\n            hideColorOptions();\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\nfunction showColorOptions() {\r\n    (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.closeAllDependentBox)();\r\n    colorTextOptionSelect.style.display = 'flex';\r\n}\r\n\r\nfunction hideColorOptions() {\r\n    colorTextOptionSelect.style.display = 'none';\r\n\r\n}\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    colorTextOptionSelect.querySelectorAll('.option').forEach(option => {\r\n        option.addEventListener('click', function (event) {\r\n            let background = event.target.closest('.option').getAttribute('data-color');\r\n            toggleSelectedTextTo('mark', background);\r\n            clearSelection();\r\n            (0,_j_window__WEBPACK_IMPORTED_MODULE_0__.tryHideTextFormattingBar)();\r\n        });\r\n    });\r\n});\n\n//# sourceURL=webpack://johannes/./src/rich-text.js?");

/***/ }),

/***/ "./src/switch-block.js":
/*!*****************************!*\
  !*** ./src/switch-block.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _element_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element-factory.js */ \"./src/element-factory.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"./src/helper.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_helper_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _j_window_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./j-window.js */ \"./src/j-window.js\");\n/* harmony import */ var _switch_block_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./switch-block.css */ \"./src/switch-block.css\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Close the options wrapper when click out\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const editor = document.querySelector('.johannes-editor');\r\n\r\n    if (editor) {\r\n        document.addEventListener('mousedown', function (event) {\r\n            const optionsWrapper = document.querySelector('.block-options-wrapper');\r\n\r\n            if (optionsWrapper) {\r\n                const isClickInsideOptions = optionsWrapper.contains(event.target);\r\n                const mainMouseButton = event.button === 0;\r\n\r\n                if (!isClickInsideOptions && mainMouseButton) {\r\n                    optionsWrapper.style.display = 'none';\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const editor = document.querySelector('.johannes-editor');\r\n\r\n    const blockOptions = document.querySelector('.johannes-editor > .block-options-wrapper');\r\n    let triggerElement = null;\r\n    let currentDraggableBlock = null;\r\n    let currentFocusedOption = null;\r\n    let filterText = '';\r\n\r\n    if (editor) {\r\n        editor.addEventListener('keydown', function (event) {\r\n\r\n            if (event.key === '/' && event.target.isContentEditable && blockOptions.style.display === 'none' && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                // setTimeout(() => {\r\n\r\n                //     const target = event.target;\r\n\r\n                //     if (target.closest('.draggable-block')) {\r\n                //         event.preventDefault(); // Avoid / be inserted\r\n                //         currentDraggableBlock = target.closest('.draggable-block');\r\n                //         triggerElement = target;\r\n\r\n                //         removeDisplayNoneFromAllBlockOptions();\r\n\r\n                //         filterText = '';\r\n                //         showBlockOptions();\r\n                //         let firstOption = blockOptions.querySelector('.option');\r\n                //         removeAllVirtualFocus();\r\n                //         currentFocusedOption = changeVirtualFocus(triggerElement, firstOption);\r\n                //     }\r\n\r\n                // }, 0);\r\n\r\n            } else if (event.key === 'Escape' && event.target.isContentEditable && blockOptions.style.display !== 'none' && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n                // event.preventDefault();\r\n                // if (triggerElement) {\r\n                //     triggerElement.focus();\r\n\r\n                //     currentFocusedOption.classList.remove('block-options-focused');\r\n                // }\r\n\r\n                // document.querySelector('.block-options-wrapper').style.display = 'none';\r\n                // filterText = '';\r\n                // removeDisplayNoneFromAllBlockOptions();\r\n\r\n            } else if (event.key === 'Enter' && event.target.isContentEditable && (blockOptions.style.display !== 'none' && blockOptions.style.display !== '')) {\r\n\r\n                event.preventDefault();\r\n\r\n                currentFocusedOption.classList.remove('block-options-focused');\r\n                let option = currentFocusedOption;\r\n\r\n                if (option) {\r\n\r\n                    const block = triggerElement.closest('.draggable-block');\r\n                    const blockType = option.getAttribute('data-type');\r\n\r\n                    const lastSlashIndex = triggerElement.innerText.lastIndexOf('/');\r\n                    triggerElement.innerText = lastSlashIndex !== -1 ? triggerElement.innerText.slice(0, lastSlashIndex) : triggerElement.innerText;\r\n\r\n                    transformBlock(block, blockType);\r\n                }\r\n\r\n            } else if (event.key === 'ArrowDown' && event.target.isContentEditable && blockOptions.style.display !== 'none') {\r\n                // event.preventDefault();\r\n\r\n                // currentFocusedOption = moveToNextOption(currentFocusedOption, triggerElement);\r\n\r\n            } else if (event.key === 'ArrowUp' && event.target.isContentEditable && blockOptions.style.display !== 'none') {\r\n                // event.preventDefault();\r\n\r\n                // currentFocusedOption = moveToPreviousOption(currentFocusedOption, triggerElement);\r\n\r\n            } else if (event.key === 'Backspace' && event.target.isContentEditable && (blockOptions.style.display !== 'none' && blockOptions.style.display !== '')) {\r\n\r\n                if (filterText.length > 0) {\r\n\r\n                    filterText = filterText.slice(0, -1);\r\n\r\n                    updateBlockVisibility(filterText);\r\n\r\n                    let firstVisibleOption = findFirstVisibleOption();\r\n\r\n                    removeAllVirtualFocus();\r\n\r\n                    currentFocusedOption = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changeVirtualFocus)(triggerElement, firstVisibleOption);\r\n\r\n                } else {\r\n                    blockOptions.style.display = 'none';\r\n                }\r\n\r\n\r\n            } else if (/^[a-z0-9]$/i.test(event.key) && event.target.isContentEditable && blockOptions.style.display !== 'none' && !event.ctrlKey && !event.shiftKey && !event.altKey) {\r\n\r\n                filterText += event.key.toLowerCase();\r\n                updateBlockVisibility(filterText);\r\n\r\n                let firstVisibleOption = findFirstVisibleOption();\r\n                removeAllVirtualFocus();\r\n                currentFocusedOption = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changeVirtualFocus)(triggerElement, firstVisibleOption);\r\n            }\r\n\r\n        });\r\n\r\n\r\n        // Added listeners in options\r\n        document.querySelectorAll('.block-options .option').forEach(option => {\r\n            option.addEventListener('click', function () {\r\n                const type = this.getAttribute('data-type');\r\n                if (currentDraggableBlock) {\r\n                    transformBlock(currentDraggableBlock, type);\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\n\r\nfunction updateBlockVisibility(filter) {\r\n    let sections = document.querySelectorAll('.johannes-editor .block-options-wrapper section');\r\n\r\n    sections.forEach(section => {\r\n        let options = section.querySelectorAll('.option');\r\n        let allHidden = true;\r\n\r\n        options.forEach(option => {\r\n            const type = option.getAttribute('data-type');\r\n            const title = option.querySelector('.block-title').textContent.toLowerCase();\r\n\r\n            if (type.includes(filter) || title.includes(filter.toLowerCase())) {\r\n                option.style.display = '';\r\n                allHidden = false;\r\n            } else {\r\n                option.style.display = 'none';\r\n            }\r\n        });\r\n\r\n        section.style.display = allHidden ? 'none' : '';\r\n    });\r\n\r\n    let emptyListIndicator = document.querySelector('.empty-block-options');\r\n\r\n    let allOptions = document.querySelectorAll('.johannes-editor .block-options-wrapper .option');\r\n\r\n    let hasVisibleOption = Array.from(allOptions).some(option => {\r\n        let style = window.getComputedStyle(option);\r\n        return style.display !== 'none';\r\n    });\r\n\r\n    if (hasVisibleOption) {\r\n        emptyListIndicator.style.display = 'none';\r\n\r\n    } else {\r\n        emptyListIndicator.style.display = 'block';\r\n    }\r\n}\r\n\r\n\r\nfunction removeDisplayNoneFromAllBlockOptions() {\r\n    let sections = document.querySelectorAll('.johannes-editor .block-options-wrapper section');\r\n\r\n    sections.forEach(section => {\r\n        let options = section.querySelectorAll('.option');\r\n\r\n        options.forEach(option => {\r\n            option.style.display = '';\r\n        });\r\n\r\n        section.style.display = '';\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction isElementVisible(element) {\r\n    return element && element.style.display !== 'none' && element.style.visibility !== 'hidden' && element.offsetParent !== null;\r\n}\r\n\r\n\r\n\r\n//Added event to listen turnIntoSelect options\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    turnIntoSelect.querySelectorAll('.option').forEach(option => {\r\n        option.addEventListener('click', function (event) {\r\n\r\n            let type = this.getAttribute('data-type');\r\n            let selection = window.getSelection();\r\n\r\n            if (!selection.rangeCount) return;\r\n            let selectedNode = selection.getRangeAt(0).startContainer;\r\n\r\n            let currentDraggableBlock = selectedNode.nodeType === 3 ?\r\n                selectedNode.parentNode.closest('.draggable-block') :\r\n                selectedNode.closest('.draggable-block');\r\n            if (currentDraggableBlock) {\r\n                transformBlock(currentDraggableBlock, type);\r\n            }\r\n\r\n            (0,_j_window_js__WEBPACK_IMPORTED_MODULE_2__.closeAllDependentBox)();\r\n            (0,_j_window_js__WEBPACK_IMPORTED_MODULE_2__.tryHideTextFormattingBar)();\r\n\r\n            // turnIntoSelect.style.display = 'none';\r\n            // blockOptionsWrapper.style.display = 'none';\r\n        });\r\n    });\r\n});\n\n//# sourceURL=webpack://johannes/./src/switch-block.js?");

/***/ }),

/***/ "./src/text-blocks-from-newlines.js":
/*!******************************************!*\
  !*** ./src/text-blocks-from-newlines.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element-factory */ \"./src/element-factory.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./src/helper.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_helper__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const content = document.querySelector('.johannes-editor > .content');\r\n\r\n    content.addEventListener('paste', function (event) {\r\n\r\n        if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        const target = event.target;\r\n\r\n        if (target.tagName === 'P' && target.isContentEditable) {\r\n            const clipboardData = event.clipboardData || window.clipboardData;\r\n            const pastedText = clipboardData.getData('text');\r\n\r\n            const blocks = pastedText.split('\\n').filter(block => block.trim() !== '');\r\n\r\n            target.innerText = blocks[0];\r\n\r\n            let currentTarget = target.closest('.draggable-block');\r\n\r\n            for (let i = 1; i < blocks.length; i++) {\r\n                const newParagraph = (0,_element_factory__WEBPACK_IMPORTED_MODULE_0__.createNewDraggableParagraphElement)();\r\n                const lastContentBlock = newParagraph.querySelector('.johannes-content-element');\r\n                lastContentBlock.innerText = blocks[i];\r\n                currentTarget.insertAdjacentElement('afterend', newParagraph);\r\n                currentTarget = newParagraph;\r\n            }\r\n\r\n            (0,_helper__WEBPACK_IMPORTED_MODULE_1__.focusOnTheEndOfTheText)(currentTarget.querySelector('.johannes-content-element'));\r\n        }\r\n    });\r\n});\n\n//# sourceURL=webpack://johannes/./src/text-blocks-from-newlines.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;